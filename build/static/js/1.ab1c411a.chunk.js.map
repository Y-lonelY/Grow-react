{"version":3,"sources":["components/GrowResult/result-nodata.gif","service/Weight/index.ts","components/SupIcon/index.tsx","components/Skeleton/header.tsx","components/Skeleton/index.tsx","components/GrowDatePicker/index.tsx","components/GrowResult/index.tsx","view/Weight/context.tsx","view/Weight/filter.tsx","view/Weight/main.tsx","view/Weight/index.tsx"],"names":["module","exports","__webpack_require__","p","getUsers","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","users","wrap","_context","prev","next","get","concat","sent","Array","isArray","abrupt","map","_ref2","value","label","stop","apply","this","arguments","queryWeights","_ref3","_callee2","data","weights","_context2","post","length","_ref4","updatedAt","user","weight","date","moment","format","_x","IconFont","createFromIconfontCN","scriptUrl","initStyle","fontSize","React","memo","props","type","_props$style","style","react_default","createElement","SupIcon_IconFont","assign","icon","subLabel","children","context","Consumer","assets","row","className","justify","align","borderBottom","col","SupIcon","Skeleton","header","filter","RangePicker","DatePicker","GrowDatePicker","locale","dateRange","当月","startOf","endOf","近7天","subtract","近30天","近90天","currentMonth","sevenDays","thirtyDays","ninetyDays","ranges","allowClear","onChange","change","Component","contextType","LocaleContext","GrowResult","result","status","nodata","require","src","alt","title","subTitle","es_result","extra","initState","loading","drawerDisplay","createContext","state","dispatch","Option","Select","WeightFilter","_useContext","useContext","WeightContext","_useState","useState","start","end","_useState2","slicedToArray","params","setParams","_query","useEffect","query","GrowDatePicker_GrowDatePicker","dates","dateStrings","_dates","objectSpread","es_select","width","marginLeft","placeholder","onSelect","showSearch","key","WeightMain","dv","DataSet","name","createView","source","minHeight","textAlign","spin","marginTop","rows","gutter","padding","span","es_button","size","onClick","BizCharts","height","autoFit","shape","position","color","shared","skeleton","reducer","action","WeightView","_useReducer","useReducer","_useReducer2","_init","init","Weight_context","Provider","Skeleton_Skeleton","drawer","placement","closable","onClose","visible","es_form","Item"],"mappings":"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","file":"static/js/1.ab1c411a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/result-nodata.824da35a.gif\";","import { get, post, patch, del } from '@/cluster/request'\nimport moment from 'moment'\n\nconst prefix = '/weight'\n\n// Get all users\nexport const getUsers = async () => {\n  const users = await get(`${prefix}/users`)\n  if (users && Array.isArray(users)) {\n    return users.map(({ value }) => {\n      return {\n        value,\n        label: value,\n      }\n    })\n  }\n  return []\n}\n\n// Query weight list\nexport const queryWeights = async (data) => {\n  const weights = await post(`${prefix}/query`, data)\n  if (weights && weights.length) {\n    return weights.map(({ updatedAt, user, weight }) => {\n      return {\n        date: moment(updatedAt).format('YYYY-MM-DD'),\n        user,\n        weight\n      }\n    })\n  }\n  return []\n}\n","import React from 'react'\nimport { createFromIconfontCN } from '@ant-design/icons'\nimport { IconType } from './types'\n\nconst IconFont = createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_1509932_h3mvm2g1zm9.js',\n})\n\nconst initStyle = {\n  fontSize: '20px'\n}\n\n/**\n * manage icons in iconfont.cn\n * @param {String} type used to control the display\n */\nexport default React.memo(\n  function SuperIcon(props: IconType) {\n    const { type, style = {} } = props\n    return (\n      <IconFont\n        type={`icon-${type}`}\n        style={Object.assign({}, initStyle, style)}\n      />\n    )\n  }\n)","import React from 'react'\nimport { LocaleContext } from '@/cluster/context'\nimport { Col, Row } from 'antd'\nimport SuperIcon from '@/components/SupIcon'\nimport { HeaderType } from './types'\n\n/**\n * header\n * 对于 function 组件通过 LocaleContext.Consumer 来获取 context\n */\nexport default React.memo(function HeaderMemo(props: HeaderType) {\n  const { icon, label, subLabel, children } = props\n  return (\n    <LocaleContext.Consumer>\n      {/* value 在这里代表 this.context */}\n      {({ assets }) => (\n        <Row\n          className=\"h-skeleton\"\n          justify=\"space-between\"\n          align=\"top\"\n          style={{\n            borderBottom: '1px solid #',\n          }}\n        >\n          <Col className=\"title\">\n            <SuperIcon type={icon.type} style={icon.style} />\n            <span className=\"label\">\n              {label}\n              {subLabel && <span className=\"sub\">{subLabel}</span>}\n            </span>\n          </Col>\n          <Col>{children}</Col>\n        </Row>\n      )}\n    </LocaleContext.Consumer>\n  )\n})\n","import React from 'react'\nimport Header from './header'\nimport { SkeletonType } from './types'\nimport './index.scss'\n\nexport default function Skeleton(props: SkeletonType) {\n  return (\n    <div className=\"m-skeleton\">\n      <Header {...props.header} />\n      <section className=\"s-skeleton\">\n        {props.filter && <div className=\"filter-panel\">{props.filter}</div>}\n        {props.children && <div className=\"main-panel\">{props.children}</div>}\n      </section>\n    </div>\n  )\n}\n","import React from 'react'\nimport { DatePicker } from 'antd'\nimport { LocaleContext } from '@/cluster/context'\nimport moment from 'moment'\nimport { DatePickerType } from './types'\nimport './index.scss'\n\nconst { RangePicker } = DatePicker\n\nexport default class GrowDatePicker extends React.Component<DatePickerType> {\n  static contextType = LocaleContext\n\n  render() {\n    const locale = this.context.locale\n    let dateRange = {}\n\n    // set international content\n    if (locale === 'zh_cn') {\n      dateRange = {\n        当月: [moment().startOf('month'), moment().endOf('month')],\n        近7天: [moment().subtract(7, 'days'), moment()],\n        近30天: [moment().subtract(30, 'days'), moment()],\n        近90天: [moment().subtract(90, 'days'), moment()],\n      }\n    } else if (locale === 'en_us') {\n      dateRange = {\n        currentMonth: [moment().startOf('month'), moment().endOf('month')],\n        sevenDays: [moment().subtract(7, 'days'), moment()],\n        thirtyDays: [moment().subtract(30, 'days'), moment()],\n        ninetyDays: [moment().subtract(90, 'days'), moment()],\n      }\n    }\n\n    return (\n      <RangePicker\n        className=\"grow-range-picker\"\n        value={this.props.value}\n        ranges={dateRange}\n        locale={locale}\n        allowClear={false}\n        onChange={this.props.change}\n      />\n    )\n  }\n}\n","import React from 'react'\nimport { Result } from 'antd'\nimport { ResultType } from './types'\n\nexport default function GrowResult(props: ResultType) {\n  let result\n  switch (props.status) {\n    case 'self-404':\n      const nodata = require('./result-nodata.gif')\n      const icon = <img src={nodata} alt=\"no data\" />\n      result = Object.assign({}, props, {\n        title: 'Empty',\n        subTitle: 'Sorry, there is no data. Maybe change the query params!',\n        icon,\n        // cover default status, to control display color\n        status: 'info'\n      })\n      break\n    default:\n      result = Object.assign({}, props)\n  }\n\n  return (\n    <Result title={result.title} subTitle={result.subTitle} status={result.status} icon={result.icon} extra={result.extra} />\n  )\n}\n","import React from 'react'\nimport { WeightContext, WeightState } from './types'\n\nexport const initState: WeightState = {\n  users: [],\n  weights: [],\n  loading: true,\n  drawerDisplay: false\n}\n\nexport default React.createContext<WeightContext>({\n  state: initState,\n  dispatch: () => { return false }\n})","import React, { useState, useContext, useEffect } from 'react'\nimport { queryWeights } from '@/service/Weight'\nimport { Select } from 'antd'\nimport moment from 'moment'\nimport { GrowDatePicker } from '@/components'\nimport WeightContext from './context'\nimport { QueryParams } from './types'\n\nconst { Option } = Select\n\nexport default function WeightFilter() {\n  const { state, dispatch } = useContext(WeightContext)\n  // query params\n  const [params, setParams] = useState<QueryParams>({\n    user: '',\n    start: moment().subtract(30, 'days'),\n    end: moment(),\n  })\n\n  async function query() {\n    // format date params, from moment.Moment to string\n    const data = Object.assign({}, params, {\n      start: params.start.format('YYYY-MM-DD'),\n      end: params.end.format('YYYY-MM-DD'),\n    })\n    // loadding true\n    dispatch({ type: 'updateLoading', loading: true })\n    // get weight list\n    const weights = await queryWeights(data)\n    // trigger to update\n    dispatch({ type: 'queryWeight', weights })\n    // cancel loading\n    dispatch({ type: 'updateLoading', loading: false })\n  }\n\n  function userSelect(user) {\n    setParams({\n      ...params,\n      user,\n    })\n  }\n\n  function dateRangeChange(dates, dateStrings) {\n    const [start, end] = dates\n    setParams({\n      ...params,\n      start,\n      end,\n    })\n  }\n\n  // watch params change then to query\n  useEffect(() => {\n    query()\n  }, [params])\n\n  return (\n    <div>\n      {/* data picker */}\n      <GrowDatePicker\n        value={[params.start, params.end]}\n        style={{ fontSize: '12px' }}\n        change={dateRangeChange}\n      />\n      {/* users select */}\n      <Select\n        style={{ width: '200px', marginLeft: '20px' }}\n        placeholder=\"select a user\"\n        value={params.user}\n        onSelect={userSelect}\n        showSearch\n      >\n        <Option key=\"all\" value=\"\">\n          All Users\n        </Option>\n        {state.users.length > 0 &&\n          state.users.map(({ value, label }) => {\n            return (\n              <Option key={value} value={value}>\n                {label}\n              </Option>\n            )\n          })}\n      </Select>\n    </div>\n  )\n}\n","import React, { useState, useContext } from 'react'\nimport { Button, Row, Col, Spin } from 'antd'\nimport { GrowResult } from '@/components'\nimport { Chart, Line, Point, Tooltip } from 'bizcharts'\nimport DataSet from '@antv/data-set'\nimport WeightContext from './context'\n\nexport default function WeightMain(props: {}) {\n  const { state, dispatch } = useContext(WeightContext)\n  // declare a data set\n  const ds = new DataSet({\n    state: {\n      name: 'weight',\n    },\n  })\n  const dv = ds.createView().source(state.weights)\n\n  return (\n    <div\n      className=\"weight-main\"\n      style={{ width: '100%', minHeight: '500px', textAlign: 'center' }}\n    >\n      {state.loading ? (\n        <Spin style={{ marginTop: '200px' }} />\n      ) : dv.rows && dv.rows.length > 0 ? (\n        <Row\n          justify=\"space-between\"\n          align=\"top\"\n          gutter={6}\n          style={{ padding: '20px 0' }}\n        >\n          <Col span={16}>\n            <Row\n              className=\"chart-filter-panel\"\n              style={{ fontSize: '12px' }}\n              align=\"middle\"\n              justify=\"start\"\n            >\n              <Col className=\"length\" span={6}>\n                <b>Totol {dv.rows.length} records</b>\n              </Col>\n              <Col className=\"handler\" span={18}>\n                <Button\n                  className=\"create\"\n                  size=\"small\"\n                  onClick={() => {\n                    dispatch({ type: 'updateDrawer', drawerDisplay: true })\n                  }}\n                >\n                  Create\n                </Button>\n              </Col>\n            </Row>\n            <Chart\n              data={dv.rows}\n              height={500}\n              padding={[10, 20, 50, 40]}\n              autoFit\n            >\n              <Line shape=\"smooth\" position=\"date*weight\" color=\"user\" />\n              <Point position=\"date*weight\" color=\"user\" />\n              <Tooltip shared={true} />\n            </Chart>\n          </Col>\n          <Col span={8}>panel</Col>\n        </Row>\n      ) : (\n        <GrowResult\n          status=\"self-404\"\n          extra={<Button size=\"small\">create a new record</Button>}\n        />\n      )}\n    </div>\n  )\n}\n","import React, { useEffect, useReducer } from 'react'\nimport { Drawer, Form, Select } from 'antd'\nimport { getUsers } from '@/service/Weight'\nimport Skeleton from '@/components/Skeleton'\nimport WeightFilter from './filter'\nimport WeightMain from './main'\nimport WeightContext, { initState } from './context'\nimport { WeightState } from './types'\nimport './index.scss'\n\nconst skeleton = {\n  icon: {\n    type: 'header-weight',\n  },\n  label: 'weight',\n}\n\nfunction reducer(state: WeightState, action): WeightState {\n  switch (action.type) {\n    case 'updateUsers':\n      return {\n        ...state,\n        users: action.users,\n      }\n    case 'queryWeight':\n      return {\n        ...state,\n        weights: action.weights,\n      }\n    case 'updateLoading':\n      return {\n        ...state,\n        loading: action.loading,\n      }\n    case 'updateDrawer':\n      return {\n        ...state,\n        drawerDisplay: action.drawerDisplay\n      }\n    default:\n      return state\n  }\n}\n\nexport default function WeightView() {\n  const [state, dispatch] = useReducer(reducer, initState)\n\n  async function init() {\n    // get current users for select options\n    const users = await getUsers()\n    dispatch({\n      type: 'updateUsers',\n      users,\n    })\n  }\n\n  // maps to componentMounted\n  useEffect(() => {\n    init()\n  }, [])\n\n  return (\n    <WeightContext.Provider value={{ state, dispatch }}>\n      <div className=\"weight-content\">\n        <Skeleton header={skeleton} filter={<WeightFilter />}>\n          <WeightMain />\n        </Skeleton>\n        <Drawer\n          title=\"Create a new weight record\"\n          placement=\"right\"\n          width={360}\n          closable={false}\n          onClose={() => { dispatch({ type: 'updateDrawer', drawerDisplay: false })}}\n          visible={state.drawerDisplay}\n        >\n          <Form>\n            <Form.Item label=\"user\"></Form.Item>\n          </Form>\n        </Drawer>\n      </div>\n    </WeightContext.Provider>\n  )\n}\n"],"sourceRoot":""}