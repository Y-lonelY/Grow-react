{"version":3,"sources":["assets/locale.js","components/Utils/index.ts","cluster/context.js","config/sysConfig.ts","cluster/request.js","service/mock/homepage.js","service/homepage/focusService.ts","view/Homepage/Focus/drawerView.tsx","view/Homepage/Focus/index.tsx","view/Homepage/Trivia/context.ts","service/homepage/triviaService.ts","view/Homepage/Trivia/Drawer.tsx","view/Homepage/Trivia/index.tsx","router/AsyncComponent.jsx","router/config.ts","view/Homepage/index.tsx","router/index.js","service/mock/header.js","service/Header/index.ts","view/Header/Content.tsx","view/Header/Treasure.tsx","components/Clock/index.tsx","view/Header/index.tsx","view/Footer/index.tsx","service/system/service.ts","index.d.ts","components/ErrorBoundary/index.tsx","app.tsx","store/Exercise/reducer.tsx","store/store.tsx","serviceWorker.tsx","index.tsx","components/Override/index.tsx","config/colors.ts","store/Exercise/action.tsx"],"names":["__webpack_require__","d","__webpack_exports__","locale","zh_cn","group","link","mainTitle","add","edit","cancel","submit","title","start","end","details","status","priority","pistures","normalize","denormalization","update","all","tools","id","name","color","target","footerModule","mockMode","realMode","about","placeholder","addGroup","headerItems","label","type","icon","practiceConfig","exercise","style","fontSize","program","homepageConfig","focus","showAddBtn","trivia","priorityList","1","2","3","4","en_us","formatSeconds","value","months","Math","floor","h","m","s","date","concat","LocaleContext","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_assets_locale__WEBPACK_IMPORTED_MODULE_1__","React","createContext","assets","customizeLocale","toggleLocale","config","setUseMock","useMock","window","sessionStorage","getItem","hugeScreen","screen","availWidth","isdevelop","setItem","String","location","reload","pending","Map","service","Axios","create","baseURL","timeout","headers","X-Requested-With","removePending","url","method","JSON","stringify","params","data","join","has","get","delete","interceptors","request","use","cancelToken","CancelToken","set","addPending","error","Promise","reject","response","isCancel","console","message","_ref4","Object","_Users_yango_Growup_YlonelY_GrowingUp_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_yango_Growup_YlonelY_GrowingUp_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","res","_args","arguments","wrap","_context","prev","next","length","undefined","sent","abrupt","t0","stop","_x","apply","this","post","_ref5","_callee2","_args2","_context2","_x2","_x3","addData","success","focusData","list","start_date","end_date","pictures","triviaGroup","triviaList","user","last_update","addFocusRecord","_ref","asyncToGenerator","regenerator_default","editFocusRecord","_ref2","getFocusList","_ref3","_callee3","_context3","TextArea","Input","DrawerForm","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getEditInitValue","state","moment","pics","split","map","item","index","uid","updateInitValues","currentType","setState","initValue","assign","initCurrentData","forEach","current","renderTitle","context","react_default","createElement","className","row","backgroundColor","priorityColors","renderEndDate","diffSeconds","diff","diffStr","addForm","freshList","drawerClose","editForm","changeFocusList","changeFocusType","e","form","validateFields","err","values","format","Number","editPanel","normFile","Array","isArray","fileList","initValues","getFieldDecorator","es_form","labelCol","span","wrapperCol","Item","initialValue","rules","required","max","input","size","date_picker","allowClear","showToday","disabledDate","endOf","rows","valuePropName","es_switch","checkedChildren","unCheckedChildren","es_radio","Group","entries","key","getValueFromEvent","upload","action","listType","es_button","justify","onClick","marginRight","divider","dashed","carousel","autoplay","src","prevProps","resetFields","PureComponent","contextType","DrawerView","Form","connect","FocusView","initData","showPannel","visible","_this2","headConfig","head","addEvent","Override","es_list","grid","gutter","column","dataSource","renderItem","card","hoverable","extra","bind","headStyle","drawer","width","closable","placement","onClose","drawerView","TriviaContext","groupList","groupMap","panelType","dispatch","addTriviaGroupItem","updateTriviaGroupItem","getTriviaGroupList","getTriviaList","_callee4","_context4","updateTrivia","_callee5","_context5","_x4","addTrivia","_ref6","_callee6","_context6","_x5","Option","Select","DrawerContent","useContext","_useContext2","initFormData","_useState","useState","_useState2","slicedToArray","formData","setFormData","_useState3","show","trigger","_useState4","groupData","setGroupData","_props$form","addGroupItem","objectSpread","submitGroup","initTriviaGroup","useEffect","es_col","offset","onChange","addonAfter","height","es_select","Drawer_TextArea","log","RenderEmpty","event","reducer","TriviaView","_useReducer","useReducer","_useReducer2","Paragraph","Typography","initTriviaList","initGroupMap","-127","jumpLink","open","deleteTrivia","Provider","showSearch","Trivia_Option","languageColors","toLocaleLowerCase","copyable","Trivia_RenderEmpty","asyncComponent","getTargetComponent","_React$Component","AsyncComponent","component","inherits","createClass","then","md","default","Target","Component","routeConfig","path","Consumer","Focus","Trivia","Router","paths","filter","redirect","react_router","exact","headerMockData","getHeaderMetadata","RenderContent","metadata","links","components","count","history","useHistory","go","push","Fragment","_item","v","Search","Treasure","expanded","_init","init","popover","content","onSearch","Clock","timeInterval","timeFlow","endDate","days","dayOfYear","fullDays","isLeapYear","leftDays","percent","toFixed","progress","strokeColor","from","to","setInterval","clearInterval","Header","Layout","FlowHeader","handleRouter","viewHomepage","toggle","Header_Header","paddingLeft","src_components_Clock","pathname","withRouter","Footer","FlowFooter","checkMockMode","mode","showAboutPanel","Footer_Footer","modal","onCancel","ExerciseTypes","ErrorBoundary","setErrorType","includes","handleError","errorParams","project","origin","document","referrer","stack","navigator","userAgent","connection","effectiveType","appVersion","reason","addErrorRecord","hasError","info","componentStack","addEventListener","errorEvent","children","Content","App","toggleLocal","lang","components_ErrorBoundary","react_router_dom","config_provider","zh_CN","en_US","systemConfig","layout","view_Header","router","view_Footer","defaultExerciseState","dailyList","sumMap","exerciseData","TS","DAILYCHARTS","defaultGoalListState","goalListData","GOALLIST","toConsumableArray","goalList","defaultProgramState","programOverviewData","PROGRAMOVERVIEW","FOCUSLIST","FOCUSTYPE","store","createStore","combineReducers","applyMiddleware","thunk","Boolean","hostname","match","setTheme","Theme","ReactDOM","render","es","src_app","getElementById","serviceWorker","ready","registration","unregister","SuperEmpty","SuperIcon","antd__WEBPACK_IMPORTED_MODULE_1__","antd__WEBPACK_IMPORTED_MODULE_2__","antd__WEBPACK_IMPORTED_MODULE_3__","antd__WEBPACK_IMPORTED_MODULE_4__","antd__WEBPACK_IMPORTED_MODULE_5__","_cluster_context__WEBPACK_IMPORTED_MODULE_6__","IconFont","Icon","createFromIconfontCN","scriptUrl","memo","mTop","styleObject","marginTop","image","Empty","PRESENTED_IMAGE_SIMPLE","description","colors","rankBlueColor","colorsPlus","colors_16","colors_pie","colors_pie_16","uncategorized","react","react hook","changeChart","changeGoalList","changeProgramOverview","_Users_yango_Growup_YlonelY_GrowingUp_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"0FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAO,IAAMA,EAAS,CACpBC,MAAO,CACLC,MAAO,eACPC,KAAM,eACNC,UAAW,SACXC,IAAK,eACLC,KAAM,eACNC,OAAQ,eACRC,OAAQ,eACRC,MAAO,eACPC,MAAO,eACPC,IAAK,eACLC,QAAS,eACTC,OAAQ,eACRC,SAAU,qBACVC,SAAU,eACVC,UAAW,qBACXC,gBAAiB,2BACjBC,OAAQ,eACRC,IAAK,eACLC,MAAO,CACL,CACEC,GAAI,EACJC,KAAM,iCACNC,MAAO,UACPC,OAAQ,cAGZC,aAAc,CACZC,SAAU,uCACVC,SAAU,uCACVC,MAAO,gBAETC,YAAa,CACX1B,KAAM,6CACN2B,SAAU,4BAEZC,YAAa,CACX,CACEV,GAAI,EACJW,MAAO,eACPC,KAAM,OACNT,OAAQ,aAEV,CACES,KAAM,aAER,CACEZ,GAAI,EACJW,MAAO,eACPC,KAAM,OACNT,OAAQ,8BACRU,KAAM,QAER,CACEb,GAAI,EACJW,MAAO,SACPC,KAAM,OACNT,OAAQ,8BACRU,KAAM,WAGVC,eAAgB,CACdC,SAAU,CACRF,KAAM,CACJD,KAAM,gBACNI,MAAO,CACLC,SAAU,SAGd7B,MAAO,gBAET8B,QAAS,CACPL,KAAM,CACJD,KAAM,YACNI,MAAO,CACLC,SAAU,SAGd7B,MAAO,iBAGX+B,eAAgB,CACdC,MAAO,CACLP,KAAM,CACJD,KAAM,cACNI,MAAO,CACLC,SAAU,SAGd7B,MAAO,eACPiC,YAAY,GAEdC,OAAQ,CACNT,KAAM,CACJD,KAAM,cACNI,MAAO,CACLC,SAAU,SAGd7B,MAAO,2BACPiC,YAAY,IAGhBE,aAAc,CACZC,EAAG,eACHC,EAAG,eACHC,EAAG,eACHC,EAAG,iBAGPC,MAAO,CACL/C,MAAO,QACPC,KAAM,OACNC,UAAW,SACXC,IAAK,MACLC,KAAM,OACNC,OAAQ,SACRC,OAAQ,SACRC,MAAO,QACPC,MAAO,QACPC,IAAK,MACLC,QAAS,UACTC,OAAQ,SACRC,SAAU,WACVC,SAAU,WACVC,UAAW,YACXC,gBAAiB,kBACjBC,OAAQ,SACRC,IAAK,cAELC,MAAO,CACL,CACEC,GAAI,EACJC,KAAM,WACNC,MAAO,UACPC,OAAQ,cAGZC,aAAc,CACZC,SAAU,YACVC,SAAU,YACVC,MAAO,SAETC,YAAa,CACX1B,KAAM,qBACN2B,SAAU,oBAEZC,YAAa,CACX,CACEV,GAAI,EACJW,MAAO,WACPC,KAAM,OACNT,OAAQ,aAEV,CACES,KAAM,aAER,CACEZ,GAAI,EACJW,MAAO,OACPC,KAAM,OACNT,OAAQ,8BACRU,KAAM,QAER,CACEb,GAAI,EACJW,MAAO,SACPC,KAAM,OACNT,OAAQ,8BACRU,KAAM,WAGVC,eAAgB,CACdC,SAAU,CACRF,KAAM,CACJD,KAAM,gBACNI,MAAO,CACLC,SAAU,SAGd7B,MAAO,YAET8B,QAAS,CACPL,KAAM,CACJD,KAAM,YACNI,MAAO,CACLC,SAAU,SAGd7B,MAAO,YAGX+B,eAAgB,CACdC,MAAO,CACLP,KAAM,CACJD,KAAM,cACNI,MAAO,CACLC,SAAU,SAGd7B,MAAO,QACPiC,YAAY,GAEdC,OAAQ,CACNT,KAAM,CACJD,KAAM,cACNI,MAAO,CACLC,SAAU,SAGd7B,MAAO,SACPiC,YAAY,IAGhBE,aAAc,CACZC,EAAG,UACHC,EAAG,OACHC,EAAG,MACHC,EAAG,8CCvNF,SAASE,EAAcC,GAC5B,IAAMC,EAASC,KAAKC,MAAMH,EAAK,QACzBrD,EAAIuD,KAAKC,MAAMH,EAAK,OACpBI,EAAIF,KAAKC,OAAOH,EAAY,KAAJrD,EAAW,IAAM,MACzC0D,EAAIH,KAAKC,OAAOH,EAAY,KAAJI,GAAY,IACpCE,EAAIN,EAAQ,GACdO,EAAO,GAyBX,OAvBIN,EAAS,EACXM,GAAI,GAAAC,OAAOP,EAAP,uBAEAtD,EAAI,IACN4D,GAAI,GAAAC,OAAO,GAAAA,OAAW7D,EAAXA,EAAI,EAAJ,gBAGTyD,EAAI,IACNG,GAAI,GAAAC,OAAO,GAAAA,OAAWJ,EAAXA,EAAI,EAAJ,cAITzD,EAAI,IACF0D,EAAI,IACNE,GAAI,GAAAC,OAAO,GAAAA,OAAWH,EAAXA,EAAI,EAAJ,gBAGTC,EAAI,IACNC,GAAI,GAAAC,OAAO,GAAAA,OAAWF,EAAXA,EAAI,EAAJ,kBAKVC,EAnCT7D,EAAAC,EAAAC,EAAA,sBAAAmD,wGCAArD,EAAAC,EAAAC,EAAA,sBAAA6D,IAAA,IAAAC,EAAAhE,EAAA,GAAAiE,EAAAjE,EAAAkE,EAAAF,GAAAG,EAAAnE,EAAA,KAGa+D,EAAgBK,IAAMC,cAAc,CAC/ClE,OAAQ,QACRmE,OAAQC,IAAgBnE,MACxBoE,aAAc,WAAQ,OAAO,sCCA/BxE,EAAAC,EAAAC,EAAA,sBAAAuE,IAAAzE,EAAAC,EAAAC,EAAA,sBAAAwE,IAAA,IAAMD,EAAuB,CAEzBE,QAAsD,OAA7CC,OAAOC,eAAeC,QAAQ,WAAsB,OAASF,OAAOC,eAAeC,QAAQ,WAGpGC,WAAYH,OAAOI,OAAOC,WAAa,KAGvCC,WAA2D,GAG/D,SAASR,EAAWpB,GAChBsB,OAAOC,eAAeM,QAAQ,UAAWC,OAAO9B,IAChDsB,OAAOS,SAASC,2KCfdC,EAAU,IAAIC,IAGdC,EAAUC,IAAMC,OAAO,CAC3BC,QAAS,SACTC,QAAS,IACTC,QAAS,CAAEC,mBAAoB,oBA2B3BC,EAAgB,SAACvB,GACrB,IAAMwB,EAAM,CACVxB,EAAOyB,OACPzB,EAAOwB,IACPE,KAAKC,UAAU3B,EAAO4B,QACtBF,KAAKC,UAAU3B,EAAO6B,OACtBC,KAAK,KACHhB,EAAQiB,IAAIP,KAECV,EAAQkB,IAAIR,EAC3BvF,CAAOuF,GACPV,EAAQmB,OAAOT,KAanBR,EAAQkB,aAAaC,QAAQC,IAC3B,SAACpC,GAGC,OAFAuB,EAAcvB,GAjDC,SAACA,GAClB,IAAMwB,EAAM,CACVxB,EAAOyB,OACPzB,EAAOwB,IACPE,KAAKC,UAAU3B,EAAO4B,QACtBF,KAAKC,UAAU3B,EAAO6B,OACtBC,KAAK,KAGP9B,EAAOqC,YACLrC,EAAOqC,aACP,IAAIpB,IAAMqB,YAAY,SAACrG,GAChB6E,EAAQiB,IAAIP,IAEfV,EAAQyB,IAAIf,EAAKvF,KAoCrBuG,CAAWxC,GACJA,GAET,SAACyC,GACC,OAAOC,QAAQC,OAAOF,KAK1BzB,EAAQkB,aAAaU,SAASR,IAC5B,SAACQ,GAEC,OADArB,EAAcqB,EAAS5C,QAChB4C,GAET,SAACH,GAMC,OAJIxB,IAAM4B,SAASJ,IAEjBK,QAAQL,MAAMA,EAAMM,SAEfL,QAAQC,OAAOF,KASnB,IAAMT,EAAG,eAAAgB,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAAO9B,GAAP,IAAAxB,EAAAuD,EAAAC,EAAAC,UAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAY7D,EAAZwD,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAAqB,GAArBG,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEG7C,EAAQgB,IAAIR,EAAKxB,GAFpB,cAETuD,EAFSI,EAAAK,KAAAL,EAAAM,OAAA,SAIRV,GAJQ,OAAAI,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAMfZ,IAAQN,MAAM9B,OAAMgD,EAAAO,KANL,yBAAAP,EAAAQ,SAAAb,EAAA,iBAAH,gBAAAc,GAAA,OAAApB,EAAAqB,MAAAC,KAAAb,YAAA,GAaHc,EAAI,eAAAC,EAAAvB,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAAoB,EAAOjD,EAAKK,GAAZ,IAAA7B,EAAAuD,EAAAmB,EAAAjB,UAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,cAAkB7D,EAAlB0E,EAAAZ,OAAA,QAAAC,IAAAW,EAAA,GAAAA,EAAA,GAA2B,GAA3BC,EAAAf,KAAA,EAAAe,EAAAd,KAAA,EAEC7C,EAAQuD,KAAK/C,EAAKK,EAAM7B,GAFzB,cAEXuD,EAFWoB,EAAAX,KAAAW,EAAAV,OAAA,SAIVV,GAJU,OAAAoB,EAAAf,KAAA,EAAAe,EAAAT,GAAAS,EAAA,SAMjB5B,IAAQN,MAAM9B,OAAMgE,EAAAT,KANH,yBAAAS,EAAAR,SAAAM,EAAA,iBAAJ,gBAAAG,EAAAC,GAAA,OAAAL,EAAAH,MAAAC,KAAAb,YAAA,6jBC1GJqB,EAAU,CACrBC,SAAS,GAGEC,EAAY,CACvBD,SAAS,EACTlD,KAAM,CACJoD,KAAM,CACJ,CACElI,GAAI,EACJZ,MAAO,eACPG,QAAS,yIACT4I,WAAY,sBACZC,SAAU,GACVC,SAAU,GACV7I,OAAQ,EACRC,SAAU,GAEZ,CACEO,GAAI,EACJZ,MAAO,iCACPG,QACE,wPACF4I,WAAY,sBACZC,SAAU,GACVC,SAAU,GACV7I,OAAQ,EACRC,SAAU,MAML6I,EAAc,CACzBN,SAAS,EACTlD,KAAM,CACJoD,KAAM,CACJ,CACElI,GAAI,EACJC,KAAM,gBACNT,OAAQ,GAEV,CACEQ,GAAI,EACJC,KAAM,aACNT,OAAQ,GAEV,CACEQ,GAAI,EACJC,KAAM,QACNT,OAAQ,MAMH+I,EAAa,CACxBP,SAAS,EACTlD,KAAM,CACJoD,KAAM,CACJ,CACElI,GAAI,EACJT,QACE,iTACFT,KAAM,qDACN0J,KAAM,KACN3J,MAAO,EACPoB,KAAM,aACNwI,YAAa,uBAEf,CACEzI,GAAI,EACJT,QACE,ujBACFT,KAAM,GACN0J,KAAM,KACN3J,MAAO,EACPoB,KAAM,aACNwI,YAAa,uBAEf,CACEzI,GAAI,EACJT,QACE,0VACFT,KAAM,GACN0J,KAAM,KACN3J,MAAO,EACPoB,KAAM,QACNwI,YAAa,uBAEf,CACEzI,GAAI,EACJT,QACE,0VACFT,KAAM,GACN0J,KAAM,KACN3J,MAAO,EACPoB,KAAM,QACNwI,YAAa,uBAEf,CACEzI,GAAI,EACJT,QACE,0VACFT,KAAM,GACN0J,KAAM,KACN3J,MAAO,EACPoB,KAAM,QACNwI,YAAa,2CCvGftF,EAA6B,UAAnBF,IAAOE,QAKVuF,EAAc,eAAAC,EAAAzC,OAAA0C,EAAA,EAAA1C,CAAA2C,EAAAxC,EAAAC,KAAG,SAAAC,EAAO1B,GAAP,IAAA2B,EAAA,OAAAqC,EAAAxC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAChB3D,EADgB,CAAAyD,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EACAiB,EADA,OAAAnB,EAAAO,GAAAP,EAAAK,KAAAL,EAAAE,KAAA,sBAAAF,EAAAE,KAAA,EACgBU,YAAK,YAAa3C,GADlC,OAAA+B,EAAAO,GAAAP,EAAAK,KAAA,cACtBT,EADsBI,EAAAO,IAEnBa,SACPhC,IAAQN,MAAM,kCAHYkB,EAAAM,OAAA,SAKrBV,GALqB,yBAAAI,EAAAQ,SAAAb,MAAH,gBAAAc,GAAA,OAAAsB,EAAArB,MAAAC,KAAAb,YAAA,GAQdoC,EAAe,eAAAC,EAAA7C,OAAA0C,EAAA,EAAA1C,CAAA2C,EAAAxC,EAAAC,KAAG,SAAAoB,EAAO7C,GAAP,IAAA2B,EAAA,OAAAqC,EAAAxC,EAAAM,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,WACjB3D,EADiB,CAAAyE,EAAAd,KAAA,eAAAc,EAAAd,KAAA,EACDiB,EADC,OAAAH,EAAAT,GAAAS,EAAAX,KAAAW,EAAAd,KAAA,sBAAAc,EAAAd,KAAA,EACeU,YAAK,eAAgB3C,GADpC,OAAA+C,EAAAT,GAAAS,EAAAX,KAAA,cACvBT,EADuBoB,EAAAT,IAEpBa,SACPhC,IAAQN,MAAM,kCAHakC,EAAAV,OAAA,SAKtBV,GALsB,yBAAAoB,EAAAR,SAAAM,MAAH,gBAAAG,GAAA,OAAAkB,EAAAzB,MAAAC,KAAAb,YAAA,GAQfsC,EAAY,eAAAC,EAAA/C,OAAA0C,EAAA,EAAA1C,CAAA2C,EAAAxC,EAAAC,KAAG,SAAA4C,EAAOrE,GAAP,IAAA2B,EAAA,OAAAqC,EAAAxC,EAAAM,KAAA,SAAAwC,GAAA,cAAAA,EAAAtC,KAAAsC,EAAArC,MAAA,WACd3D,EADc,CAAAgG,EAAArC,KAAA,eAAAqC,EAAArC,KAAA,EAEhBmB,EAFgB,OAAAkB,EAAAhC,GAAAgC,EAAAlC,KAAAkC,EAAArC,KAAA,sBAAAqC,EAAArC,KAAA,EAGhB7B,YAAI,aAAc,CAAEJ,OAAQA,IAHZ,OAAAsE,EAAAhC,GAAAgC,EAAAlC,KAAA,cACpBT,EADoB2C,EAAAhC,IAIjBa,SACPhC,IAAQN,MAAM,8CALUyD,EAAAjC,OAAA,SAOnBV,GAPmB,yBAAA2C,EAAA/B,SAAA8B,MAAH,gBAAApB,GAAA,OAAAmB,EAAA3B,MAAAC,KAAAb,YAAA,qHCyBjB0C,EAAaC,IAAbD,SAEFE,cAGJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAAqB,KAAA+B,IACjBE,EAAAtD,OAAAwD,EAAA,EAAAxD,CAAAqB,KAAArB,OAAAyD,EAAA,EAAAzD,CAAAoD,GAAAM,KAAArC,KAAMgC,KA4LRM,iBAAmB,WACjB,IAAMvK,EACJkK,EAAKM,MAAMhF,KAAKsD,UAAyC,KAA7BoB,EAAKM,MAAMhF,KAAKsD,SACxC2B,IAAOP,EAAKM,MAAMhF,KAAKsD,UACvB,KACA4B,EAAOR,EAAKM,MAAMhF,KAAKuD,SACzBxD,EAAoB,GAOxB,GANAA,EAAOzF,MAAQoK,EAAKM,MAAMhF,KAAK1F,MAC/ByF,EAAOsD,WAAa4B,IAAOP,EAAKM,MAAMhF,KAAKqD,YAC3CtD,EAAOtF,QAAUiK,EAAKM,MAAMhF,KAAKvF,QACjCsF,EAAOuD,SAAW9I,EAClBuF,EAAOrF,OAAoC,IAA3BgK,EAAKM,MAAMhF,KAAKtF,OAChCqF,EAAOpF,SAAW+J,EAAKM,MAAMhF,KAAKrF,SAC9BuK,GAAiB,KAATA,EAAa,CACvB,IAAM9B,EAAO8B,EAAKC,MAAM,MACxBpF,EAAOwD,SAAWH,EAAKgC,IAAI,SAACC,EAAMC,GAChC,MAAO,CACLC,IAAKzG,OAAOwG,EAAQ,IACpBnK,KAAMkK,EACN3K,OAAQ,OACRiF,IAAK0F,EACLtE,SAAU,CACRpB,IAAK0F,MAMb,OAAOtF,GAzNU2E,EA6NnBc,iBAAmB,WACjB,IACIzF,EAAS,GAEXA,EADW,QAFA2E,EAAKD,MAAMtB,UAAUsC,YAGvB,CACPnL,MAAO,GACP+I,WAAY4B,MACZxK,QAAS,GACT6I,SAAU,KACV5I,QAAQ,EACRC,SAAU,EACV4I,SAAU,MAGHmB,EAAKK,mBAEhBL,EAAKgB,SAAS,CACZC,UAAWvE,OAAOwE,OAAO,GAAI7F,MA9Od2E,EAmPnBmB,gBAAkB,WACHnB,EAAKD,MAAMtB,UAAUC,KAC7B0C,QAAQ,SAAAT,GACPA,EAAKnK,KAAOwJ,EAAKD,MAAMsB,SACzBrB,EAAKgB,SACH,CACE1F,KAAMoB,OAAOwE,OAAO,GAAIP,IAE1B,WACEX,EAAKc,wBA5PId,EAoQnBsB,YAAc,WACZ,IAAMlK,EAAO4I,EAAKD,MAAMtB,UAAUsC,YAC5BzH,EAAS0G,EAAKuB,QAAQjI,OAC5B,GAAa,QAATlC,EACF,OAAOoK,EAAA3E,EAAA4E,cAAA,OAAKC,UAAU,SAASpI,EAAO9D,IAA/B,UACF,GAAa,SAAT4B,EACT,OAAOoK,EAAA3E,EAAA4E,cAAA,OAAKC,UAAU,SAASpI,EAAO7D,KAA/B,UACF,GAAa,SAAT2B,EAAiB,CAC1B,IAAMnB,EAAW+J,EAAKM,MAAMhF,KAAKrF,SAC3BL,EAAQoK,EAAKM,MAAMhF,KAAK1F,MAC9B,OACE4L,EAAA3E,EAAA4E,cAACE,EAAA,EAAD,CAAKvK,KAAK,QACRoK,EAAA3E,EAAA4E,cAAA,OACEC,UAAU,WACVlK,MAAO,CAAEoK,gBAAiBC,IAAe5L,EAAW,KAEnDqD,EAAOvB,aAAa9B,IAEvBuL,EAAA3E,EAAA4E,cAAA,OAAKC,UAAU,SAAS9L,MAtRboK,EA6RnB8B,cAAgB,WACd,IAAMxG,EAAO0E,EAAKM,MAAMhF,KAClBnE,EAAQmE,EAAKsD,UAA8B,KAAlBtD,EAAKsD,SAE9BmD,GADW5K,EAAQoJ,IAAOjF,EAAKsD,UAAY2B,OACpByB,KAAKzB,IAAOjF,EAAKqD,YAAa,WACrDsD,EAAU5J,YAAc0J,GAE9B,MADS,SAAAjJ,OAAO3B,EAAQmE,EAAKsD,SAAW,SAA/B,uBAAA9F,OAAyCmJ,IAnSjCjC,EAwSnBkC,QAxSmB,eAAA/C,EAAAzC,OAAA0C,EAAA,EAAA1C,CAAA2C,EAAAxC,EAAAC,KAwST,SAAAC,EAAM1B,GAAN,OAAAgE,EAAAxC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACU4B,EAAe7D,GADzB,WAAA+B,EAAAK,KAEAe,QAFA,CAAApB,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAIA0C,EAAKmC,YAJL,OAKNnC,EAAKD,MAAMqC,cACX5F,IAAQgC,QAAQ,iCAAS,GANnB,wBAAApB,EAAAQ,SAAAb,MAxSS,gBAAAc,GAAA,OAAAsB,EAAArB,MAAAC,KAAAb,YAAA,GAAA8C,EAmTnBqC,SAnTmB,eAAA9C,EAAA7C,OAAA0C,EAAA,EAAA1C,CAAA2C,EAAAxC,EAAAC,KAmTR,SAAAoB,EAAM7C,GAAN,OAAAgE,EAAAxC,EAAAM,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,cAAAc,EAAAd,KAAA,EACSgC,EAAgBjE,GADzB,WAAA+C,EAAAX,KAEDe,QAFC,CAAAJ,EAAAd,KAAA,eAAAc,EAAAd,KAAA,EAGD0C,EAAKmC,YAHJ,OAIPnC,EAAKD,MAAMqC,cACX5F,IAAQgC,QAAQ,iCAAS,EAAG,WAC1BwB,EAAKmB,oBANA,wBAAA/C,EAAAR,SAAAM,MAnTQ,gBAAAG,GAAA,OAAAkB,EAAAzB,MAAAC,KAAAb,YAAA,GAAA8C,EAgUnBmC,UAhUmBzF,OAAA0C,EAAA,EAAA1C,CAAA2C,EAAAxC,EAAAC,KAgUP,SAAA4C,IAAA,IAAA1C,EAAA,OAAAqC,EAAAxC,EAAAM,KAAA,SAAAwC,GAAA,cAAAA,EAAAtC,KAAAsC,EAAArC,MAAA,cAAAqC,EAAArC,KAAA,EACQkC,EAAa,CAAExJ,OAAQ,IAD/B,OACJgH,EADI2C,EAAAlC,KAEVuC,EAAKD,MAAMuC,gBAAgBtF,EAAI1B,KAAKoD,MAF1B,wBAAAiB,EAAA/B,SAAA8B,MAhUOM,EAsUnBtK,OAAS,WACPsK,EAAKD,MAAMwC,gBAAgB,SAvUVvC,EA2UnBrK,OAAS,SAAA6M,GACP,IAAInH,EAAS,GACb2E,EAAKD,MAAM0C,KAAKC,eAAe,SAACC,EAAKC,GACnC,GAAKD,EA4BH,MAAMA,EA1BN,GAAIC,EAAO/D,UAAY+D,EAAO/D,SAAStB,OAAS,EAAG,CACjD,IAAImB,EAAOkE,EAAO/D,SAAS6B,IAAI,SAAAC,GAC7B,OAAOA,EAAKtE,SAASpB,MAGvBI,EAAM,SAAeqD,EAAKnD,KAAK,WAE/BF,EAAM,SAAe,GAEvBA,EAAM,MAAYuH,EAAOhN,MACzByF,EAAM,QAAcuH,EAAO7M,QAAU6M,EAAO7M,QAAU,GACtDsF,EAAM,WAAiBkF,IAAOqC,EAAOjE,YAAYkE,OAC/C,uBAEFxH,EAAM,SAAeuH,EAAOhE,SACxB2B,IAAOqC,EAAOhE,UAAUiE,OAAO,uBAC/B,GACJxH,EAAM,SAAeuH,EAAO3M,SAC5BoF,EAAM,OAAauH,EAAO5M,OAAS,EAAI,EACE,QAArCgK,EAAKD,MAAMtB,UAAUsC,YACvBf,EAAKkC,QAAQ7G,GACiC,SAArC2E,EAAKD,MAAMtB,UAAUsC,cAC9B1F,EAAM,GAASyH,OAAO9C,EAAKD,MAAMsB,SACjCrB,EAAKqC,SAAShH,OAvWH2E,EAgXnB+C,UAAY,WACV/C,EAAKD,MAAMwC,gBAAgB,SAjXVvC,EAoXnBgD,SAAW,SAAAR,GACT,OAAIS,MAAMC,QAAQV,GACTA,EAEFA,GAAKA,EAAEW,UAtXdnD,EAAKM,MAAQ,CACXhF,KAAM,GACN2F,UAAW,IAJIjB,wEASjB,IAAM5I,EAAO2G,KAAKgC,MAAMtB,UAAUsC,YAC5BzF,EAAOyC,KAAKuC,MAAMhF,KAClB8H,EAAarF,KAAKuC,MAAMW,UACtBoC,EAAsBtF,KAAKgC,MAAM0C,KAAjCY,kBAKF/J,EAASyE,KAAKwD,QAAQjI,OACtBvB,EAAeuB,EAAOvB,aAE5B,OACEyJ,EAAA3E,EAAA4E,cAAA,OAAKC,UAAW3D,KAAKgC,MAAM2B,WACzBF,EAAA3E,EAAA4E,cAAA,OAAKC,UAAU,UAAU3D,KAAKuD,gBACnB,QAATlK,GAA2B,SAATA,IAClBoK,EAAA3E,EAAA4E,cAAC6B,EAAA,EAAD5G,OAAAwE,OAAA,CAAMQ,UAAS,QAAA5I,OAAU1B,IAXnB,CACVmM,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,MAUdhC,EAAA3E,EAAA4E,cAAC6B,EAAA,EAAKI,KAAN,CAAWvM,MAAOmC,EAAO1D,OACtByN,EAAkB,QAAS,CAC1BM,aAAcP,EAAWxN,MACzBgO,MAAO,CACL,CACEC,UAAU,EACVrH,QAAS,qBACTsH,IAAK,OANVT,CAUC7B,EAAA3E,EAAA4E,cAACsC,EAAA,EAAD,CACE/M,YAAW,GAAA8B,OAAKQ,EAAO9D,IAAZ,KAAAsD,OAAmBQ,EAAO1D,OACrCoO,KAAK,YAIXxC,EAAA3E,EAAA4E,cAAC6B,EAAA,EAAKI,KAAN,CAAWvM,MAAOmC,EAAOzD,OACtBwN,EAAkB,aAAc,CAC/BM,aAAcP,EAAWzE,WACzBiF,MAAO,CACL,CACEC,UAAU,EACVrH,QAAS,6BALd6G,CASC7B,EAAA3E,EAAA4E,cAACwC,EAAA,EAAD,CACED,KAAK,QACLE,YAAY,EACZC,WAAW,EACXC,aAAc,SAAAvL,GACZ,OAAOA,GAAQA,EAAO0H,MAAS8D,MAAM,aAK7C7C,EAAA3E,EAAA4E,cAAC6B,EAAA,EAAKI,KAAN,CAAWvM,MAAOmC,EAAOvD,SACtBsN,EAAkB,UAAW,CAC5BM,aAAcP,EAAWrN,SAD1BsN,CAGC7B,EAAA3E,EAAA4E,cAAC7B,EAAD,CACE0E,KAAM,EACNtN,YAAW,GAAA8B,OAAKQ,EAAO9D,IAAZ,KAAAsD,OAAmBQ,EAAOvD,aAI3CyL,EAAA3E,EAAA4E,cAAC6B,EAAA,EAAKI,KAAN,CAAWvM,MAAOmC,EAAOxD,KACtBuN,EAAkB,WAAY,CAC7BM,aAAcP,EAAWxE,UAD1ByE,CAEE7B,EAAA3E,EAAA4E,cAACwC,EAAA,EAAD,CAAYD,KAAK,QAAQE,YAAY,MAE1C1C,EAAA3E,EAAA4E,cAAC6B,EAAA,EAAKI,KAAN,CAAWvM,MAAOmC,EAAOtD,QACtBqN,EAAkB,SAAU,CAC3BM,aAAcP,EAAWpN,OACzBuO,cAAe,WAFhBlB,CAIC7B,EAAA3E,EAAA4E,cAAC+C,EAAA,EAAD,CACER,KAAK,QACLS,gBAAiBjD,EAAA3E,EAAA4E,cAACpK,EAAA,EAAD,CAAMD,KAAK,UAC5BsN,kBAAmBlD,EAAA3E,EAAA4E,cAACpK,EAAA,EAAD,CAAMD,KAAK,cAIpCoK,EAAA3E,EAAA4E,cAAC6B,EAAA,EAAKI,KAAN,CAAWvM,MAAOmC,EAAOrD,UACtBoN,EAAkB,WAAY,CAC7BM,aAAcP,EAAWnN,UAD1BoN,CAGC7B,EAAA3E,EAAA4E,cAACkD,EAAA,EAAMC,MAAP,KACGlI,OAAOmI,QAAQ9M,GAAc2I,IAAI,SAACC,EAAMC,GACvC,OACEY,EAAA3E,EAAA4E,cAACkD,EAAA,EAAD,CAAOG,IAAKlE,EAAOtI,MAAOwK,OAAOnC,EAAK,KACnCA,EAAK,SAOlBa,EAAA3E,EAAA4E,cAAC6B,EAAA,EAAKI,KAAN,CAAWvM,MAAOmC,EAAOpD,UACtBmN,EAAkB,WAAY,CAC7BM,aAAcP,EAAWvE,SACzB0F,cAAe,WACfQ,kBAAmBhH,KAAKiF,UAHzBK,CAKC7B,EAAA3E,EAAA4E,cAACuD,EAAA,EAAD,CAAQC,OAAO,kBAAkBC,SAAS,WACxC1D,EAAA3E,EAAA4E,cAAC0D,EAAA,EAAD,CAAQnB,KAAK,SACXxC,EAAA3E,EAAA4E,cAACpK,EAAA,EAAD,CAAMD,KAAK,WADb,aAONoK,EAAA3E,EAAA4E,cAACE,EAAA,EAAD,CAAKvK,KAAK,OAAOgO,QAAQ,OACb,SAAThO,GACCoK,EAAA3E,EAAA4E,cAAC0D,EAAA,EAAD,CACE/N,KAAK,UACLiO,QAAStH,KAAKrI,OACdsO,KAAK,QACLxM,MAAO,CAAE8N,YAAa,SAErBhM,EAAO5D,QAGZ8L,EAAA3E,EAAA4E,cAAC0D,EAAA,EAAD,CAAQ/N,KAAK,UAAUiO,QAAStH,KAAKpI,OAAQqO,KAAK,SAC/C1K,EAAO3D,UAKN,SAATyB,GACCoK,EAAA3E,EAAA4E,cAAA,OAAKC,UAAU,QACbF,EAAA3E,EAAA4E,cAACE,EAAA,EAAD,KACEH,EAAA3E,EAAA4E,cAAA,+BAAQnG,EAAKqD,YACb6C,EAAA3E,EAAA4E,cAAA,SAAI1D,KAAK+D,kBAEXN,EAAA3E,EAAA4E,cAAC8D,EAAA,EAAD,CAASC,QAAQ,IACC,KAAjBlK,EAAKvF,SACJyL,EAAA3E,EAAA4E,cAAA,WACED,EAAA3E,EAAA4E,cAACE,EAAA,EAAD,CAAKD,UAAU,WAAWpG,EAAKvF,SAC/ByL,EAAA3E,EAAA4E,cAAC8D,EAAA,EAAD,CAASC,QAAQ,KAGpBpC,EAAWvE,UACV2C,EAAA3E,EAAA4E,cAACgE,EAAA,EAAD,CAAU/D,UAAU,WAAWgE,UAAQ,GACpCtC,EAAWvE,SAAS6B,IAAI,SAACC,EAAMC,GAC9B,OACEY,EAAA3E,EAAA4E,cAAA,OAAKqD,IAAKlE,GACRY,EAAA3E,EAAA4E,cAAA,OAAKC,UAAU,gBAAgBiE,IAAKhF,EAAK1F,UAMnDuG,EAAA3E,EAAA4E,cAACE,EAAA,EAAD,CAAKD,UAAU,WAAWtK,KAAK,OAAOgO,QAAQ,OAC5C5D,EAAA3E,EAAA4E,cAAC0D,EAAA,EAAD,CAAQ/N,KAAK,UAAU4M,KAAK,QAAQqB,QAAStH,KAAKgF,WAC/CzJ,EAAO7D,qDAWP,QADAsI,KAAKgC,MAAMtB,UAAUsC,YAEhChD,KAAK+C,mBAEL/C,KAAKoD,6DAIUyE,GACb7H,KAAKgC,MAAMsB,UAAYuE,EAAUvE,SACnCtD,KAAKoD,kBAEHpD,KAAKgC,MAAMtB,UAAUsC,cAAgB6E,EAAUnH,UAAUsC,cAC3DhD,KAAKgC,MAAM0C,KAAKoD,cAChB9H,KAAK+C,2BA5Lc1H,IAAM0M,eAAzBhG,EACGiG,YAAchN,IA8XvB,IAAMiN,EAAaC,IAAKtL,OAAwB,CAC9ClE,KAAM,cADWwP,CAEhBnG,GAQYoG,mBANf,SAAAzJ,GACE,MAAO,CACLgC,UAFoChC,EAAbgC,YAMa,CACtC6D,oBACAC,qBAFa2D,CAGZF,GCjbGG,eACF,SAAAA,EAAYpG,GAAO,IAAAC,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAAqB,KAAAoI,IACfnG,EAAAtD,OAAAwD,EAAA,EAAAxD,CAAAqB,KAAArB,OAAAyD,EAAA,EAAAzD,CAAAyJ,GAAA/F,KAAArC,KAAMgC,KAuEVqG,SAxEmB1J,OAAA0C,EAAA,EAAA1C,CAAA2C,EAAAxC,EAAAC,KAwER,SAAAC,IAAA,IAAAC,EAAA,OAAAqC,EAAAxC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEWkC,EAAa,CAAExJ,OAAQ,IAFlC,OAEDgH,EAFCI,EAAAK,KAGPuC,EAAKD,MAAMuC,gBAAgBtF,EAAI1B,KAAKoD,MAH7B,wBAAAtB,EAAAQ,SAAAb,MAxEQiD,EA+EnBqG,WAAa,SAACjP,EAAeZ,GACzBwJ,EAAKD,MAAMwC,gBAAgBnL,GAC3B4I,EAAKgB,SAAS,CACVK,QAASyB,OAAOtM,GAChB8P,SAAS,KAnFEtG,EAwFnBoC,YAAc,WACVpC,EAAKgB,SAAS,CACVsF,SAAS,KAxFbtG,EAAKM,MAAQ,CACTgG,SAAS,EACTjF,SAAU,GAJCrB,wEAQV,IAAAuG,EAAAxI,KACCW,EAAOX,KAAKgC,MAAMtB,UAAUC,KAe9B8H,EAAazI,KAAKgC,MAAM0G,KAO5B,OALI/H,EAAKnB,OAAS,IACdiJ,EAAW3O,YAAa,EACxB2O,EAAWE,SAAW3I,KAAKsI,YAI3B7E,EAAA3E,EAAA4E,cAAA,OAAKC,UAAU,aACXF,EAAA3E,EAAA4E,cAACkF,EAAA,EAAWH,GACX9H,EAAKnB,OAAS,EACXiE,EAAA3E,EAAA4E,cAACmF,EAAA,EAAD,CACIC,KAAM,CAAEC,OAAQ,GAAIC,OAAQ,GAC5BC,WAAYjJ,KAAKgC,MAAMtB,UAAUC,KACjCuI,WAAY,SAAAtG,GAAI,OACZa,EAAA3E,EAAA4E,cAACmF,EAAA,EAAKlD,KAAN,KACIlC,EAAA3E,EAAA4E,cAACyF,EAAA,EAAD,CACIlD,KAAK,QACLtC,UAAU,OACVyF,WAAW,EACXC,MAAO5F,EAAA3E,EAAA4E,cAAC0D,EAAA,EAAD,CAAQzD,UAAU,OAAOsC,KAAK,QAAQqB,QAASkB,EAAKF,WAAWgB,KAAKd,EAAM,OAAQ5F,EAAKnK,IAAKY,KAAK,QAAOoK,EAAA3E,EAAA4E,cAACpK,EAAA,EAAD,CAAMD,KAAK,UAC1HkQ,UAAW,CAAE5Q,MAAOmL,IAAelB,EAAK1K,SAAW,IACnDL,MAAO+K,EAAK/K,OACZ4L,EAAA3E,EAAA4E,cAAA,KAAGC,UAAU,SAASf,EAAKhC,YAC3B6C,EAAA3E,EAAA4E,cAAA,KAAGC,UAAU,WAAWf,EAAK5K,cAIxCyL,EAAA3E,EAAA4E,cA1CG,WAChB,OACID,EAAA3E,EAAA4E,cAAA,OAAKC,UAAU,eACXF,EAAA3E,EAAA4E,cAAA,kHACqBD,EAAA3E,EAAA4E,cAAA,QAAMC,UAAU,QAAhB,4BADrB,4HAIAF,EAAA3E,EAAA4E,cAAA,SACID,EAAA3E,EAAA4E,cAAC0D,EAAA,EAAD,CAAQzD,UAAU,MAAM2D,QAASkB,EAAKF,WAAWgB,KAAKd,EAAM,OAAQnP,KAAK,UAAU4M,KAAK,SAAxF,gBADJ,6DAmCK,MAETxC,EAAA3E,EAAA4E,cAAC8F,EAAA,EAAD,CACI7F,UAAU,SACV8F,MAAO,IACPC,UAAU,EACVC,UAAU,QACVpB,QAASvI,KAAKuC,MAAMgG,QACpBqB,QAAS5J,KAAKqE,aACdZ,EAAA3E,EAAA4E,cAACmG,GAAD,CAAYlG,UAAU,UAAUL,QAAStD,KAAKuC,MAAMe,QAASe,YAAarE,KAAKqE,4DAQ3FrE,KAAKqI,kBAtEWhN,IAAM0M,eAsGfI,mBANf,SAAA3G,GACI,MAAO,CACHd,UAFgCc,EAAbd,YAMa,CACpC6D,oBACAC,qBAFW2D,CAGZC,mDCjHU0B,GAAgBzO,IAAMC,cAA6B,CAC5DiH,MAAO,CACHvB,WAAY,GACZ+I,UAAW,GACXC,SAAU,GACV1S,OAAQ,IACR2S,UAAW,GACX3G,SAAU,IACViF,SAAS,GAEb2B,SAAU,eCbRtO,GAA6B,UAAnBF,IAAOE,QAOVuO,GAAkB,eAAA/I,EAAAzC,OAAA0C,EAAA,EAAA1C,CAAA2C,EAAAxC,EAAAC,KAAG,SAAAC,EAAO1B,GAAP,IAAA2B,EAAA,OAAAqC,EAAAxC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAClB3D,GADkB,CAAAyD,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EACFiB,EADE,OAAAnB,EAAAO,GAAAP,EAAAK,KAAAL,EAAAE,KAAA,sBAAAF,EAAAE,KAAA,EACcU,YAAK,mBAAoB3C,GADvC,OAAA+B,EAAAO,GAAAP,EAAAK,KAAA,cACxBT,EADwBI,EAAAO,IAErBa,SACLhC,IAAQN,MAAM,kCAHYkB,EAAAM,OAAA,SAKvBV,GALuB,yBAAAI,EAAAQ,SAAAb,MAAH,gBAAAc,GAAA,OAAAsB,EAAArB,MAAAC,KAAAb,YAAA,GAQlBiL,GAAqB,eAAA5I,EAAA7C,OAAA0C,EAAA,EAAA1C,CAAA2C,EAAAxC,EAAAC,KAAG,SAAAoB,EAAO7C,GAAP,IAAA2B,EAAA,OAAAqC,EAAAxC,EAAAM,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,WACrB3D,GADqB,CAAAyE,EAAAd,KAAA,eAAAc,EAAAd,KAAA,EACLiB,EADK,OAAAH,EAAAT,GAAAS,EAAAX,KAAAW,EAAAd,KAAA,sBAAAc,EAAAd,KAAA,EACWU,YAAK,sBAAuB3C,GADvC,OAAA+C,EAAAT,GAAAS,EAAAX,KAAA,cAC3BT,EAD2BoB,EAAAT,IAExBa,SACLhC,IAAQN,MAAM,kCAHekC,EAAAV,OAAA,SAK1BV,GAL0B,yBAAAoB,EAAAR,SAAAM,MAAH,gBAAAG,GAAA,OAAAkB,EAAAzB,MAAAC,KAAAb,YAAA,GAQrBkL,GAAkB,eAAA3I,EAAA/C,OAAA0C,EAAA,EAAA1C,CAAA2C,EAAAxC,EAAAC,KAAG,SAAA4C,IAAA,IAAA1C,EAAA,OAAAqC,EAAAxC,EAAAM,KAAA,SAAAwC,GAAA,cAAAA,EAAAtC,KAAAsC,EAAArC,MAAA,WAClB3D,GADkB,CAAAgG,EAAArC,KAAA,eAAAqC,EAAArC,KAAA,EACFwB,EADE,OAAAa,EAAAhC,GAAAgC,EAAAlC,KAAAkC,EAAArC,KAAA,sBAAAqC,EAAArC,KAAA,EACkB7B,YAAI,qBADtB,OAAAkE,EAAAhC,GAAAgC,EAAAlC,KAAA,cACxBT,EADwB2C,EAAAhC,IAErBa,SACLhC,IAAQN,MAAM,8CAHYyD,EAAAjC,OAAA,SAKvBV,GALuB,yBAAA2C,EAAA/B,SAAA8B,MAAH,yBAAAD,EAAA3B,MAAAC,KAAAb,YAAA,GAQlBmL,GAAa,eAAA5L,EAAAC,OAAA0C,EAAA,EAAA1C,CAAA2C,EAAAxC,EAAAC,KAAG,SAAAwL,EAAOjN,GAAP,IAAA2B,EAAA,OAAAqC,EAAAxC,EAAAM,KAAA,SAAAoL,GAAA,cAAAA,EAAAlL,KAAAkL,EAAAjL,MAAA,WACb3D,GADa,CAAA4O,EAAAjL,KAAA,eAAAiL,EAAAjL,KAAA,EACGyB,EADH,OAAAwJ,EAAA5K,GAAA4K,EAAA9K,KAAA8K,EAAAjL,KAAA,sBAAAiL,EAAAjL,KAAA,EACsB7B,YAAI,cAAe,CAC9DJ,OAAQA,IAFa,OAAAkN,EAAA5K,GAAA4K,EAAA9K,KAAA,cACnBT,EADmBuL,EAAA5K,IAIhBa,SACLhC,IAAQN,MAAM,8CALOqM,EAAA7K,OAAA,SAOlBV,GAPkB,yBAAAuL,EAAA3K,SAAA0K,MAAH,gBAAAhK,GAAA,OAAA7B,EAAAqB,MAAAC,KAAAb,YAAA,GAmBbsL,GAAY,eAAAvK,EAAAvB,OAAA0C,EAAA,EAAA1C,CAAA2C,EAAAxC,EAAAC,KAAG,SAAA2L,EAAOpN,GAAP,IAAA2B,EAAA,OAAAqC,EAAAxC,EAAAM,KAAA,SAAAuL,GAAA,cAAAA,EAAArL,KAAAqL,EAAApL,MAAA,WACZ3D,GADY,CAAA+O,EAAApL,KAAA,eAAAoL,EAAApL,KAAA,EACIiB,EADJ,OAAAmK,EAAA/K,GAAA+K,EAAAjL,KAAAiL,EAAApL,KAAA,sBAAAoL,EAAApL,KAAA,EACoBU,YAAK,gBAAiB3C,GAD1C,OAAAqN,EAAA/K,GAAA+K,EAAAjL,KAAA,cAClBT,EADkB0L,EAAA/K,IAEfa,SACLhC,IAAQN,MAAM,kCAHMwM,EAAAhL,OAAA,SAKjBV,GALiB,yBAAA0L,EAAA9K,SAAA6K,MAAH,gBAAAE,GAAA,OAAA1K,EAAAH,MAAAC,KAAAb,YAAA,GAgBZ0L,GAAS,eAAAC,EAAAnM,OAAA0C,EAAA,EAAA1C,CAAA2C,EAAAxC,EAAAC,KAAG,SAAAgM,EAAOzN,GAAP,IAAA2B,EAAA,OAAAqC,EAAAxC,EAAAM,KAAA,SAAA4L,GAAA,cAAAA,EAAA1L,KAAA0L,EAAAzL,MAAA,WACT3D,GADS,CAAAoP,EAAAzL,KAAA,eAAAyL,EAAAzL,KAAA,EACOiB,EADP,OAAAwK,EAAApL,GAAAoL,EAAAtL,KAAAsL,EAAAzL,KAAA,sBAAAyL,EAAAzL,KAAA,EACuBU,YAAK,aAAc3C,GAD1C,OAAA0N,EAAApL,GAAAoL,EAAAtL,KAAA,cACfT,EADe+L,EAAApL,IAEZa,SACLhC,IAAQN,MAAM,kCAHG6M,EAAArL,OAAA,SAKdV,GALc,yBAAA+L,EAAAnL,SAAAkL,MAAH,gBAAAE,GAAA,OAAAH,EAAA/K,MAAAC,KAAAb,YAAA,GClDd0C,GAAaC,IAAbD,SACAqJ,GAAWC,KAAXD,OAiOD,IAAME,GAAgBlD,IAAKtL,OAA0B,CACxDlE,KAAM,UADmBwP,CA/N7B,SAAgBlG,GAAO,IACXzG,EAAW8P,qBAAWrQ,KAAtBO,OACFxB,EAASwB,EAAO3B,eAAeG,OAAOlC,MAFzByT,EAGSD,qBAAWvB,IAA/BvH,EAHW+I,EAGX/I,MAAO2H,EAHIoB,EAGJpB,SACTqB,EAAe,CACjB9S,IAAK,IACLT,QAAS,GACTT,KAAM,GACN0J,KAAM,KACN3J,MAAO,EACPoB,KAAM,WAVS8S,EAYaC,mBAAqBF,GAZlCG,EAAA/M,OAAAgN,GAAA,EAAAhN,CAAA6M,EAAA,GAYZI,EAZYF,EAAA,GAYFG,EAZEH,EAAA,GAAAI,EAaeL,mBAAoB,CAClDM,MAAM,EACNrT,KAAM,GACN4K,QAAS,EACT0I,QAAS,KAjBMC,EAAAtN,OAAAgN,GAAA,EAAAhN,CAAAmN,EAAA,GAaZI,EAbYD,EAAA,GAaDE,EAbCF,EAAA,GAuBb5S,EAAOkJ,EAAM0H,UAvBAmC,EAwBwCpK,EAAM0C,KAAzDY,EAxBW8G,EAwBX9G,kBAAmBX,EAxBRyH,EAwBQzH,eAAgBmD,EAxBxBsE,EAwBwBtE,YAerCuE,EAAe,WACjBF,EAAaxN,OAAA2N,GAAA,EAAA3N,CAAA,GACNuN,EADK,CAERH,MAAOG,EAAUH,KACjBrT,KAAM,GACNsT,QAAS,UA2BXO,EAAW,eAAAnL,EAAAzC,OAAA0C,EAAA,EAAA1C,CAAA2C,EAAAxC,EAAAC,KAAG,SAAAC,IAAA,IAAAtG,EAAAsT,EAAA/M,EAAAxG,EAAA,OAAA6I,EAAAxC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACV7G,EAAOwT,EAAUxT,KACjBsT,EAAUE,EAAUF,QACb,KAATtT,EAHY,CAAA2G,EAAAE,KAAA,eAAAF,EAAAM,OAAA,oBAMZV,EAAM,KACM,QAAZ+M,EAPY,CAAA3M,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAQA4K,GAAmB,CAC3BzR,KAAMA,EACNT,OAAQ,IAVA,OAQZgH,EARYI,EAAAK,KAAAL,EAAAE,KAAA,oBAYO,SAAZyM,EAZK,CAAA3M,EAAAE,KAAA,gBAaN9G,EAAKyT,EAAU5I,QAbTjE,EAAAE,KAAA,GAcA6K,GAAsB,CAC9B1R,KAAMA,EACNT,OAAQ,EACRQ,GAAIsM,OAAOtM,KAjBH,QAcZwG,EAdYI,EAAAK,KAAA,YAoBZT,EAAIwB,QApBQ,CAAApB,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAqBNyC,EAAMwK,kBArBA,QAsBZH,IAtBY,yBAAAhN,EAAAQ,SAAAb,MAAH,yBAAAoC,EAAArB,MAAAC,KAAAb,YAAA,GA+EjB,OARAsN,oBAAU,WACkB,QAApBlK,EAAM0H,UACN4B,EAAYN,GAtHWhJ,EAAMvB,WAC5BqC,QAAQ,SAAAT,GACLA,EAAKnK,KAAO8J,EAAMe,UAClBwE,IACA+D,EAAYjJ,OAsHrB,CAACL,EAAMe,UAGNG,EAAA3E,EAAA4E,cAAA,OAAKC,UAAW3B,EAAM2B,WAClBF,EAAA3E,EAAA4E,cAAA,OAAKC,UAAU,UACXF,EAAA3E,EAAA4E,cAAA,OAAKC,UAAU,SACD,SAATtK,EAAA,GAAA0B,OAAqBQ,EAAO7D,KAA5B,KAAAqD,OAAoChB,GAApC,GAAAgB,OAAkDQ,EAAO9D,IAAzD,KAAAsD,OAAgEhB,KAIxEmS,EAAUH,MACPtI,EAAA3E,EAAA4E,cAACE,EAAA,EAAD,KACIH,EAAA3E,EAAA4E,cAACgJ,GAAA,EAAD,CAAKC,OAAQ,GACTlJ,EAAA3E,EAAA4E,cAACsC,EAAA,EAAD,CACIrC,UAAU,aACVsC,KAAK,QACLE,YAAY,EACZ5L,MAAO2R,EAAUxT,KACjBkU,SAvHC,SAACnI,GACtB,IAAMlK,EAAQkK,EAAE7L,OAAO2B,MACvB4R,EAAaxN,OAAA2N,GAAA,EAAA3N,CAAA,GACNuN,EADK,CAERxT,KAAM6B,MAoHUtB,YAAasC,EAAOtC,YAAYC,SAChC2T,WAAYpJ,EAAA3E,EAAA4E,cAAC0D,EAAA,EAAD,CAAQE,QAASiF,EAAa9S,MAAO,CAAEqT,OAAQ,QAAU7G,KAAK,QAAQ5M,KAAK,QAAQkC,EAAO3D,YAItH6L,EAAA3E,EAAA4E,cAAC6B,EAAA,EAAD5G,OAAAwE,OAAA,CAAMQ,UAAS,QAAA5I,OAAU1B,IAzJrB,CACRmM,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,MAwJZhC,EAAA3E,EAAA4E,cAAC6B,EAAA,EAAKI,KAAN,CAAWvM,MAAOmC,EAAOjE,OACrBmM,EAAA3E,EAAA4E,cAACE,EAAA,EAAD,CAAKmF,OAAQ,GACTtF,EAAA3E,EAAA4E,cAACgJ,GAAA,EAAD,CAAKjH,KAAM,IACNH,EAAkB,QAAS,CACxBM,aAAcgG,EAAStU,OAD1BgO,CAEE7B,EAAA3E,EAAA4E,cAACqJ,GAAA,EAAD,CAAQpJ,UAAU,cAAcsC,KAAK,SACnC1D,EAAMwH,UAAUpH,IAAI,SAACC,EAAMC,GACxB,OACIY,EAAA3E,EAAA4E,cAACwH,GAAD,CAAQnE,IAAKlE,EAAOtI,MAAOqI,EAAKnK,IAC3BmK,EAAKlK,WAI1B+K,EAAA3E,EAAA4E,cAACgJ,GAAA,EAAD,CAAKjH,KAAM,GACPhC,EAAA3E,EAAA4E,cAAC0D,EAAA,EAAD,CAAQE,QAAS+E,EAAcpG,KAAK,QAAQ5M,KAAK,QAC7CoK,EAAA3E,EAAA4E,cAACpK,EAAA,EAAD,CAAMD,KAAM6S,EAAUH,KAAO,QAAU,UAE3CtI,EAAA3E,EAAA4E,cAAC0D,EAAA,EAAD,CAAQE,QAxIV,WAClB3C,EAAe,CAAC,SAAU,SAACC,EAAKC,GAC5B,IAAKD,EAAK,CACN,IAAMnM,EAAKoM,EAAOvN,MAClBiL,EAAMwH,UAAU1G,QAAQ,SAAAT,GAChBA,EAAKnK,KAAOA,GACZ0T,EAAa,CACTJ,MAAM,EACNrT,KAAMkK,EAAKlK,KACX4K,QAASV,EAAKnK,GACduT,QAAS,eA8HuB/F,KAAK,QAAQ5M,KAAK,QAAOoK,EAAA3E,EAAA4E,cAACpK,EAAA,EAAD,CAAMD,KAAK,aAIhFoK,EAAA3E,EAAA4E,cAAC6B,EAAA,EAAKI,KAAN,CAAWvM,MAAOmC,EAAOvD,SACpBsN,EAAkB,UAAW,CAC1BM,aAAcgG,EAAS5T,QACvB6N,MAAO,CAAC,CACJE,IAAK,OAHZT,CAKE7B,EAAA3E,EAAA4E,cAACsJ,GAAD,CAAUzG,KAAM,EAAGtN,YAAW,GAAA8B,OAAKQ,EAAO9D,IAAZ,KAAAsD,OAAmBQ,EAAOvD,aAE/DyL,EAAA3E,EAAA4E,cAAC6B,EAAA,EAAKI,KAAN,CAAWvM,MAAOmC,EAAOhE,MACpB+N,EAAkB,OAAQ,CACvBM,aAAcgG,EAASrU,KACvBsO,MAAO,CAAC,CACJE,IAAK,OAHZT,CAKE7B,EAAA3E,EAAA4E,cAACsC,EAAA,EAAD,CAAO/M,YAAasC,EAAOtC,YAAY1B,KAAM0O,KAAK,YAEzDxC,EAAA3E,EAAA4E,cAACE,EAAA,EAAD,CAAKvK,KAAK,OAAOgO,QAAQ,OACrB5D,EAAA3E,EAAA4E,cAAC0D,EAAA,EAAD,CAAQ/N,KAAK,UAAUiO,QAjLxB,WACX4C,EAAS,CACL7Q,KAAM,gBA+K0C4M,KAAK,QAAQxM,MAAO,CAAE8N,YAAa,SACtEhM,EAAO5D,QAEZ8L,EAAA3E,EAAA4E,cAAC0D,EAAA,EAAD,CAAQ/N,KAAK,UAAUiO,QArHxB,SAAC7C,GACZE,EAAc,eAAAnD,EAAA7C,OAAA0C,EAAA,EAAA1C,CAAA2C,EAAAxC,EAAAC,KAAC,SAAAoB,EAAOyE,EAAKC,GAAZ,IAAAvH,EAAA,OAAAgE,EAAAxC,EAAAM,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,UACNqF,EADM,CAAAvE,EAAAd,KAAA,YAEHjC,EAAS,CACTrF,OAAQ,EACRgJ,KAAM,MAEVzC,QAAQyO,IAAI1K,GACY,QAApBA,EAAM0H,UAPH,CAAA5J,EAAAd,KAAA,gBAQHjC,EAAM,QAAcuH,EAAO7M,QAC3BsF,EAAM,MAAYuH,EAAOvN,MACzBgG,EAAM,KAAWuH,EAAOtN,KACxBiH,QAAQyO,IAAI3P,GAXT+C,EAAAd,KAAA,GAYesL,GAAUvN,GAZzB,QAAA+C,EAAAX,KAaKe,UACJyJ,EAAS,CACL7Q,KAAM,eAEVoF,IAAQgC,QAAQ,2BAAQ,GACxByJ,EAAS,CACL7Q,KAAM,cACN/B,MAAOuN,EAAOvN,SApBnB+I,EAAAd,KAAA,oBAuBwB,SAApBgD,EAAM0H,UAvBV,CAAA5J,EAAAd,KAAA,gBAwBHjC,EAAM,QAAcuH,EAAO7M,QAC3BsF,EAAM,MAAYuH,EAAOvN,MACzBgG,EAAM,KAAWuH,EAAOtN,KACxB+F,EAAM,GAASyH,OAAOxC,EAAMe,SA3BzBjD,EAAAd,KAAA,GA4BekL,GAAanN,GA5B5B,QAAA+C,EAAAX,KA6BKe,UACJyJ,EAAS,CACL7Q,KAAM,eAEVoF,IAAQgC,QAAQ,2BAAQ,GACxByJ,EAAS,CACL7Q,KAAM,cACN/B,MAAOuN,EAAOvN,SApCnB,yBAAA+I,EAAAR,SAAAM,MAAD,gBAAAL,EAAAQ,GAAA,OAAAkB,EAAAzB,MAAAC,KAAAb,YAAA,KAoHsC8G,KAAK,SACxC1K,EAAO3D,aCvNxBsT,GAAWC,KAAXD,OAER,SAASgC,GAAYlL,GACnB,OACEyB,EAAA3E,EAAA4E,cAAA,OAAKC,UAAU,gBACbF,EAAA3E,EAAA4E,cAAA,mNACAD,EAAA3E,EAAA4E,cAAA,SACED,EAAA3E,EAAA4E,cAAC0D,EAAA,EAAD,CACEzD,UAAU,MACVtK,KAAK,UACL4M,KAAK,QACLqB,QAAStF,EAAMmL,MAAM7D,KAAKtJ,KAAM,QAJlC,gBADF,yFAeN,SAASoN,GAAQ7K,EAAoB2E,GACnC,OAAQA,EAAO7N,MACb,IAAK,YACH,OAAOsF,OAAA2N,GAAA,EAAA3N,CAAA,GACF4D,EADL,CAEEgG,SAAS,EACT0B,UAAW/C,EAAO+C,UAClB3G,QAAS4D,EAAO5D,QAAU4D,EAAO5D,SAAW,MAEhD,IAAK,aACH,OAAO3E,OAAA2N,GAAA,EAAA3N,CAAA,GACF4D,EADL,CAEEvB,WAAYkG,EAAOlG,aAEvB,IAAK,aACH,OAAOrC,OAAA2N,GAAA,EAAA3N,CAAA,GACF4D,EADL,CAEEgG,SAAS,IAEb,IAAK,YACH,OAAO5J,OAAA2N,GAAA,EAAA3N,CAAA,GACF4D,EADL,CAEEwH,UAAW7C,EAAO6C,YAEtB,IAAK,cACH,OAAOpL,OAAA2N,GAAA,EAAA3N,CAAA,GACF4D,EADL,CAEEjL,MAAO4P,EAAO5P,QAElB,IAAK,cACH,OAAOqH,OAAA2N,GAAA,EAAA3N,CAAA,GACF4D,EADL,CAEEyH,SAAU9C,EAAO8C,YAmNVqD,OA5Mf,SAAoBrL,GAAO,IAAAC,EAAAjC,KACjBzE,EAAW8P,qBAAWrQ,KAAtBO,OACFkN,EAAazG,EAAM0G,KAFA4E,EAYCC,qBAAWH,GATnB,CAChBpM,WAAY,GACZ+I,UAAW,GACXzS,OAAQ,IACR0S,SAAU,GACVC,UAAW,MACX3G,SAAU,IACViF,SAAS,IAVciF,EAAA7O,OAAAgN,GAAA,EAAAhN,CAAA2O,EAAA,GAYlB/K,EAZkBiL,EAAA,GAYXtD,EAZWsD,EAAA,GAajBC,EAAcC,KAAdD,UACFE,EAAc,eAAAvM,EAAAzC,OAAA0C,EAAA,EAAA1C,CAAA2C,EAAAxC,EAAAC,KAAG,SAAAC,IAAA,IAAA1B,EAAA2B,EAAA,OAAAqC,EAAAxC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACfjC,EAAS,CACbhG,MAAOiL,EAAMjL,OAFM+H,EAAAE,KAAA,EAIH+K,GAAchN,GAJX,QAIf2B,EAJeI,EAAAK,MAKbe,SACNyJ,EAAS,CACP7Q,KAAM,aACN2H,WAAY/B,EAAI1B,KAAKoD,OARJ,wBAAAtB,EAAAQ,SAAAb,MAAH,yBAAAoC,EAAArB,MAAAC,KAAAb,YAAA,GAYdyO,EAAe,SAACjN,GACpB,IAAMgC,EAAM,CACVkL,OAAQtS,EAAOhD,KAEjBoI,EAAK0C,QAAQ,SAACT,GACZD,EAAItG,OAAOuG,EAAKnK,KAAOmK,EAAKlK,OAE9BwR,EAAS,CACP7Q,KAAM,cACN2Q,SAAUrH,KAGR6J,EAAe,eAAAhL,EAAA7C,OAAA0C,EAAA,EAAA1C,CAAA2C,EAAAxC,EAAAC,KAAG,SAAAoB,IAAA,IAAAlB,EAAA,OAAAqC,EAAAxC,EAAAM,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,cAAAc,EAAAd,KAAA,EACJ8K,KADI,QAChBpL,EADgBoB,EAAAX,MAEde,UACNyJ,EAAS,CACPH,UAAW9K,EAAI1B,KAAKoD,KACpBtH,KAAM,cAERuU,EAAa3O,EAAI1B,KAAKoD,OAPF,wBAAAN,EAAAR,SAAAM,MAAH,yBAAAqB,EAAAzB,MAAAC,KAAAb,YAAA,GAgBfmJ,EAAa,SAACjP,GAA6B,IAAdZ,EAAc0G,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,IAAR,IACvC+K,EAAS,CACP7Q,KAAM,YACN4Q,UAAW5Q,EACXiK,QAAS7K,KASPqV,EAAW,SAACvW,GAChBsE,OAAOkS,KAAKxW,EAAM,UAEdyW,EAAY,eAAAtM,EAAA/C,OAAA0C,EAAA,EAAA1C,CAAA2C,EAAAxC,EAAAC,KAAG,SAAA4C,EAAOiB,GAAP,IAAAtF,EAAA,OAAAgE,EAAAxC,EAAAM,KAAA,SAAAwC,GAAA,cAAAA,EAAAtC,KAAAsC,EAAArC,MAAA,cACbjC,EAASqB,OAAOwE,OAAO,GAAIP,IAC1B3K,OAAS,SACTqF,EAAO4D,mBACP5D,EAAO5E,KAJKkJ,EAAArC,KAAA,EAMDkL,GAAanN,GANZ,OAAAsE,EAAAlC,KAOXe,SACNkN,IARiB,wBAAA/L,EAAA/B,SAAA8B,MAAH,gBAAA7B,GAAA,OAAA4B,EAAA3B,MAAAC,KAAAb,YAAA,GAyBlB,OAbAsN,oBAAU,WACRD,KACC,IAEHC,oBAAU,WACRkB,KACC,CAACpL,EAAMjL,QAENiL,EAAMvB,WAAWxB,OAAS,IAC5BiJ,EAAW3O,YAAa,EACxB2O,EAAWE,SAAWL,GAItB7E,EAAA3E,EAAA4E,cAACoG,GAAcmE,SAAf,CAAwB1T,MAAO,CAAEgI,QAAO2H,aACtCzG,EAAA3E,EAAA4E,cAAA,OAAKC,UAAU,cACbF,EAAA3E,EAAA4E,cAACkF,EAAA,EAAWH,GACZhF,EAAA3E,EAAA4E,cAACE,EAAA,EAAD,KACEH,EAAA3E,EAAA4E,cAACgJ,GAAA,EAAD,CAAK/I,UAAU,aACbF,EAAA3E,EAAA4E,cAACqJ,GAAA,EAAD,CACEpJ,UAAU,eACVpJ,MAAOgI,EAAMyH,SAAS3N,OAAOkG,EAAMjL,QACnC2O,KAAK,QACL2G,SA5CS,SAACrS,GACpB2P,EAAS,CACP7Q,KAAM,cACN/B,MAAOyN,OAAOxK,MA0CN2T,YAAU,GAEVzK,EAAA3E,EAAA4E,cAACyK,GAAD,CAAQ5T,MAAM,QAAQgB,EAAOhD,KAC5BgK,EAAMwH,UAAUpH,IAAI,SAACC,EAAMC,GAC1B,OACEY,EAAA3E,EAAA4E,cAACyK,GAAD,CAAQ5T,MAAOqI,EAAKnK,GAAIsO,IAAKlE,GAC1BD,EAAKlK,WAOjB6J,EAAMvB,WAAWxB,OAAS,EACzBiE,EAAA3E,EAAA4E,cAACE,EAAA,EAAD,KACEH,EAAA3E,EAAA4E,cAACgJ,GAAA,EAAD,KACEjJ,EAAA3E,EAAA4E,cAACmF,EAAA,EAAD,CACElF,UAAU,OACVmF,KAAM,CAAEC,OAAQ,GAAIC,OAAQ,GAC5BC,WAAY1G,EAAMvB,WAClBkI,WAAY,SAACtG,GAAD,OACVa,EAAA3E,EAAA4E,cAACmF,EAAA,EAAKlD,KAAN,KACElC,EAAA3E,EAAA4E,cAACyF,EAAA,EAAD,CAAMxF,UAAU,OAAOsC,KAAK,QAAQmD,WAAW,GAC7C3F,EAAA3E,EAAA4E,cAACE,EAAA,EAAD,CAAKD,UAAU,OAAOtK,KAAK,OAAOgO,QAAQ,iBACxC5D,EAAA3E,EAAA4E,cAACgJ,GAAA,EAAD,CAAKjH,KAAM,IACThC,EAAA3E,EAAA4E,cAAA,QACEC,UAAU,QACVlK,MAAO,CACLoK,gBACEuK,IAAexL,EAAKlK,KAAK2V,uBAG5BzL,EAAKlK,OAGV+K,EAAA3E,EAAA4E,cAACgJ,GAAA,EAAD,CAAK/I,UAAU,UAAU8B,KAAM,GAC5B7C,EAAKrL,MAAQqL,EAAKrL,KAAKiI,OAAS,GAC/BiE,EAAA3E,EAAA4E,cAAC0D,EAAA,EAAD,CACEzD,UAAU,OACVsC,KAAK,QACL5M,KAAK,OACLiO,QAASwG,EAASxE,KAAKrH,EAAMW,EAAKrL,OAElCkM,EAAA3E,EAAA4E,cAACpK,EAAA,EAAD,CAAMD,KAAK,UAGfoK,EAAA3E,EAAA4E,cAAC0D,EAAA,EAAD,CACEzD,UAAU,OACVsC,KAAK,QACL5M,KAAK,OACLiO,QAASgB,EAAWgB,KAAKrH,EAAM,OAAQW,EAAKnK,KAE5CgL,EAAA3E,EAAA4E,cAACpK,EAAA,EAAD,CAAMD,KAAK,UAEboK,EAAA3E,EAAA4E,cAAC0D,EAAA,EAAD,CACEzD,UAAU,OACVsC,KAAK,QACL5M,KAAK,OACLiO,QAAS0G,EAAa1E,KAAKrH,EAAMW,IAEjCa,EAAA3E,EAAA4E,cAACpK,EAAA,EAAD,CAAMD,KAAK,cAIjBoK,EAAA3E,EAAA4E,cAAC+J,EAAD,CAAW9J,UAAU,UAAU2K,UAAQ,GACpC1L,EAAK5K,SAERyL,EAAA3E,EAAA4E,cAACE,EAAA,EAAD,CAAKD,UAAU,SAAStK,KAAK,OAAOgO,QAAQ,OAC1C5D,EAAA3E,EAAA4E,cAACgJ,GAAA,EAAD,CAAK/I,UAAU,WACZf,EAAK3B,KADR,uBACmB2B,EAAK1B,qBAUtCuC,EAAA3E,EAAA4E,cAAC6K,GAAD,CAAapB,MAAO7E,IAEtB7E,EAAA3E,EAAA4E,cAAC8F,EAAA,EAAD,CACE7F,UAAU,eACV8F,MAAO,IACPC,UAAU,EACVnB,QAAShG,EAAMgG,QACfqB,QA/IY,WAClBM,EAAS,CACP7Q,KAAM,iBA+IFoK,EAAA3E,EAAA4E,cAAC0H,GAAD,CACEzH,UAAU,UACV6I,gBAAiBA,eCtRtB,SAASgC,GAAeC,GAyB7B,OAzBiD,SAAAC,GAE/C,SAAAC,EAAY3M,GAAO,IAAAC,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAAqB,KAAA2O,IACjB1M,EAAAtD,OAAAwD,EAAA,EAAAxD,CAAAqB,KAAArB,OAAAyD,EAAA,EAAAzD,CAAAgQ,GAAAtM,KAAArC,KAAMgC,KACDO,MAAQ,CACXqM,UAAW,MAHI3M,EAF4B,OAAAtD,OAAAkQ,EAAA,EAAAlQ,CAAAgQ,EAAAD,GAAA/P,OAAAmQ,EAAA,EAAAnQ,CAAAgQ,EAAA,EAAA5H,IAAA,oBAAAxM,MAAA,WAS3B,IAAAiO,EAAAxI,KAClByO,IAAqBM,KAAK,SAACC,GACzBxG,EAAKvF,SAAS,CAEZ2L,UAAWI,EAAGC,QAAUD,EAAGC,QAAUD,QAbI,CAAAjI,IAAA,SAAAxM,MAAA,WAmB7C,IAAM2U,EAASlP,KAAKuC,MAAMqM,UAE1B,OAAOM,EAASzL,EAAA3E,EAAA4E,cAACwL,EAAWlP,KAAKgC,OAAY,SArBA2M,EAAA,CACpBtT,IAAM8T,WCWrC,IAyBezT,GAzBc,CAC3B0T,YAAa,CACX,CACErI,IAAK,QACLsI,KAAM,IACNT,UCTN,WACI,OACInL,EAAA3E,EAAA4E,cAACF,EAAA,EAAc8L,SAAf,KACK,SAAAlO,GAAgB,IACPxH,EADOwH,EAAb7F,OAC8B3B,eAE9B,OACI6J,EAAA3E,EAAA4E,cAAA,OAAKC,UAAU,YACXF,EAAA3E,EAAA4E,cAAC6L,GAAD,CAAW7G,KAAM9O,EAAeC,QAChC4J,EAAA3E,EAAA4E,cAAC8L,GAAD,CAAY9G,KAAM9O,EAAeG,cDErD,CACEgN,IAAK,SACLsI,KAAM,UACNT,UAAWJ,GAAe,kBAAMvX,EAAAwN,EAAA,GAAAsK,KAAA9X,EAAAqS,KAAA,cAElC,CACEvC,IAAK,WACLsI,KAAM,YACNT,UAAWJ,GAAe,kBAAMpQ,QAAA7F,IAAA,CAAAtB,EAAAwN,EAAA,GAAAxN,EAAAwN,EAAA,KAAAsK,KAAA9X,EAAAqS,KAAA,cAElC,CACEvC,IAAK,QACLsI,KAAM,SACNT,UAAWJ,GAAe,kBAAMvX,EAAAwN,EAAA,GAAAsK,KAAA9X,EAAAqS,KAAA,yBEAvBmG,OA9Bf,WAKE,IAGMC,EAHYhU,GAAO0T,YAGDO,OAAO,SAAU/M,GACvC,OAAQA,EAAKgN,WAGf,OACEnM,EAAA3E,EAAA4E,cAACmM,GAAA,EAAD,KACGH,GACCA,EAAM/M,IAAI,SAACC,GAET,OACEa,EAAA3E,EAAA4E,cAACmM,GAAA,EAAD,CACER,KAAMzM,EAAKyM,KACXT,UAAWhM,EAAKgM,UAChB7H,IAAKnE,EAAKmE,IACV+I,OAAO,kBC1BRC,GAAiB,CAAC,CAC7BtX,GAAI,EACJW,MAAO,OACPC,KAAM,OACNT,OAAQ,8BACRU,KAAM,IACN,CACAb,GAAI,EACJW,MAAO,YACPC,KAAM,YACNT,OAAQ,YACRU,KAAM,IACN,CACAb,GAAI,EACJW,MAAO,SACPC,KAAM,OACNT,OAAQ,8BACRU,KAAM,IACN,CACAb,GAAI,EACJW,MAAO,YACPC,KAAM,YACNT,OAAQ,YACRU,KAAM,KCnBFsC,GAA6B,UAAnBF,IAAOE,QAWVoU,GAAiB,eAAA5O,EAAAzC,OAAA0C,EAAA,EAAA1C,CAAA2C,EAAAxC,EAAAC,KAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAqC,EAAAxC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACnB3D,GADmB,CAAAyD,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EACHwQ,GADG,OAAA1Q,EAAAO,GAAAP,EAAAK,KAAAL,EAAAE,KAAA,eAAAF,EAAAO,GACc,GADd,cACzBX,EADyBI,EAAAO,GAAAP,EAAAM,OAAA,SAExBV,GAFwB,wBAAAI,EAAAQ,SAAAb,MAAH,yBAAAoC,EAAArB,MAAAC,KAAAb,YAAA,GCTf,SAAS8Q,GAAT7O,GAAuE,IAAAa,EAAAjC,KAA7CkQ,EAA6C9O,EAA7C8O,SAC/BC,EAAsBD,EAAtBC,MAAOC,EAAeF,EAAfE,WACTC,EAAQF,EAAM3Q,OAAS4Q,EAAW5Q,OAClC8Q,EAAUC,eAEhB,SAASC,EAAThP,GAA+B,IAAhBnI,EAAgBmI,EAAhBnI,KAAMT,EAAU4I,EAAV5I,OACN,cAATS,EACFiX,EAAQG,KAAK7X,GAEbiD,OAAOkS,KAAKnV,EAAQ,SAIxB,OACE6K,EAAA3E,EAAA4E,cAAA,WACG2M,EAAQ,EACP5M,EAAA3E,EAAA4E,cAACD,EAAA3E,EAAM4R,SAAP,KACG/R,OAAOmI,QAAQoJ,GAAUvN,IAAI,SAACC,GAAS,IAAA+N,EAAAhS,OAAAgN,GAAA,EAAAhN,CACjBiE,EADiB,GAC/BmE,EAD+B4J,EAAA,GAC1BpW,EAD0BoW,EAAA,GAEtC,OACEpW,GACEkJ,EAAA3E,EAAA4E,cAACE,EAAA,EAAD,CAAKmD,IAAKA,EAAK1N,KAAK,OAAOgO,QAAQ,iBACjC5D,EAAA3E,EAAA4E,cAACgJ,GAAA,EAAD,CAAKjH,KAAM,IAAKsB,GAChBtD,EAAA3E,EAAA4E,cAACD,EAAA3E,EAAM4R,SAAP,KACGnW,EAAMoI,IAAI,SAACiO,GAAM,IACRxX,EAAcwX,EAAdxX,MAAOX,EAAOmY,EAAPnY,GACf,OACEgL,EAAA3E,EAAA4E,cAACgJ,GAAA,EAAD,CAAK3F,IAAKtO,EAAIgN,KAAM,GAClBhC,EAAA3E,EAAA4E,cAAC0D,EAAA,EAAD,CAAQnB,KAAK,QAAQ5M,KAAK,OAAOiO,QAASkJ,EAAGlH,KAAKrH,EAAM2O,IACrDxX,WAYrBqK,EAAA3E,EAAA4E,cAACkF,EAAA,EAAD,WC1CAiI,GAAW/O,IAAX+O,OAmBR,SAASzD,GAAQ7K,EAAsB2E,GACrC,OAAQA,EAAO7N,MACb,IAAK,WACH,MAAO,CACL6W,SAAUvR,OAAOwE,OAAO,GAAI+D,EAAOgJ,YAO5B,SAASY,KACtB,IADiCxD,EAQPC,qBAAWH,GAPnB,CAChB2D,UAAU,EACVb,SAAU,CACRC,MAAO,GACPC,WAAY,MALiB5C,EAAA7O,OAAAgN,GAAA,EAAAhN,CAAA2O,EAAA,GAQ1B/K,EAR0BiL,EAAA,GAQnBtD,EARmBsD,EAAA,YAAAwD,IAAA,OAAAA,EAAArS,OAAA0C,EAAA,EAAA1C,CAAA2C,EAAAxC,EAAAC,KAWjC,SAAAC,IAAA,IAAAzB,EAAA4S,EAAAC,EAAA,OAAA9O,EAAAxC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACqByQ,KADrB,OACQzS,EADR8B,EAAAK,KAEQyQ,EAAQ,GACRC,EAAa,GACnB7S,EAAK8F,QAAQ,SAACT,GACM,SAAdA,EAAKvJ,KACP8W,EAAMM,KAAK7N,GACY,cAAdA,EAAKvJ,MACd+W,EAAWK,KAAK7N,KAGpBsH,EAAS,CACP7Q,KAAM,WACN6W,SAAU,CACRC,QACAC,gBAfN,wBAAA/Q,EAAAQ,SAAAb,OAXiCe,MAAAC,KAAAb,WAoCjC,OAJAsN,oBAAU,YAhCuB,WAAAuE,EAAAjR,MAAAC,KAAAb,WAiC/B8R,IACC,IAGDxN,EAAA3E,EAAA4E,cAAA,OAAKC,UAAU,gBACbF,EAAA3E,EAAA4E,cAACwN,GAAA,EAAD,CACErZ,MAAM,GACNsZ,QAAS1N,EAAA3E,EAAA4E,cAACuM,GAAD,CAAeC,SAAU3N,EAAM2N,WACxCvG,UAAU,SACVqC,QAAQ,SAERvI,EAAA3E,EAAA4E,cAACmN,GAAD,CACE5X,YAAY,yBACZQ,MAAO,CAAEgQ,MAAO,SAChB2H,SAAU,SAAC7W,GACTiE,QAAQyO,IAAI1S,sBCPT8W,uBA/Db,SAAAA,EAAYrP,GAAO,IAAAC,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAAqB,KAAAqR,IACjBpP,EAAAtD,OAAAwD,EAAA,EAAAxD,CAAAqB,KAAArB,OAAAyD,EAAA,EAAAzD,CAAA0S,GAAAhP,KAAArC,KAAMgC,KAJRsP,kBAGmB,EAAArP,EAqBnBsP,SAAW,WACT,IAAMC,EAAUhP,MAAS8D,MAAM,QAAQxB,OAAO,eACxC2M,EAAOjP,MAASkP,YAElBC,EAAW,IADAnP,MAASoP,eAItBD,EAAW,KAGb,IAAIE,EAAWF,EAAWF,EACtBK,EAAU/M,QAAgB,IAAP0M,EAAcE,GAAUI,QAAQ,IAEvD,OACEtO,EAAA3E,EAAA4E,cAAA,OAAKC,UAAU,WACbF,EAAA3E,EAAA4E,cAAA,KAAGC,UAAU,cAAc6N,GAC3B/N,EAAA3E,EAAA4E,cAAA,SAAImO,EAAJ,cACApO,EAAA3E,EAAA4E,cAACsO,GAAA,EAAD,CACErO,UAAU,gBACVtK,KAAK,OACLyY,QAASA,EACT7Z,OAAO,SACPga,YAAa,CACXC,KAAM,OACNC,GAAI,YA3CZlQ,EAAKM,MAAQ,CACXzH,KAAM0H,MAASsC,OAAO,yBAHP7C,mFAOC,IAAAuG,EAAAxI,KAElBA,KAAKsR,aAAezV,OAAOuW,YAAY,WACrC5J,EAAKvF,SAAS,CACZnI,KAAM0H,MAASsC,OAAO,4BAEvB,oDAKHuN,cAAcrS,KAAKsR,+CAmCnB,OACE7N,EAAA3E,EAAA4E,cAAA,OAAKC,UAAU,YACbF,EAAA3E,EAAA4E,cAACwN,GAAA,EAAD,CAASlF,QAAQ,QAAQnU,MAAM,YAAYsZ,QAASnR,KAAKuR,YACvD9N,EAAA3E,EAAA4E,cAAA,QAAMC,UAAU,aAAa3D,KAAKuC,MAAMzH,eA5D9BO,IAAM8T,YCAlBmD,WAAWC,IAAXD,QAUFE,eAGJ,SAAAA,EAAYxQ,GAAO,IAAAC,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAAqB,KAAAwS,IACjBvQ,EAAAtD,OAAAwD,EAAA,EAAAxD,CAAAqB,KAAArB,OAAAyD,EAAA,EAAAzD,CAAA6T,GAAAnQ,KAAArC,KAAMgC,KAoGRyQ,aAAe,SAACha,GACd,IACMU,EADS8I,EAAKuB,QAAQjI,OACDpC,YAEvBV,IAAOwJ,EAAKM,MAAMe,SAGpBnK,EAAYkK,QAAQ,SAACT,GACfA,EAAKnK,KAAOA,IACdwJ,EAAKgB,SAAS,CACZK,QAAS7K,IAEO,SAAdmK,EAAKvJ,KACPwC,OAAOkS,KAAKnL,EAAKhK,OAAQ,UACF,SAAdgK,EAAKvJ,MACd4I,EAAKD,MAAMsO,QAAQG,KAAK7N,EAAKhK,YApHpBqJ,EA4HnByQ,aAAe,WACbzQ,EAAKgB,SACH,CACEK,SAAU,GAEZ,WACErB,EAAKD,MAAMsO,QAAQG,KAAK,QAlIXxO,EAuInBxG,aAAe,WACb,IAAMkX,EAAS1Q,EAAKuB,QAAQ/H,aAExBpC,EAAO,QACI,UAFA4I,EAAKuB,QAAQpM,SAG1BiC,EAAO,SAETsZ,EAAOtZ,IA5IP4I,EAAKM,MAAQ,CACXe,SAAU,GAHKrB,wEAOH,IAAAuG,EAAAxI,KACR5I,EAAS4I,KAAKwD,QAAQpM,OACtBmE,EAASyE,KAAKwD,QAAQjI,OAKtBpC,EAAcoC,EAAOpC,YAC3B,OACEsK,EAAA3E,EAAA4E,cAAA,OAAKC,UAAU,eACbF,EAAA3E,EAAA4E,cAACkP,GAAD,CAAQjP,UAAU,UAChBF,EAAA3E,EAAA4E,cAACE,EAAA,EAAD,CAAKD,UAAU,WAAWtK,KAAK,OAAOgO,QAAQ,SAC5C5D,EAAA3E,EAAA4E,cAACgJ,GAAA,EAAD,CAAKjH,KAAM,GACThC,EAAA3E,EAAA4E,cAAA,QAAMC,UAAU,QAAQ2D,QAAStH,KAAK0S,cACnCnX,EAAO/D,UACRiM,EAAA3E,EAAA4E,cAAA,uBAGJD,EAAA3E,EAAA4E,cAACgJ,GAAA,EAAD,CAAK/I,UAAU,OAAO8B,KAAM,GAAIkH,OAAQ,GACrCxT,EAAYwJ,IAAI,SAACC,EAAMC,GACtB,MAAkB,SAAdD,EAAKvJ,KAELoK,EAAA3E,EAAA4E,cAAA,OACEC,UAAS,GAAA5I,OAAK6H,EAAKvJ,KAAV,KAAA0B,OACP6H,EAAKnK,KAAO+P,EAAKjG,MAAMe,QAAU,SAAW,IAE9CyD,IAAKlE,EACLyE,QAASkB,EAAKiK,aAAanJ,KAAKd,EAAM5F,EAAKnK,KAE1CmK,EAAKxJ,OAGa,cAAdwJ,EAAKvJ,KACPoK,EAAA3E,EAAA4E,cAAA,OAAKqD,IAAKlE,EAAOc,UAAU,cACX,SAAdf,EAAKvJ,KAEZoK,EAAA3E,EAAA4E,cAAA,OACEC,UAAS,GAAA5I,OAAK6H,EAAKvJ,KAAV,KAAA0B,OACP6H,EAAKnK,KAAO+P,EAAKjG,MAAMe,QAAU,SAAW,IAE9CyD,IAAKlE,EACLhL,MAAO+K,EAAKxJ,MACZkO,QAASkB,EAAKiK,aAAanJ,KAAKd,EAAM5F,EAAKnK,KAE3CgL,EAAA3E,EAAA4E,cAACkF,EAAA,EAAD,CACEvP,KAAI,QAAA0B,OAAU6H,EAAKtJ,MACnBG,MAAO,CAAEC,SAAU,OAAQmZ,YAAa,eAZzC,KAmBXpP,EAAA3E,EAAA4E,cAACgJ,GAAA,EAAD,CAAKjH,KAAM,GACThC,EAAA3E,EAAA4E,cAAA,OAAKC,UAAU,YACbF,EAAA3E,EAAA4E,cAACoN,GAAD,MACArN,EAAA3E,EAAA4E,cAAC0D,EAAA,EAAD,CACEzD,UAAU,SACVsC,KAAK,QACL5M,KAAK,OACLiO,QAAStH,KAAKvE,cAEdgI,EAAA3E,EAAA4E,cAACkF,EAAA,EAAD,CACEjF,UAAU,OACVtK,KAAI,QAAA0B,OAAqB,UAAX3D,EAAqB,QAAU,YAGjDqM,EAAA3E,EAAA4E,cAACoP,GAAD,uDAWZ,IAAMC,EAAWlX,OAAOS,SAASyW,SAE3B5Z,EADS6G,KAAKwD,QAAQjI,OACDpC,YACvBC,GAAS,EACbD,EAAYkK,QAAQ,SAACT,GACfA,EAAKhK,SAAWma,IAClB3Z,EAAQwJ,EAAKnK,MAIjBuH,KAAKiD,SAAS,CACZK,QAASlK,WAnGUiC,IAAM0M,eAAzByK,GACGxK,YAAchN,IAoJRgY,oBAAWR,cC7JlBS,WAAWV,IAAXU,QAEFC,eAGJ,SAAAA,EAAYlR,GAAO,IAAAC,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAAqB,KAAAkT,IACjBjR,EAAAtD,OAAAwD,EAAA,EAAAxD,CAAAqB,KAAArB,OAAAyD,EAAA,EAAAzD,CAAAuU,GAAA7Q,KAAArC,KAAMgC,KAoDRmR,cAAgB,WACd,IAAMC,GAAQnR,EAAKM,MAAMzJ,SACzBmJ,EAAKgB,SACH,CACEnK,SAAUsa,GAEZ,WACEzX,YAAWyX,MA5DEnR,EAiEnBoR,eAAiB,WACfpR,EAAKgB,SAAS,CACZsF,SAAS,KAjEXtG,EAAKM,MAAQ,CACXzJ,SAA6B,SAAnB4C,IAAOE,QACjB2M,SAAS,GAJMtG,wEAQV,IAAAuG,EAAAxI,KACDzE,EAASyE,KAAKwD,QAAQjI,OAAO1C,aACnC,OACE4K,EAAA3E,EAAA4E,cAAC4P,GAAD,CAAQ3P,UAAU,eAChBF,EAAA3E,EAAA4E,cAAC8D,EAAA,EAAD,CAAS7D,UAAU,mBAAnB,mCAGAF,EAAA3E,EAAA4E,cAACE,EAAA,EAAD,CAAKD,UAAU,cAActK,KAAK,OAAOgO,QAAQ,SAC/C5D,EAAA3E,EAAA4E,cAACgJ,GAAA,EAAD,CAAK/I,UAAU,KAAK8B,KAAM,IAC1BhC,EAAA3E,EAAA4E,cAACgJ,GAAA,EAAD,CAAK/I,UAAU,SAAS8B,KAAM,GAC5BhC,EAAA3E,EAAA4E,cAAA,MAAIC,UAAU,SAAd,gBACAF,EAAA3E,EAAA4E,cAAC0D,EAAA,EAAD,CAAQ/N,KAAK,OAAO4M,KAAK,QAAQqB,QAAStH,KAAKqT,gBAA/C,SAGA5P,EAAA3E,EAAA4E,cAAC6P,GAAA,EAAD,CACE1b,MAAM,cACN0Q,QAASvI,KAAKuC,MAAMgG,QACpBiL,SAAU,WACRhL,EAAKvF,SAAS,CAAEsF,SAAS,MAG3B9E,EAAA3E,EAAA4E,cAAA,6BACAD,EAAA3E,EAAA4E,cAAA,6BACAD,EAAA3E,EAAA4E,cAAA,+BAGJD,EAAA3E,EAAA4E,cAACgJ,GAAA,EAAD,CAAK/I,UAAU,KAAK8B,KAAM,GACxBhC,EAAA3E,EAAA4E,cAAA,MAAIC,UAAU,SAAd,gBACAF,EAAA3E,EAAA4E,cAAA,OAAKC,UAAU,WACbF,EAAA3E,EAAA4E,cAAC0D,EAAA,EAAD,CAAQ/N,KAAK,OAAO4M,KAAK,QAAQqB,QAAStH,KAAKmT,eAA/C,QAGA1P,EAAA3E,EAAA4E,cAAA,QAAMC,UAAU,gBAAhB,KACAF,EAAA3E,EAAA4E,cAAA,QAAMC,UAAU,YACb3D,KAAKuC,MAAMzJ,SAAWyC,EAAOzC,SAAWyC,EAAOxC,kEA7CvCsC,IAAM0M,eAAzBmL,GACGlL,YAAchN,IA0ERkY,uDC/Ef,SAAAlU,EAA8B1B,GAA9B,IAAA4B,EAAAC,UAAA,OAAAmC,EAAAxC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,YAAAL,EAAAM,OAAA,QAAAC,IAAAP,EAAA,IAAAA,EAAA,MACcxD,IAAOS,UADrB,CAAAkD,EAAAE,KAAA,eAAAF,EAAAM,OAAA,wBAAAN,EAAAE,KAAA,EAKQU,YAAK,qBAAsB3C,GALnC,wBAAA+B,EAAAQ,SAAAb,iCC8NYyU,GC5GGC,eAlHX,SAAAA,EAAY1R,GAAO,IAAAC,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAAqB,KAAA0T,IACfzR,EAAAtD,OAAAwD,EAAA,EAAAxD,CAAAqB,KAAArB,OAAAyD,EAAA,EAAAzD,CAAA+U,GAAArR,KAAArC,KAAMgC,KA0CV2R,aAAe,SAAClV,GACZ,IAAIpF,EAAO,gBAUX,OATIoF,EAAQmV,SAAS,eACjBva,EAAO,cACAoF,EAAQmV,SAAS,kBACxBva,EAAO,iBACAoF,EAAQmV,SAAS,OACxBva,EAAO,aACAoF,EAAQmV,SAAS,SACxBva,EAAO,cAEJA,GAtDQ4I,EAyDnB4R,YAAc,SAACxa,EAAckE,GACzB,IAAIuW,EAA2B,CAC3BC,QAAS,wBAEb,OAAQ1a,GACJ,IAAK,QACDya,EAAW,SAAe,KAC1BA,EAAW,KAAWvW,EAAK3E,OAAOob,OAClCF,EAAW,SAAeG,SAASC,SACnCJ,EAAW,MAAY,QACvBA,EAAW,MAAY,EACvBA,EAAW,MAAYvW,EAAKY,MAAMgW,MAClCL,EAAW,QAAcvW,EAAKkB,QAC9BqV,EAAW,UAAgBvW,EAAK3E,OAAOwb,UAAUC,UACjDP,EAAW,QAAc1W,KAAKC,UAAUE,EAAK3E,OAAOwb,UAAUE,WAAWC,eACzET,EAAW,WAAiBvW,EAAK3E,OAAOwb,UAAUI,WAClDV,EAAW,KAAW7R,EAAK0R,aAAapW,EAAKkB,SAC7C,MACJ,IAAK,qBACDqV,EAAW,SAAe,KAC1BA,EAAW,KAAWvW,EAAK3E,OAAOob,OAClCF,EAAW,SAAeG,SAASC,SACnCJ,EAAW,MAAY,qBACvBA,EAAW,MAAY,EACvBA,EAAW,MAAYvW,EAAKkX,OAAON,MACnCL,EAAW,QAAcvW,EAAKkX,OAAOhW,QACrCqV,EAAW,UAAgBvW,EAAK3E,OAAOwb,UAAUC,UACjDP,EAAW,QAAc1W,KAAKC,UAAUE,EAAK3E,OAAOwb,UAAUE,WAAWC,eACzET,EAAW,WAAiBvW,EAAK3E,OAAOwb,UAAUI,WAClDV,EAAW,KAAW7R,EAAK0R,aAAapW,EAAKkX,OAAON,OACpDL,EAAW,OAAavW,EAAKkX,OAAO/Y,OAAS0B,KAAKC,UAAUE,EAAKkX,OAAO/Y,QAAU,GAClF,MACJ,IAAK,oBACDoY,EAAW,SAAe,KAC1BA,EAAW,KAAWG,SAAS3X,SAAS0X,OACxCF,EAAW,SAAeG,SAASC,SACnCJ,EAAW,MAAY,oBACvBA,EAAW,MAAY,EACvBA,EAAW,MAAYvW,EAAK4W,MAC5BL,EAAW,QAAcvW,EAAKkB,QAC9BqV,EAAW,UAAgBjY,OAAOuY,UAAUC,UAE5CP,EAAW,QAAc1W,KAAKC,UAAUxB,OAAOuY,UAAUE,WAAWC,eACpET,EAAW,WAAiBjY,OAAOuY,UAAUI,WAC7CV,EAAW,KAAW7R,EAAK0R,aAAapW,EAAK4W,OAC7CL,EAAW,OAAavW,EAAKyW,6CAQrCU,CAAeZ,EADGA,EAAYE,QAAU3X,OAAOyX,EAAYE,QAAQJ,SAAS,iBA3G5E3R,EAAKM,MAAQ,CACToS,UAAU,GAHC1S,iFAkBD9D,EAAOyW,GACrB5U,KAAK6T,YAAY,oBAAqB,CAClCpV,QAASN,EAAMM,QACf0V,MAAOhW,EAAMgW,MACbH,OAAQY,EAAKC,6DAID,IAAArM,EAAAxI,KAChBnE,OAAOiZ,iBAAiB,QAAS,SAACC,GAC9BvM,EAAKqL,YAAY,QAASkB,KAC3B,GAEHlZ,OAAOiZ,iBAAiB,qBAAsB,SAACC,GAC3CvM,EAAKqL,YAAY,qBAAsBkB,KACxC,oCAIH,OAAI/U,KAAKuC,MAAMoS,SACJlR,EAAA3E,EAAA4E,cAAA,mCAEJ1D,KAAKgC,MAAMgT,4DAjCU7W,GAC5B,MAAO,CACHwW,UAAU,UAVMtZ,IAAM8T,kDCW1B8F,kBAAY1C,IAAZ0C,SA2DOC,eAlDb,SAAAA,EAAYlT,GAAO,IAAAC,EAAA,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAAqB,KAAAkV,IACjBjT,EAAAtD,OAAAwD,EAAA,EAAAxD,CAAAqB,KAAArB,OAAAyD,EAAA,EAAAzD,CAAAuW,GAAA7S,KAAArC,KAAMgC,KAQRmT,YAAc,SAACC,GACbnT,EAAKgB,SAAS,CACZ7L,OAAQge,EACR7Z,OAAQC,KAAgB4Z,MAV1BnT,EAAKM,MAAQ,CACXnL,OAAQ,QACRmE,OAAQC,KAAgBnB,MACxBoB,aAAcwG,EAAKkT,aALJlT,wEAiBjB,OACEwB,EAAA3E,EAAA4E,cAAC2R,GAAD,KACE5R,EAAA3E,EAAA4E,cAAC4R,EAAA,EAAD,KACE7R,EAAA3E,EAAA4E,cAACF,EAAA,EAAcyK,SAAf,CAAwB1T,MAAOyF,KAAKuC,OAClCkB,EAAA3E,EAAA4E,cAAC6R,GAAA,EAAD,CACEne,OAA8B,UAAtB4I,KAAKuC,MAAMnL,OAAqBoe,KAAQC,MAEhDhS,EAAA3E,EAAA4E,cAAA,OACEC,UAAS,QAAA5I,OAAU2a,IAAa1Z,WAAa,MAAQ,QAErDyH,EAAA3E,EAAA4E,cAACiS,EAAA,EAAD,CAAQhS,UAAU,UAChBF,EAAA3E,EAAA4E,cAACkS,GAAD,MACAnS,EAAA3E,EAAA4E,cAACuR,GAAD,CAAStR,UAAU,WAEjBF,EAAA3E,EAAA4E,cAACmS,GAAD,OAGFpS,EAAA3E,EAAA4E,cAACoS,GAAD,wDAYdtT,IAAOpL,OAAO4I,KAAKuC,MAAMnL,eA/CXiE,IAAM8T,mDF4MZsE,wJGlOZ,IAAIsC,GAAwC,CACxCC,UAAW,GACXC,OAAQ,IAGCC,GAA4F,WAA0C,IAAzC3T,EAAyCpD,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAjC4W,GAAsB7O,EAAW/H,UAAAK,OAAA,EAAAL,UAAA,QAAAM,EAC/I,OAAOyH,EAAO7N,MACV,KAAK8c,GAAiBC,YAClB,OAAOzX,OAAA2N,GAAA,EAAA3N,CAAA,GAAI4D,EAAU,CACjByT,UAAW9O,EAAO8O,UAClBC,OAAQ/O,EAAO+O,SAEvB,QACI,OAAO1T,IAOf8T,GAA0C,GAEjCC,GAA2F,WAA0C,IAAzC/T,EAAyCpD,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAjCkX,GAAsBnP,EAAW/H,UAAAK,OAAA,EAAAL,UAAA,QAAAM,EAC9I,OAAOyH,EAAO7N,MACV,KAAK8c,GAAiBI,SAClB,OAAO5X,OAAA6X,GAAA,EAAA7X,CAAIuI,EAAOuP,UACtB,QACI,OAAOlU,IAOfmU,GAAkD,CAClDtB,KAAM,CACFzU,KAAM,GACNjI,KAAM,IAEVqb,QAAS,CACLpT,KAAM,GACNjI,KAAM,KAIDie,GAAsB,WAAyC,IAAxCpU,EAAwCpD,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAAhCuX,GAAqBxP,EAAW/H,UAAAK,OAAA,EAAAL,UAAA,QAAAM,EACxE,OAAIyH,EAAO7N,OAAS8c,GAAiBS,gBAC1BjY,OAAA2N,GAAA,EAAA3N,CAAA,GAAI4D,EAAX,CACI6S,KAAMlO,EAAOkO,KACbrB,QAAS7M,EAAO6M,UAGbxR,GAIF7B,GAAY,WAAmD,IAAlD6B,EAAkDpD,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAA1C,CAAEwB,KAAM,GAAIqC,YAAa,IAAMkE,EAAW/H,UAAAK,OAAA,EAAAL,UAAA,QAAAM,EACxE,OAAIyH,EAAO7N,OAAS8c,GAAiBU,UAC1BlY,OAAA2N,GAAA,EAAA3N,CAAA,GACA4D,EADP,CAEI5B,KAAMuG,EAAOvG,OAEVuG,EAAO7N,OAAS8c,GAAiBW,UACjCnY,OAAA2N,GAAA,EAAA3N,CAAA,GACA4D,EADP,CAEIS,YAAakE,EAAOlE,cAGjBT,GChEAwU,GALHC,aACRC,aAAgBtY,OAAA2N,GAAA,EAAA3N,CAAA,GAAI2X,IACpBY,aAAgBC,OCMAC,QACW,cAA7Bvb,OAAOS,SAAS+a,UAEe,UAA7Bxb,OAAOS,SAAS+a,UAEhBxb,OAAOS,SAAS+a,SAASC,MACvB,gFCLNC,oBAASC,KAKTC,IAASC,OACPjU,EAAA3E,EAAA4E,cAACiU,EAAA,EAAD,CAAUZ,MAAOA,IACftT,EAAA3E,EAAA4E,cAACkU,GAAD,OAEF3D,SAAS4D,eAAe,SD2GpB,kBAAmBzD,WACrBA,UAAU0D,cAAcC,MAAMhJ,KAAK,SAAAiJ,GACjCA,EAAaC,gDEnInBhhB,EAAAC,EAAAC,EAAA,sBAAA+gB,IAAAjhB,EAAAC,EAAAC,EAAA,sBAAAmb,IAAArb,EAAAC,EAAAC,EAAA,sBAAAghB,IAAA,IAAAld,EAAAhE,EAAA,GAAAiE,EAAAjE,EAAAkE,EAAAF,GAAAmd,EAAAnhB,EAAA,GAAAohB,EAAAphB,EAAA,IAAAqhB,EAAArhB,EAAA,IAAAshB,EAAAthB,EAAA,IAAAuhB,EAAAvhB,EAAA,IAAAwhB,EAAAxhB,EAAA,IAKMyhB,GALNzhB,EAAA,KAKiB0hB,IAAKC,qBAAqB,CACzCC,UAAW,kDAoBN,IAAMX,EAAa7c,IAAMyd,KAdhC,SAAA1X,GAAqD,IAA3B2X,EAA2B3X,EAA3B2X,KAClBC,EAAc,CAClBC,UAAWF,GAAc,QAG3B,OACE7d,EAAA4D,EAAA4E,cAAC2U,EAAA,EAAD,CACE5e,MAAOuf,EACPE,MAAOC,IAAMC,uBACbC,YAAY,+BA0CX,IAAM/G,EAASjX,IAAMyd,KA/B5B,SAAoB9W,GAAO,IAAAC,EAAAjC,KACzB,OACE9E,EAAA4D,EAAA4E,cAAC+U,EAAA,EAAcnJ,SAAf,KAEG,SAAA9N,GAAA,IAAGjG,EAAHiG,EAAGjG,OAAH,OACCL,EAAA4D,EAAA4E,cAAC4U,EAAA,EAAD,CAAK3U,UAAU,gBAAgBtK,KAAK,OAAOgO,QAAQ,iBACjDnM,EAAA4D,EAAA4E,cAAC6U,EAAA,EAAD,CAAK5U,UAAU,YACbzI,EAAA4D,EAAA4E,cAACgV,EAAD,CACE/U,UAAU,OACVtK,KAAM2I,EAAM1I,KAAKD,KACjBI,MAAOuI,EAAM1I,KAAKG,QAEpByB,EAAA4D,EAAA4E,cAAA,QAAMC,UAAU,SAAS3B,EAAMnK,QAEjCqD,EAAA4D,EAAA4E,cAAC6U,EAAA,EAAD,CAAK5U,UAAU,YACZ3B,EAAMlI,YACLoB,EAAA4D,EAAA4E,cAAC8U,EAAA,EAAD,CACElR,QAAStF,EAAM2G,SAASW,KAAKrH,EAAM,OACnCgE,KAAK,QACL5M,KAAK,QAEJkC,EAAO9D,WAyBjB,IAAM0gB,EAAY9c,IAAMyd,KAV/B,SAAuB9W,GACrB,OACE9G,EAAA4D,EAAA4E,cAACgV,EAAD,CACE/U,UAAW3B,EAAM2B,UACjBtK,KAAM2I,EAAM3I,KACZI,MAAOuI,EAAMvI,2CCzEnBxC,EAAAC,EAAAC,EAAA,sBAAAmiB,IAAAriB,EAAAC,EAAAC,EAAA,sBAAAqgB,IAAAvgB,EAAAC,EAAAC,EAAA,sBAAAoiB,IAAAtiB,EAAAC,EAAAC,EAAA,sBAAAiX,IAAAnX,EAAAC,EAAAC,EAAA,sBAAA2M,IAAO,IAAMwV,EAAmB,CAAE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAElGE,EAAuB,CAAE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UACnH,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAErDhC,EAAQ,CACnB8B,OAAQA,EACRG,UAAWD,EACXE,WAAYJ,EACZK,cAAeH,GAMJD,EAA0B,CACrC,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,WAEjCnL,EAAiB,CAC5BwL,cAAiB,UACjBC,MAAS,UACTC,aAAc,WAGHhW,EAA2B,CACtC,UAAW,UAAW,UAAW,wNCftBiW,EAAwD,SACnE/D,EACAC,GAEA,MAAO,CACL5c,KAAM,cACN2c,YACAC,WAIS+D,EAA+D,SAC1EvD,GAEA,MAAO,CACLpd,KAAM,WACNod,aAISwD,EAEgB,SAAC1c,GAC5B,OAAOoB,OAAAub,EAAA,EAAAvb,CAAA,CACLtF,KAAM,oBACHkE,IAIMgH,EAAsD,SAAChH,GAClE,MAAO,CACLoD,KAAMpD,EACNlE,KAAM,cAIGmL,EAAiD,SAACjH,GAC7D,MAAO,CACLyF,YAAazF,EACblE,KAAM","file":"static/js/main.607fd723.chunk.js","sourcesContent":["export const locale = {\n  zh_cn: {\n    group: '分组',\n    link: '链接',\n    mainTitle: 'growth',\n    add: '添加',\n    edit: '编辑',\n    cancel: '取消',\n    submit: '确认',\n    title: '标题',\n    start: '开始',\n    end: '结束',\n    details: '详情',\n    status: '状态',\n    priority: '优先级',\n    pistures: '图片',\n    normalize: '归一化',\n    denormalization: '去归一化',\n    update: '同步',\n    all: '全部',\n    tools: [\n      {\n        id: 1,\n        name: '模版生成器',\n        color: '#1890ff',\n        target: '/template',\n      },\n    ],\n    footerModule: {\n      mockMode: '虚拟数据模式',\n      realMode: '真实数据模式',\n      about: '关于',\n    },\n    placeholder: {\n      link: '请输入相关链接',\n      addGroup: '输入分组',\n    },\n    headerItems: [\n      {\n        id: 1,\n        label: '勤练',\n        type: 'item',\n        target: '/practice',\n      },\n      {\n        type: 'seperator',\n      },\n      {\n        id: 3,\n        label: '博客',\n        type: 'link',\n        target: 'http://122.51.215.237:7771/',\n        icon: 'blog',\n      },\n      {\n        id: 4,\n        label: 'github',\n        type: 'link',\n        target: 'https://github.com/Y-lonelY',\n        icon: 'github',\n      },\n    ],\n    practiceConfig: {\n      exercise: {\n        icon: {\n          type: 'icon-jianshen',\n          style: {\n            fontSize: '18px',\n          },\n        },\n        title: '练习',\n      },\n      program: {\n        icon: {\n          type: 'icon-code',\n          style: {\n            fontSize: '16px',\n          },\n        },\n        title: '编程',\n      },\n    },\n    homepageConfig: {\n      focus: {\n        icon: {\n          type: 'icon-mubiao',\n          style: {\n            fontSize: '18px',\n          },\n        },\n        title: '聚焦',\n        showAddBtn: false,\n      },\n      trivia: {\n        icon: {\n          type: 'icon-zhishi',\n          style: {\n            fontSize: '18px',\n          },\n        },\n        title: '知识碎片',\n        showAddBtn: false,\n      },\n    },\n    priorityList: {\n      1: '极高',\n      2: '较高',\n      3: '较低',\n      4: '极低',\n    },\n  },\n  en_us: {\n    group: 'group',\n    link: 'link',\n    mainTitle: 'growth',\n    add: 'add',\n    edit: 'edit',\n    cancel: 'cancel',\n    submit: 'submit',\n    title: 'title',\n    start: 'start',\n    end: 'end',\n    details: 'details',\n    status: 'status',\n    priority: 'priority',\n    pistures: 'pistures',\n    normalize: 'normalize',\n    denormalization: 'denormalization',\n    update: 'update',\n    all: 'all options',\n    // header tools box\n    tools: [\n      {\n        id: 1,\n        name: 'template',\n        color: '#1890ff',\n        target: '/template',\n      },\n    ],\n    footerModule: {\n      mockMode: 'mock mode',\n      realMode: 'real mode',\n      about: 'about',\n    },\n    placeholder: {\n      link: 'input related link',\n      addGroup: 'input group name',\n    },\n    headerItems: [\n      {\n        id: 1,\n        label: 'practice',\n        type: 'item',\n        target: '/practice',\n      },\n      {\n        type: 'seperator',\n      },\n      {\n        id: 3,\n        label: 'blog',\n        type: 'link',\n        target: 'http://122.51.215.237:7771/',\n        icon: 'blog',\n      },\n      {\n        id: 4,\n        label: 'github',\n        type: 'link',\n        target: 'https://github.com/Y-lonelY',\n        icon: 'github',\n      },\n    ],\n    practiceConfig: {\n      exercise: {\n        icon: {\n          type: 'icon-jianshen',\n          style: {\n            fontSize: '18px',\n          },\n        },\n        title: 'exercise',\n      },\n      program: {\n        icon: {\n          type: 'icon-code',\n          style: {\n            fontSize: '16px',\n          },\n        },\n        title: 'program',\n      },\n    },\n    homepageConfig: {\n      focus: {\n        icon: {\n          type: 'icon-mubiao',\n          style: {\n            fontSize: '18px',\n          },\n        },\n        title: 'focus',\n        showAddBtn: false,\n      },\n      trivia: {\n        icon: {\n          type: 'icon-zhishi',\n          style: {\n            fontSize: '18px',\n          },\n        },\n        title: 'trivia',\n        showAddBtn: false,\n      },\n    },\n    priorityList: {\n      1: 'highest',\n      2: 'high',\n      3: 'low',\n      4: 'lowest',\n    },\n  },\n}\n","/**\n * 格式化时间展示\n * value 为秒数\n */\nexport function formatSeconds(value) {\n  const months = Math.floor(value / (3600 * 24 * 30))\n  const d = Math.floor(value / (3600 * 24))\n  const h = Math.floor((value - d * 3600 * 24) / 3600)\n  const m = Math.floor((value - h * 3600) / 60)\n  const s = value % 60\n  let date = \"\"\n  // 如果超过三个月，则直接展示月份\n  if (months > 2) {\n    date += `${months}months以上`\n  } else {\n    if (d > 0) {\n      date += `${d > 1 ? `${d}days` : `${d}day`}`\n    }\n  \n    if (h > 0) {\n      date += `${h > 1 ? `${h}hrs` : `${h}hr`}`\n    }\n  \n    // 如果小于两天，则展示分钟和秒数\n    if (d < 2) {\n      if (m > 0) {\n        date += `${m > 1 ? `${m}mins` : `${m}min`}`\n      }\n    \n      if (s > 0) {\n        date += `${s > 1 ? `${s}secs` : `${s}sec`}`\n      }\n    }\n  }\n  \n  return date\n}\n","import React from 'react'\nimport { locale as customizeLocale } from '@/assets/locale'\n\nexport const LocaleContext = React.createContext({\n  locale: 'zh_cn',\n  assets: customizeLocale.zh_cn,\n  toggleLocale: () => { return false },\n})\n","interface systemConfig {\n    useMock: string;\n    hugeScreen: boolean;\n    isdevelop: boolean;\n}\n\nconst config: systemConfig = {\n    // 是否使用虚拟数据\n    useMock: window.sessionStorage.getItem(\"useMock\") === null ? 'true' : window.sessionStorage.getItem(\"useMock\"),\n\n    // 是否大屏\n    hugeScreen: window.screen.availWidth > 1800 ? true : false,\n\n    // 是否是开发环境\n    isdevelop: process.env.NODE_ENV === 'development' ? true : false,\n};\n\nfunction setUseMock(value: boolean) {\n    window.sessionStorage.setItem(\"useMock\", String(value));\n    window.location.reload();\n}\n\nexport { config, setUseMock } ","import Axios from 'axios'\nimport { message } from 'antd'\n\n// 声明一个 Map 用于存储每个**请求**的标识和取消方法\nconst pending = new Map()\n\n// axios 实例\nconst service = Axios.create({\n  baseURL: '/grow/',\n  timeout: 60000,\n  headers: { 'X-Requested-With': 'XMLHttpRequest' },\n})\n\n// 在 pending 内添加请求对\nconst addPending = (config) => {\n  const url = [\n    config.method,\n    config.url,\n    JSON.stringify(config.params),\n    JSON.stringify(config.data),\n  ].join('&')\n  // current request config params\n  // 通过工厂方法创建 canceltoken，用于取消用户请求\n  config.cancelToken =\n    config.cancelToken ||\n    new Axios.CancelToken((cancel) => {\n      if (!pending.has(url)) {\n        // 如果 pending 中不存在当前请求，则添加进去\n        pending.set(url, cancel)\n      }\n    })\n}\n\n/**\n * 在 pending 内删除请求对\n * 取消当前请求\n */\nconst removePending = (config) => {\n  const url = [\n    config.method,\n    config.url,\n    JSON.stringify(config.params),\n    JSON.stringify(config.data),\n  ].join('&')\n  if (pending.has(url)) {\n    // 如果在 pending 中存在当前请求标识，需要取消当前请求，并且移除\n    const cancel = pending.get(url)\n    cancel(url)\n    pending.delete(url)\n  }\n}\n\n// 清除所有的请求\nexport const clearPending = () => {\n  for (const [url, cancel] of pending) {\n    cancel(url)\n  }\n  pending.clear()\n}\n\n// 设置请求拦截器\nservice.interceptors.request.use(\n  (config) => {\n    removePending(config) // 在请求开始前，对之前的请求做检查取消操作\n    addPending(config) // 将当前请求添加到 pending 中\n    return config\n  },\n  (error) => {\n    return Promise.reject(error)\n  }\n)\n\n// 设置响应拦截器，这里拦截网络请求本身的错误\nservice.interceptors.response.use(\n  (response) => {\n    removePending(response.config) // 在请求结束后，移除本次请求\n    return response\n  },\n  (error) => {\n    // 如果是 cancel 引起的错误，则再次进行尝试\n    if (Axios.isCancel(error)) {\n      // 再次尝试 cancel\n      console.error(error.message)\n    }\n    return Promise.reject(error)\n  }\n)\n\n/**\n * config.params 用来接受查询参数\n * config: { params: {}} 放在 header 内\n * config: { data: {}} 放在 request body 内\n */\nexport const get = async (url, config = {}) => {\n  try {\n    const res = await service.get(url, config)\n    // 返回服务器传值\n    return res\n  } catch (error) {\n    message.error(String(error))\n  }\n}\n\n/**\n * data 用来接收查询参数，放在 request body 内\n */\nexport const post =  async (url, data, config = {}) => {\n  try {\n    const res = await service.post(url, data, config)\n    // 返回服务器传值\n    return res\n  } catch (error) {\n    message.error(String(error))\n  }\n}\n\n\nexport const del = async (url, config = {}) => {\n  try {\n    const res = await service.delete(url, config)\n    return res\n  } catch (error) {\n    message.error(String(error))\n  }\n}\n\nexport const patch = async (url, data, config = {}) => {\n  try {\n    const res = await service.patch(url, data, config)\n    return res\n  } catch (error) {\n    message.error(String(error))\n  }\n}\n","export const addData = {\n  success: true,\n}\n\nexport const focusData = {\n  success: true,\n  data: {\n    list: [\n      {\n        id: 8,\n        title: '锻炼',\n        details: '坚持锻炼，先减脂，保持肌肉💪\\n保持良好状态！',\n        start_date: '2019-11-01 10:54:38',\n        end_date: '',\n        pictures: '',\n        status: 1,\n        priority: 1,\n      },\n      {\n        id: 9,\n        title: 'Focus 模块开发',\n        details:\n          '开发Focus模块细节\\n沉淀开发过程中的技术点\\n沉淀开发过程中的技术点\\n沉淀开发过程中的技术点',\n        start_date: '2019-11-11 11:57:38',\n        end_date: '',\n        pictures: '',\n        status: 1,\n        priority: 1,\n      },\n    ],\n  },\n}\n\nexport const triviaGroup = {\n  success: true,\n  data: {\n    list: [\n      {\n        id: 1,\n        name: 'Uncategorized',\n        status: 1,\n      },\n      {\n        id: 5,\n        name: 'React Hook',\n        status: 0,\n      },\n      {\n        id: 6,\n        name: 'React',\n        status: 0,\n      },\n    ],\n  },\n}\n\nexport const triviaList = {\n  success: true,\n  data: {\n    list: [\n      {\n        id: 5,\n        details:\n          'useEffect 用来告知 React 组件需要在渲染后执行某些操作，且 useEffect 会在每次 `render()` 之后执行，保证执行 useEffect 时， DOM 已经渲染完毕',\n        link: 'https://zh-hans.reactjs.org/docs/hooks-effect.html',\n        user: 'yh',\n        group: 5,\n        name: 'React Hook',\n        last_update: '2019-11-25 23:16:18',\n      },\n      {\n        id: 6,\n        details:\n          'useState 和 useEffect 之所以能够在单个组件内多次使用，是因为 React 保证 HooK 的调用顺序在每次渲染中是相同的，如果通过判断语句等来调用 HooK，则会引起 HooK 不能按照顺序执行，从而引起 bug，因此 React Hook 方法放在函数作用域的最外层',\n        link: '',\n        user: 'yh',\n        group: 5,\n        name: 'React Hook',\n        last_update: '2019-11-26 10:23:39',\n      },\n      {\n        id: 7,\n        details:\n          '所谓组合组件，直观的理解就是将某个需要用到公共元素的组件封装起来，在高层组件内进行引入，并且通过 props 属性将其进行传递',\n        link: '',\n        user: 'yh',\n        group: 6,\n        name: 'React',\n        last_update: '2019-11-26 10:25:42',\n      },\n      {\n        id: 7,\n        details:\n          '所谓组合组件，直观的理解就是将某个需要用到公共元素的组件封装起来，在高层组件内进行引入，并且通过 props 属性将其进行传递',\n        link: '',\n        user: 'yh',\n        group: 6,\n        name: 'React',\n        last_update: '2019-11-26 10:25:42',\n      },\n      {\n        id: 7,\n        details:\n          '所谓组合组件，直观的理解就是将某个需要用到公共元素的组件封装起来，在高层组件内进行引入，并且通过 props 属性将其进行传递',\n        link: '',\n        user: 'yh',\n        group: 6,\n        name: 'React',\n        last_update: '2019-11-26 10:25:42',\n      },\n    ],\n  },\n}\n","import { post, get } from '@/cluster/request'\nimport { addData, focusData } from '../mock/homepage'\nimport { config } from '@/config/sysConfig'\nimport { message } from 'antd'\n\nconst useMock = config.useMock === 'false' ? false : true\n\n/**\n * Focus Moduel\n */\nexport const addFocusRecord = async (params) => {\n  const res = useMock ? await addData : await post('focus/add', params)\n  if (!res.success) {\n    message.error('添加失败！')\n  }\n  return res\n}\n\nexport const editFocusRecord = async (params) => {\n  const res = useMock ? await addData : await post('focus/update', params)\n  if (!res.success) {\n    message.error('更新失败！')\n  }\n  return res\n}\n\nexport const getFocusList = async (params) => {\n  const res = useMock\n    ? await focusData\n    : await get('focus/list', { params: params })\n  if (!res.success) {\n    message.error('获取列表失败！')\n  }\n  return res\n}\n","import React from \"react\"\nimport {\n  Form,\n  Input,\n  DatePicker,\n  Switch,\n  Radio,\n  Upload,\n  Button,\n  Icon,\n  message,\n  Row,\n  Divider,\n  Carousel\n} from \"antd\"\nimport { LocaleContext } from \"@/cluster/context\"\nimport { formatSeconds } from \"@/components/Utils\"\nimport { FormComponentProps } from \"antd/es/form\"\nimport { connect } from \"react-redux\"\nimport { changeFocusList, changeFocusType } from \"@/store/Exercise/action\"\nimport {\n  addFocusRecord,\n  getFocusList,\n  editFocusRecord\n} from \"@/service/homepage/focusService\"\nimport { priorityColors } from \"@/config/colors\"\nimport moment from \"moment\"\nimport { FocusProps, FocusItem } from \"@/index.d.ts\"\n\ninterface DrawerViewProps extends FormComponentProps, FocusProps {\n  className?: string\n  current?: number\n  drawerClose: () => void\n}\n\ninterface DrawerViewState {\n  data: FocusItem\n  initValue: initValue\n}\n\ninterface initValue {\n  id?: number\n  title?: string\n  details?: string\n  start_date?: moment.Moment\n  end_date?: moment.Moment | null\n  pictures?: { url: string }[] | null\n  status?: boolean\n  priority?: number\n}\n\nconst { TextArea } = Input\n\nclass DrawerForm extends React.PureComponent<DrawerViewProps, DrawerViewState> {\n  static contextType = LocaleContext\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: {},\n      initValue: {}\n    }\n  }\n\n  render() {\n    const type = this.props.focusData.currentType\n    const data = this.state.data\n    const initValues = this.state.initValue\n    const { getFieldDecorator } = this.props.form\n    const col = {\n      labelCol: { span: 4 },\n      wrapperCol: { span: 20 }\n    }\n    const assets = this.context.assets\n    const priorityList = assets.priorityList\n\n    return (\n      <div className={this.props.className}>\n        <div className=\"header\">{this.renderTitle()}</div>\n        {(type === \"add\" || type === \"edit\") && (\n          <Form className={`type-${type}`} {...col}>\n            <Form.Item label={assets.title}>\n              {getFieldDecorator(\"title\", {\n                initialValue: initValues.title,\n                rules: [\n                  {\n                    required: true,\n                    message: \"title is required!\",\n                    max: 255\n                  }\n                ]\n              })(\n                <Input\n                  placeholder={`${assets.add} ${assets.title}`}\n                  size=\"small\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item label={assets.start}>\n              {getFieldDecorator(\"start_date\", {\n                initialValue: initValues.start_date,\n                rules: [\n                  {\n                    required: true,\n                    message: \"start date is required!\"\n                  }\n                ]\n              })(\n                <DatePicker\n                  size=\"small\"\n                  allowClear={false}\n                  showToday={false}\n                  disabledDate={date => {\n                    return date && date > moment().endOf(\"days\")\n                  }}\n                />\n              )}\n            </Form.Item>\n            <Form.Item label={assets.details}>\n              {getFieldDecorator(\"details\", {\n                initialValue: initValues.details\n              })(\n                <TextArea\n                  rows={3}\n                  placeholder={`${assets.add} ${assets.details}`}\n                />\n              )}\n            </Form.Item>\n            <Form.Item label={assets.end}>\n              {getFieldDecorator(\"end_date\", {\n                initialValue: initValues.end_date\n              })(<DatePicker size=\"small\" allowClear={true} />)}\n            </Form.Item>\n            <Form.Item label={assets.status}>\n              {getFieldDecorator(\"status\", {\n                initialValue: initValues.status,\n                valuePropName: \"checked\"\n              })(\n                <Switch\n                  size=\"small\"\n                  checkedChildren={<Icon type=\"check\" />}\n                  unCheckedChildren={<Icon type=\"close\" />}\n                />\n              )}\n            </Form.Item>\n            <Form.Item label={assets.priority}>\n              {getFieldDecorator(\"priority\", {\n                initialValue: initValues.priority\n              })(\n                <Radio.Group>\n                  {Object.entries(priorityList).map((item, index) => {\n                    return (\n                      <Radio key={index} value={Number(item[0])}>\n                        {item[1]}\n                      </Radio>\n                    )\n                  })}\n                </Radio.Group>\n              )}\n            </Form.Item>\n            <Form.Item label={assets.pistures}>\n              {getFieldDecorator(\"pictures\", {\n                initialValue: initValues.pictures,\n                valuePropName: \"fileList\",\n                getValueFromEvent: this.normFile\n              })(\n                <Upload action=\"/service/upload\" listType=\"picture\">\n                  <Button size=\"small\">\n                    <Icon type=\"upload\" />\n                    Upload\n                  </Button>\n                </Upload>\n              )}\n            </Form.Item>\n            <Row type=\"flex\" justify=\"end\">\n              {type === \"edit\" && (\n                <Button\n                  type=\"default\"\n                  onClick={this.cancel}\n                  size=\"small\"\n                  style={{ marginRight: \"12px\" }}\n                >\n                  {assets.cancel}\n                </Button>\n              )}\n              <Button type=\"primary\" onClick={this.submit} size=\"small\">\n                {assets.submit}\n              </Button>\n            </Row>\n          </Form>\n        )}\n        {type === \"show\" && (\n          <div className=\"show\">\n            <Row>\n              <p>创建于 {data.start_date}</p>\n              <p>{this.renderEndDate()}</p>\n            </Row>\n            <Divider dashed={true}></Divider>\n            {data.details !== \"\" && (\n              <div>\n                <Row className=\"details\">{data.details}</Row>\n                <Divider dashed={true}></Divider>\n              </div>\n            )}\n            {initValues.pictures && (\n              <Carousel className=\"carousel\" autoplay>\n                {initValues.pictures.map((item, index) => {\n                  return (\n                    <div key={index}>\n                      <img className=\"display-image\" src={item.url} />\n                    </div>\n                  )\n                })}\n              </Carousel>\n            )}\n            <Row className=\"func-box\" type=\"flex\" justify=\"end\">\n              <Button type=\"primary\" size=\"small\" onClick={this.editPanel}>\n                {assets.edit}\n              </Button>\n            </Row>\n          </div>\n        )}\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    const type = this.props.focusData.currentType\n    if (type === \"add\") {\n      this.updateInitValues()\n    } else {\n      this.initCurrentData()\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.current !== prevProps.current) {\n      this.initCurrentData()\n    }\n    if (this.props.focusData.currentType !== prevProps.focusData.currentType) {\n      this.props.form.resetFields()\n      this.updateInitValues()\n    }\n  }\n\n  getEditInitValue = () => {\n    const end =\n      this.state.data.end_date && this.state.data.end_date !== \"\"\n        ? moment(this.state.data.end_date)\n        : null\n    const pics = this.state.data.pictures\n    let params: initValue = {}\n    params.title = this.state.data.title\n    params.start_date = moment(this.state.data.start_date)\n    params.details = this.state.data.details\n    params.end_date = end\n    params.status = this.state.data.status === 1 ? true : false\n    params.priority = this.state.data.priority\n    if (pics && pics !== \"\") {\n      const list = pics.split(\"^^\")\n      params.pictures = list.map((item, index) => {\n        return {\n          uid: String(index - 10),\n          name: item,\n          status: \"done\",\n          url: item,\n          response: {\n            url: item\n          }\n        }\n      })\n    }\n\n    return params\n  }\n\n  // 更新表单初始值\n  updateInitValues = () => {\n    const type = this.props.focusData.currentType\n    let params = {}\n    if (type === \"add\") {\n      params = {\n        title: \"\",\n        start_date: moment(),\n        details: \"\",\n        end_date: null,\n        status: true,\n        priority: 1,\n        pictures: null\n      }\n    } else {\n      params = this.getEditInitValue()\n    }\n    this.setState({\n      initValue: Object.assign({}, params)\n    })\n  }\n\n  // 根据 id 来更新 data\n  initCurrentData = () => {\n    const list = this.props.focusData.list\n    list.forEach(item => {\n      if (item.id === this.props.current) {\n        this.setState(\n          {\n            data: Object.assign({}, item)\n          },\n          () => {\n            this.updateInitValues()\n          }\n        )\n      }\n    })\n  }\n\n  // 渲染标题\n  renderTitle = () => {\n    const type = this.props.focusData.currentType\n    const assets = this.context.assets\n    if (type === \"add\") {\n      return <div className=\"title\">{assets.add} Focus</div>\n    } else if (type === \"edit\") {\n      return <div className=\"title\">{assets.edit} Focus</div>\n    } else if (type === \"show\") {\n      const priority = this.state.data.priority\n      const title = this.state.data.title\n      return (\n        <Row type=\"flex\">\n          <div\n            className=\"priority\"\n            style={{ backgroundColor: priorityColors[priority - 1] }}\n          >\n            {assets.priorityList[priority]}\n          </div>\n          <div className=\"title\">{title}</div>\n        </Row>\n      )\n    }\n  }\n\n  // 渲染 show 结束时间\n  renderEndDate = () => {\n    const data = this.state.data\n    const label = data.end_date && data.end_date !== \"\"\n    const end_date = label ? moment(data.end_date) : moment()\n    const diffSeconds = end_date.diff(moment(data.start_date), \"seconds\")\n    const diffStr = formatSeconds(diffSeconds)\n    const str = `距${label ? data.end_date : \"今\"}已执行 ${diffStr}`\n    return str\n  }\n\n  // 添加 focus 记录回调\n  addForm = async params => {\n    const res = await addFocusRecord(params)\n    if (res.success) {\n      // 关闭阴影遮罩\n      await this.freshList()\n      this.props.drawerClose()\n      message.success(\"添加成功！\", 2)\n    }\n  }\n\n  // 修改 focus 记录回调\n  editForm = async params => {\n    const res = await editFocusRecord(params)\n    if (res.success) {\n      await this.freshList()\n      this.props.drawerClose()\n      message.success(\"更新成功！\", 2, () => {\n        this.initCurrentData()\n      })\n    }\n  }\n\n  // 刷新 focus list\n  // 可以直接从父组件通过通信获得，这里是为了锻炼 redux 能力\n  freshList = async () => {\n    const res = await getFocusList({ status: 1 })\n    this.props.changeFocusList(res.data.list)\n  }\n\n  // 取消编辑\n  cancel = () => {\n    this.props.changeFocusType(\"show\")\n  }\n\n  // 提交表单事件\n  submit = e => {\n    let params = {}\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        // 处理文件列表\n        if (values.pictures && values.pictures.length > 0) {\n          let list = values.pictures.map(item => {\n            return item.response.url\n          })\n          // 文件数组转字符串\n          params[\"pictures\"] = list.join(\"^^\")\n        } else {\n          params[\"pictures\"] = \"\"\n        }\n        params[\"title\"] = values.title\n        params[\"details\"] = values.details ? values.details : \"\"\n        params[\"start_date\"] = moment(values.start_date).format(\n          \"YYYY-MM-DD HH:mm:ss\"\n        )\n        params[\"end_date\"] = values.end_date\n          ? moment(values.end_date).format(\"YYYY-MM-DD HH:mm:ss\")\n          : \"\"\n        params[\"priority\"] = values.priority\n        params[\"status\"] = values.status ? 1 : 0\n        if (this.props.focusData.currentType === \"add\") {\n          this.addForm(params)\n        } else if (this.props.focusData.currentType === \"edit\") {\n          params[\"id\"] = Number(this.props.current)\n          this.editForm(params)\n        }\n      } else {\n        throw err\n      }\n    })\n  }\n\n  // 展示编辑页面\n  editPanel = () => {\n    this.props.changeFocusType(\"edit\")\n  }\n\n  normFile = e => {\n    if (Array.isArray(e)) {\n      return e\n    }\n    return e && e.fileList\n  }\n}\n\nconst DrawerView = Form.create<DrawerViewProps>({\n  name: \"drawerForm\"\n})(DrawerForm)\n\nfunction mapStateToProps({ focusData }) {\n  return {\n    focusData\n  }\n}\n\nexport default connect(mapStateToProps, {\n  changeFocusList,\n  changeFocusType\n})(DrawerView)\n","import React from 'react';\nimport { Button, Drawer, List, Card, Icon } from 'antd';\nimport { Header } from '@/components/Override';\nimport { connect } from 'react-redux';\nimport { changeFocusList, changeFocusType } from '@/store/Exercise/action';\nimport { getFocusList } from '@/service/homepage/focusService';\nimport DrawerView from './drawerView';\nimport { priorityColors } from '@/config/colors';\nimport { FocusProps } from '@/index.d.ts';\n\ninterface focusState {\n    visible: boolean;\n    // 当前选中 id\n    current: number;\n}\n\nclass FocusView extends React.PureComponent<FocusProps, focusState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            current: -1,\n        };\n    }\n\n    render() {\n        const list = this.props.focusData.list;\n        const RenderEmpty = () => {\n            return (\n                <div className='focus-empty'>\n                    <p>\n                        脑海里充斥着各种想法的状态，被称为<span className='bold'>猴子思维</span>\n                        ，一旦杂念占据大脑，会导致大脑极易疲劳！\n                    </p>\n                    <p>\n                        <Button className='add' onClick={this.showPannel.bind(this, 'add')} type='default' size='small'>专注</Button>\n                        就是要驯服这只猴子!\n                    </p>\n                </div>\n            );\n        };\n        let headConfig = this.props.head;\n\n        if (list.length > 0) {\n            headConfig.showAddBtn = true;\n            headConfig.addEvent = this.showPannel;\n        }\n\n        return (\n            <div className='focusView'>\n                <Header {...headConfig} />\n                {list.length > 0 ?\n                    <List\n                        grid={{ gutter: 16, column: 6 }}\n                        dataSource={this.props.focusData.list}\n                        renderItem={item => (\n                            <List.Item>\n                                <Card\n                                    size='small'\n                                    className='card'\n                                    hoverable={true}\n                                    extra={<Button className='dark' size='small' onClick={this.showPannel.bind(this, 'show', item.id)} type='link'><Icon type=\"form\" /></Button>}\n                                    headStyle={{ color: priorityColors[item.priority - 1] }}\n                                    title={item.title}>\n                                    <p className='start'>{item.start_date}</p>\n                                    <p className='details'>{item.details}</p>\n                                </Card>\n                            </List.Item>\n                        )}\n                    /> : <RenderEmpty />\n                }\n                <Drawer\n                    className='drawer'\n                    width={400}\n                    closable={false}\n                    placement='right'\n                    visible={this.state.visible}\n                    onClose={this.drawerClose}>\n                    <DrawerView className='content' current={this.state.current} drawerClose={this.drawerClose}></DrawerView>\n                </Drawer>\n            </div>\n        );\n    }\n\n    // 初始化阶段，render() 完成之后\n    componentDidMount() {\n        this.initData();\n    }\n\n    initData = async () => {\n        // 获取处于激活状态的 list\n        const res = await getFocusList({ status: 1 });\n        this.props.changeFocusList(res.data.list);\n    }\n\n    // 展示面板\n    showPannel = (type?: string, id?: number) => {\n        this.props.changeFocusType(type);\n        this.setState({\n            current: Number(id),\n            visible: true,\n        });\n    }\n\n    // 点击阴影遮罩关闭\n    drawerClose = () => {\n        this.setState({\n            visible: false\n        });\n    }\n}\n\nfunction mapStateToProps({ focusData }) {\n    return {\n        focusData\n    };\n}\n\nexport default connect(mapStateToProps, {\n    changeFocusList,\n    changeFocusType\n})(FocusView);","import React from 'react';\nimport { TriviaState } from '@/index.d.ts';\n\ninterface TriviaContext {\n    state: TriviaState;\n    dispatch: React.Dispatch<any>\n}\n\nexport const TriviaContext = React.createContext<TriviaContext>({\n    state: {\n        triviaList: [],\n        groupList: [],\n        groupMap: {},\n        group: -127,\n        panelType: '',\n        current: -127,\n        visible: true,\n    },\n    dispatch: () => {}\n});\n","import { post, get } from '@/cluster/request';\nimport { addData, triviaGroup, triviaList } from '../mock/homepage';\nimport { config } from '@/config/sysConfig';\nimport { message } from 'antd';\n\nconst useMock = config.useMock === 'false' ? false : true;\n\n/**\n * 添加 trivia group record\n * @param {name} 记录名称\n * @param {status} 是否允许修改 0-允许修改 1-不允许修改\n */\nexport const addTriviaGroupItem = async (params) => {\n    const res = useMock ? await addData : await post('trivia/group/add', params);\n    if (!res.success) {\n        message.error('添加失败！');\n    }\n    return res;\n}\n\nexport const updateTriviaGroupItem = async (params) => {\n    const res = useMock ? await addData : await post('trivia/group/update', params);\n    if (!res.success) {\n        message.error('修改失败！');\n    }\n    return res;\n}\n\nexport const getTriviaGroupList = async () => {\n    const res = useMock ? await triviaGroup : await get('trivia/group/list');\n    if (!res.success) {\n        message.error('获取列表失败！');\n    }\n    return res;\n}\n\nexport const getTriviaList = async (params) => {\n    const res = useMock ? await triviaList : await get('trivia/list', {\n        params: params\n    });\n    if (!res.success) {\n        message.error('获取列表失败！');\n    }\n    return res;\n}\n\n/**\n * 修改 trivia record\n * @id 记录 id\n * @details 详情\n * @link 相关连接\n * @status 是否展示\n * @user 最后修改者\n * @group 所在分组\n */\nexport const updateTrivia = async (params) => {\n    const res = useMock ? await addData : await post('trivia/update', params);\n    if (!res.success) {\n        message.error('修改失败！');\n    }\n    return res;\n}\n\n/**\n * 添加 trivia record\n * @details 详情\n * @link 相关连接\n * @status 是否展示\n * @user 最后修改者\n * @group 所在分组\n */\nexport const addTrivia = async (params) => {\n    const res = useMock ? await addData : await post('trivia/add', params);\n    if (!res.success) {\n        message.error('添加失败！');\n    }\n    return res;\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { Form, Input, Row, Col, Button, Icon, Select, Divider, message } from 'antd';\nimport { FormComponentProps } from 'antd/es/form';\nimport { LocaleContext } from '@/cluster/context';\nimport { TriviaContext } from './context';\nimport { addTriviaGroupItem, updateTriviaGroupItem, addTrivia, updateTrivia } from '@/service/homepage/triviaService';\nimport { TriviaState, TriviaData } from '@/index.d.ts';\n\ninterface TriviaDrawerProps extends FormComponentProps {\n    className: string;\n    initTriviaGroup: () => void;\n}\n\ninterface GroupData {\n    show: boolean;\n    name: string;\n    current: number;\n    // 触发方式\n    trigger: string;\n}\n\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nfunction Drawer(props) {\n    const { assets } = useContext(LocaleContext);\n    const trivia = assets.homepageConfig.trivia.title;\n    const { state, dispatch } = useContext(TriviaContext);\n    const initFormData = {\n        id: -127,\n        details: '',\n        link: '',\n        user: 'yh',\n        group: 1,\n        name: 'unknown',\n    };\n    const [formData, setFormData] = useState<TriviaData>(initFormData);\n    const [groupData, setGroupData] = useState<GroupData>({\n        show: false,\n        name: '',\n        current: 1,\n        trigger: ''\n    });\n    const col = {\n        labelCol: { span: 4 },\n        wrapperCol: { span: 20 }\n    };\n    const type = state.panelType;\n    const { getFieldDecorator, validateFields, resetFields } = props.form;\n    const setInitFormData = () => {\n        const list: TriviaData[] = state.triviaList;\n        list.forEach(item => {\n            if (item.id === state.current) {\n                resetFields();\n                setFormData(item);\n            }\n        })\n    };\n    const cancel = () => {\n        dispatch({\n            type: 'closePanel'\n        });\n    };\n    const addGroupItem = () => {\n        setGroupData({\n            ...groupData,\n            show: !groupData.show,\n            name: '',\n            trigger: 'add'\n        });\n    }\n    const changeGroupValue = (e) => {\n        const value = e.target.value;\n        setGroupData({\n            ...groupData,\n            name: value\n        });\n    }\n    const editGroupItem = () => {\n        validateFields(['group'], (err, values) => {\n            if (!err) {\n                const id = values.group;\n                state.groupList.forEach(item => {\n                    if (item.id === id) {\n                        setGroupData({\n                            show: true,\n                            name: item.name,\n                            current: item.id,\n                            trigger: 'edit'\n                        });\n                    }\n                })\n            }\n        })\n    }\n    const submitGroup = async () => {\n        const name = groupData.name;\n        const trigger = groupData.trigger;\n        if (name === '') {\n            return;\n        }\n        let res = null;\n        if (trigger === 'add') {\n            res = await addTriviaGroupItem({\n                name: name,\n                status: 0\n            });\n        } else if (trigger === 'edit') {\n            const id = groupData.current;\n            res = await updateTriviaGroupItem({\n                name: name,\n                status: 0,\n                id: Number(id),\n            });\n        }\n        if (res.success) {\n            await props.initTriviaGroup();\n            addGroupItem();\n        }\n    }\n\n    const submit = (e) => {\n        validateFields(async (err, values) => {\n            if (!err) {\n                let params = {\n                    status: 1,\n                    user: 'yh',\n                };\n                console.log(state);\n                if (state.panelType === 'add') {\n                    params['details'] = values.details;\n                    params['group'] = values.group;\n                    params['link'] = values.link;\n                    console.log(params);\n                    const res = await addTrivia(params);\n                    if (res.success) {\n                        dispatch({\n                            type: 'closePanel'\n                        });\n                        message.success('添加成功', 2);\n                        dispatch({\n                            type: 'groupChange',\n                            group: values.group\n                        });\n                    }\n                } else if (state.panelType === 'edit') {\n                    params['details'] = values.details;\n                    params['group'] = values.group;\n                    params['link'] = values.link;\n                    params['id'] = Number(state.current);\n                    const res = await updateTrivia(params);\n                    if (res.success) {\n                        dispatch({\n                            type: 'closePanel'\n                        });\n                        message.success('更新成功', 2);\n                        dispatch({\n                            type: 'groupChange',\n                            group: values.group\n                        });\n                    }\n                }\n            }\n        });\n    };\n\n    useEffect(() => {\n        if (state.panelType === 'add') {\n            setFormData(initFormData);\n        } else {\n            setInitFormData();\n        }\n    }, [state.current]);\n\n    return (\n        <div className={props.className}>\n            <div className=\"header\">\n                <div className=\"title\">\n                    {type === 'edit' ? `${assets.edit} ${trivia}` : `${assets.add} ${trivia}`}\n                </div>\n            </div>\n            {/* 设计成受控组件 */}\n            {groupData.show &&\n                <Row>\n                    <Col offset={4}>\n                        <Input\n                            className='groupInput'\n                            size='small'\n                            allowClear={true}\n                            value={groupData.name}\n                            onChange={changeGroupValue}\n                            placeholder={assets.placeholder.addGroup}\n                            addonAfter={<Button onClick={submitGroup} style={{ height: '20px' }} size='small' type='link'>{assets.submit}</Button>} />\n                    </Col>\n                </Row>\n            }\n            <Form className={`type-${type}`} {...col}>\n                <Form.Item label={assets.group}>\n                    <Row gutter={8}>\n                        <Col span={18}>\n                            {getFieldDecorator('group', {\n                                initialValue: formData.group\n                            })(<Select className='groupSelect' size='small'>\n                                {state.groupList.map((item, index) => {\n                                    return (\n                                        <Option key={index} value={item.id}>\n                                            {item.name}\n                                        </Option>);\n                                })}</Select>)}\n                        </Col>\n                        <Col span={6}>\n                            <Button onClick={addGroupItem} size='small' type='link'>\n                                <Icon type={groupData.show ? 'close' : 'plus'} />\n                            </Button>\n                            <Button onClick={editGroupItem} size='small' type='link'><Icon type='edit' /></Button>\n                        </Col>\n                    </Row>\n                </Form.Item>\n                <Form.Item label={assets.details}>\n                    {getFieldDecorator('details', {\n                        initialValue: formData.details,\n                        rules: [{\n                            max: 600\n                        }]\n                    })(<TextArea rows={8} placeholder={`${assets.add} ${assets.details}`}></TextArea>)}\n                </Form.Item>\n                <Form.Item label={assets.link}>\n                    {getFieldDecorator('link', {\n                        initialValue: formData.link,\n                        rules: [{\n                            max: 255\n                        }]\n                    })(<Input placeholder={assets.placeholder.link} size='small' />)}\n                </Form.Item>\n                <Row type='flex' justify='end'>\n                    <Button type='default' onClick={cancel} size='small' style={{ marginRight: '12px' }}>\n                        {assets.cancel}\n                    </Button>\n                    <Button type='primary' onClick={submit} size='small'>\n                        {assets.submit}\n                    </Button>\n                </Row>\n            </Form>\n        </div>\n    );\n}\n\nexport const DrawerContent = Form.create<TriviaDrawerProps>({\n    name: 'trivia'\n})(Drawer);","import React, { useState, useEffect, useContext, useReducer } from 'react'\nimport {\n  Button,\n  Drawer,\n  List,\n  Card,\n  Typography,\n  Icon,\n  Col,\n  Row,\n  Select,\n} from 'antd'\nimport { TriviaContext } from './context'\nimport { DrawerContent } from './Drawer'\nimport { LocaleContext } from '@/cluster/context'\nimport { Header } from '@/components/Override'\nimport {\n  getTriviaList,\n  getTriviaGroupList,\n  updateTrivia,\n} from '@/service/homepage/triviaService'\nimport { languageColors } from '@/config/colors'\nimport { TriviaState } from '@/index.d.ts'\n\nconst { Option } = Select\n\nfunction RenderEmpty(props) {\n  return (\n    <div className=\"trivia-empty\">\n      <p>“伏久者飞必高，开先者谢独早，知此，可以免蹭蹬之忧，可以消躁之念”</p>\n      <p>\n        <Button\n          className=\"add\"\n          type=\"default\"\n          size=\"small\"\n          onClick={props.event.bind(this, 'add')}\n        >\n          添加\n        </Button>\n        知识碎片，但是切忌知识焦虑！\n      </p>\n    </div>\n  )\n}\n\nfunction reducer(state: TriviaState, action): TriviaState {\n  switch (action.type) {\n    case 'showPanel':\n      return {\n        ...state,\n        visible: true,\n        panelType: action.panelType,\n        current: action.current ? action.current : -127,\n      }\n    case 'triviaList':\n      return {\n        ...state,\n        triviaList: action.triviaList,\n      }\n    case 'closePanel':\n      return {\n        ...state,\n        visible: false,\n      }\n    case 'groupList':\n      return {\n        ...state,\n        groupList: action.groupList,\n      }\n    case 'groupChange':\n      return {\n        ...state,\n        group: action.group,\n      }\n    case 'setGroupMap':\n      return {\n        ...state,\n        groupMap: action.groupMap,\n      }\n    default:\n      break\n  }\n}\n\nfunction TriviaView(props) {\n  const { assets } = useContext(LocaleContext)\n  const headConfig = props.head\n  const initState = {\n    triviaList: [],\n    groupList: [],\n    group: -127,\n    groupMap: {},\n    panelType: 'add',\n    current: -127,\n    visible: false,\n  }\n  const [state, dispatch] = useReducer(reducer, initState)\n  const { Paragraph } = Typography\n  const initTriviaList = async () => {\n    const params = {\n      group: state.group,\n    }\n    const res = await getTriviaList(params)\n    if (res.success) {\n      dispatch({\n        type: 'triviaList',\n        triviaList: res.data.list,\n      })\n    }\n  }\n  const initGroupMap = (list) => {\n    const map = {\n      '-127': assets.all,\n    }\n    list.forEach((item) => {\n      map[String(item.id)] = item.name\n    })\n    dispatch({\n      type: 'setGroupMap',\n      groupMap: map,\n    })\n  }\n  const initTriviaGroup = async () => {\n    const res = await getTriviaGroupList()\n    if (res.success) {\n      dispatch({\n        groupList: res.data.list,\n        type: 'groupList',\n      })\n      initGroupMap(res.data.list)\n    }\n  }\n  \n  const drawerClose = () => {\n    dispatch({\n      type: 'closePanel',\n    })\n  }\n  const showPannel = (type?: string, id = -127) => {\n    dispatch({\n      type: 'showPanel',\n      panelType: type,\n      current: id,\n    })\n  }\n  const selectTrivia = (value: string) => {\n    dispatch({\n      type: 'groupChange',\n      group: Number(value),\n    })\n  }\n  const jumpLink = (link: string): void => {\n    window.open(link, 'blank')\n  }\n  const deleteTrivia = async (item) => {\n    const params = Object.assign({}, item)\n    params.status = 0\n    delete params.last_update\n    delete params.name\n\n    const res = await updateTrivia(params)\n    if (res.success) {\n      initTriviaList()\n    }\n  }\n\n  useEffect(() => {\n    initTriviaGroup()\n  }, [])\n\n  useEffect(() => {\n    initTriviaList()\n  }, [state.group])\n\n  if (state.triviaList.length > 0) {\n    headConfig.showAddBtn = true\n    headConfig.addEvent = showPannel\n  }\n\n  return (\n    <TriviaContext.Provider value={{ state, dispatch }}>\n      <div className=\"triviaView\">\n        <Header {...headConfig} />\n        <Row>\n          <Col className=\"headerBar\">\n            <Select\n              className=\"triviaSelect\"\n              value={state.groupMap[String(state.group)]}\n              size=\"small\"\n              onChange={selectTrivia}\n              showSearch\n            >\n              <Option value=\"-127\">{assets.all}</Option>\n              {state.groupList.map((item, index) => {\n                return (\n                  <Option value={item.id} key={index}>\n                    {item.name}\n                  </Option>\n                )\n              })}\n            </Select>\n          </Col>\n        </Row>\n        {state.triviaList.length > 0 ? (\n          <Row>\n            <Col>\n              <List\n                className=\"list\"\n                grid={{ gutter: 16, column: 4 }}\n                dataSource={state.triviaList}\n                renderItem={(item) => (\n                  <List.Item>\n                    <Card className=\"card\" size=\"small\" hoverable={true}>\n                      <Row className=\"name\" type=\"flex\" justify=\"space-between\">\n                        <Col span={16}>\n                          <span\n                            className=\"label\"\n                            style={{\n                              backgroundColor:\n                                languageColors[item.name.toLocaleLowerCase()],\n                            }}\n                          >\n                            {item.name}\n                          </span>\n                        </Col>\n                        <Col className=\"btn-box\" span={8}>\n                          {item.link && item.link.length > 0 && (\n                            <Button\n                              className=\"dark\"\n                              size=\"small\"\n                              type=\"link\"\n                              onClick={jumpLink.bind(this, item.link)}\n                            >\n                              <Icon type=\"link\" />\n                            </Button>\n                          )}\n                          <Button\n                            className=\"dark\"\n                            size=\"small\"\n                            type=\"link\"\n                            onClick={showPannel.bind(this, 'edit', item.id)}\n                          >\n                            <Icon type=\"form\" />\n                          </Button>\n                          <Button\n                            className=\"dark\"\n                            size=\"small\"\n                            type=\"link\"\n                            onClick={deleteTrivia.bind(this, item)}\n                          >\n                            <Icon type=\"delete\" />\n                          </Button>\n                        </Col>\n                      </Row>\n                      <Paragraph className=\"details\" copyable>\n                        {item.details}\n                      </Paragraph>\n                      <Row className=\"footer\" type=\"flex\" justify=\"end\">\n                        <Col className=\"message\">\n                          {item.user} 创建于 {item.last_update}\n                        </Col>\n                      </Row>\n                    </Card>\n                  </List.Item>\n                )}\n              />\n            </Col>\n          </Row>\n        ) : (\n          <RenderEmpty event={showPannel} />\n        )}\n        <Drawer\n          className=\"triviaDrawer\"\n          width={400}\n          closable={false}\n          visible={state.visible}\n          onClose={drawerClose}\n        >\n          <DrawerContent\n            className=\"content\"\n            initTriviaGroup={initTriviaGroup}\n          />\n        </Drawer>\n      </div>\n    </TriviaContext.Provider>\n  )\n}\n\nexport default TriviaView\n","import React from 'react'\n\nexport function asyncComponent(getTargetComponent) {\n  class AsyncComponent extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        component: null,\n      }\n    }\n\n    componentDidMount() {\n      getTargetComponent().then((md) => {\n        this.setState({\n          // 同时兼容 ES6 和 CommonJS 的模块\n          component: md.default ? md.default : md,\n        })\n      })\n    }\n\n    render() {\n      const Target = this.state.component\n      // 通过自闭和标签进行返回，是为了接受可能出现的 props 参数传递\n      return Target ? <Target {...this.props} /> : null\n    }\n  }\n\n  return AsyncComponent\n}\n","import HomepageView from '@/view/Homepage'\nimport { asyncComponent } from './AsyncComponent'\n\ninterface RouteConfigItem {\n  key: string\n  title?: string\n  path: string\n  component: any\n}\n\ninterface RouterConfig {\n  routeConfig: RouteConfigItem[]\n}\n\nconst config: RouterConfig = {\n  routeConfig: [\n    {\n      key: 'entry',\n      path: '/',\n      component: HomepageView,\n    },\n    {\n      key: 'weight',\n      path: '/weight',\n      component: asyncComponent(() => import('@/view/Weight')),\n    },\n    {\n      key: 'practice',\n      path: '/practice',\n      component: asyncComponent(() => import('@/view/Practice')),\n    },\n    {\n      key: 'tools',\n      path: '/tools',\n      component: asyncComponent(() => import('@/view/Tools')),\n    },\n  ],\n}\n\nexport default config\n","import React from 'react';\nimport { LocaleContext } from '@/cluster/context';\nimport FocusView from './Focus';\nimport TriviaView  from './Trivia';\nimport './index.scss';\n\n/**\n * home component 主要采用 react hook 来完成\n */\n\nfunction HomepageView() {\n    return (\n        <LocaleContext.Consumer>\n            {({ assets }) => {\n                const homepageConfig = assets.homepageConfig;\n                \n                return (\n                    <div className='homepage'>\n                        <FocusView head={homepageConfig.focus} />\n                        <TriviaView head={homepageConfig.trivia} />\n                    </div>\n                );\n            }}\n        </LocaleContext.Consumer>\n    );\n}\n\nexport default HomepageView;","import React from 'react'\nimport config from './config'\nimport { Route, Switch } from 'react-router-dom'\n\nfunction Router() {\n  /**\n   * defaultConfig 代表默认配置\n   * 根据路由对象来生成不同的 Route\n   */\n  const routeData = config.routeConfig\n\n  // 筛选出没有重定向的\n  const paths = routeData.filter(function (item) {\n    return !item.redirect\n  })\n\n  return (\n    <Switch>\n      {paths &&\n        paths.map((item) => {\n          // exact 表示精确匹配时，才对组件进行渲染\n          return (\n            <Route\n              path={item.path}\n              component={item.component}\n              key={item.key}\n              exact={true}\n            ></Route>\n          )\n        })}\n    </Switch>\n  )\n}\n\nexport default Router\n","export const headerMockData = [{\n  id: 1,\n  label: 'blog',\n  type: 'link',\n  target: 'http://122.51.215.237:7771/',\n  icon: ''\n},{\n  id: 2,\n  label: 'practice1',\n  type: 'component',\n  target: '/practice',\n  icon: ''\n},{\n  id: 3,\n  label: 'github',\n  type: 'link',\n  target: 'https://github.com/Y-lonelY',\n  icon: ''\n},{\n  id: 4,\n  label: 'practice2',\n  type: 'component',\n  target: '/practice',\n  icon: ''\n}]","import { get } from '@/cluster/request'\nimport { headerMockData } from '../mock/header'\nimport { config } from '@/config/sysConfig'\n\nconst useMock = config.useMock === 'false' ? false : true\n\ninterface MetadataInterface {\n  id: number\n  label: string\n  type: string\n  target: string\n  icon?: string\n}\n\n\nexport const getHeaderMetadata = async () => {\n  const res = useMock ? await headerMockData : []\n  return res\n}","import React from 'react'\nimport { Row, Col, Button } from 'antd'\nimport { SuperEmpty } from '@/components/Override'\nimport { useHistory } from 'react-router'\nimport { TreasureState } from './Treasure'\n\nexport default function RenderContent ({ metadata }: Pick<TreasureState, 'metadata'>) {\n  const { links, components } = metadata\n  const count = links.length + components.length\n  const history = useHistory()\n\n  function go ({ type, target }) {\n    if (type === 'component') {\n      history.push(target)\n    } else {\n      window.open(target, 'blank')\n    }\n  }\n\n  return (\n    <div>\n      {count > 0 ? (\n        <React.Fragment>\n          {Object.entries(metadata).map((item) => {\n            const [key, value] = item\n            return (\n              value && (\n                <Row key={key} type=\"flex\" justify=\"space-between\">\n                  <Col span={24}>{key}</Col>\n                  <React.Fragment>\n                    {value.map((v) => {\n                      const { label, id } = v\n                      return (\n                        <Col key={id} span={6}>\n                          <Button size=\"small\" type=\"link\" onClick={go.bind(this, v)}>\n                            {label}\n                          </Button>\n                        </Col>\n                      )\n                    })}\n                  </React.Fragment>\n                </Row>\n              )\n            )\n          })}\n        </React.Fragment>\n      ) : (\n        <SuperEmpty />\n      )}\n    </div>\n  )\n}","import React, { useReducer, useEffect } from 'react'\nimport { Popover, Input } from 'antd'\nimport { getHeaderMetadata } from '@/service/Header'\nimport RenderContent from './Content'\n\nconst { Search } = Input\n\ninterface MetaAtom {\n  id: number\n  label: string\n  type: string\n  target: string\n  icon?: string\n}\n\nexport interface TreasureState {\n  expanded?: boolean\n  metadata: {\n    links: MetaAtom[]\n    components: MetaAtom[]\n  }\n}\n\n// current state and in actions\nfunction reducer(state: TreasureState, action): Partial<TreasureState> {\n  switch (action.type) {\n    case 'metadata':\n      return {\n        metadata: Object.assign({}, action.metadata),\n      }\n  }\n}\n\n\n\nexport default function Treasure() {\n  const initState = {\n    expanded: false,\n    metadata: {\n      links: [],\n      components: [],\n    },\n  }\n  const [state, dispatch] = useReducer(reducer, initState)\n\n  // init component, get metadata\n  async function init() {\n    const data = await getHeaderMetadata()\n    const links = []\n    const components = []\n    data.forEach((item) => {\n      if (item.type === 'link') {\n        links.push(item)\n      } else if (item.type === 'component') {\n        components.push(item)\n      }\n    })\n    dispatch({\n      type: 'metadata',\n      metadata: {\n        links,\n        components,\n      },\n    })\n  }\n\n  // useEffect 内不能使用其他 hook\n  useEffect(() => {\n    init()\n  }, [])\n\n  return (\n    <div className=\"treasure-box\">\n      <Popover\n        title=\"\"\n        content={<RenderContent metadata={state.metadata} />}\n        placement=\"bottom\"\n        trigger=\"click\"\n      >\n        <Search\n          placeholder=\"input search component\"\n          style={{ width: '200px' }}\n          onSearch={(value) => {\n            console.log(value)\n          }}\n        />\n      </Popover>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Popover, Progress } from \"antd\"\nimport moment from \"moment\"\nimport \"./index.scss\"\n\ninterface ClockState {\n  date: String\n}\n\nclass Clock extends React.Component<{}, ClockState> {\n  timeInterval: number\n  // 添加一个类构造函数来初始化状态 this.state\n  // 类组件应该始终使用 props 调用基础构造函数，super() 方法就是为达到此目的\n  constructor(props) {\n    super(props)\n    this.state = {\n      date: moment().format(\"YYYY-MM-DD H:mm:ss A\"),\n    }\n  }\n\n  componentDidMount() {\n    // 新建一个定时器任务\n    this.timeInterval = window.setInterval(() => {\n      this.setState({\n        date: moment().format(\"YYYY-MM-DD HH:mm:ss A\"),\n      })\n    }, 1000)\n  }\n\n  componentWillUnmount() {\n    // 清除定时器任务\n    clearInterval(this.timeInterval)\n  }\n\n  timeFlow = () => {\n    const endDate = moment().endOf(\"year\").format(\"MM-DD, YYYY\")\n    const days = moment().dayOfYear()\n    const isLeap = moment().isLeapYear()\n    let fullDays = 365\n\n    if (isLeap) {\n      fullDays = 366\n    }\n\n    let leftDays = fullDays - days\n    let percent = Number(((days * 100) / fullDays).toFixed(0))\n\n    return (\n      <div className=\"dateBox\">\n        <p className=\"title-bold\">{endDate}</p>\n        <p>{leftDays} days left</p>\n        <Progress\n          className=\"date-progress\"\n          type=\"line\"\n          percent={percent}\n          status=\"active\"\n          strokeColor={{\n            from: \"#eee\",\n            to: \"#777\",\n          }}\n        ></Progress>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"clockBox\">\n        <Popover trigger=\"hover\" title=\"Time Flow\" content={this.timeFlow()}>\n          <span className=\"clock-btn\">{this.state.date}</span>\n        </Popover>\n      </div>\n    )\n  }\n}\n\nexport default Clock\n","import React from 'react'\nimport { Layout, Col, Row, Button } from 'antd'\nimport { withRouter } from 'react-router-dom'\nimport { SuperIcon } from '@/components/Override'\nimport Treasure from './Treasure'\nimport { LocaleContext } from '@/cluster/context'\nimport Clock from '@/components/Clock'\nimport './index.scss'\n\nconst { Header } = Layout\n\ninterface FlowHeaderProps {\n  history: any\n}\n\ninterface FlowHeaderState {\n  current: number\n}\n\nclass FlowHeader extends React.PureComponent<FlowHeaderProps, FlowHeaderState> {\n  static contextType = LocaleContext\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      current: -1,\n    }\n  }\n\n  public render() {\n    const locale = this.context.locale\n    const assets = this.context.assets\n    /**\n     * 从 local 拿到 header display 的 list\n     * 轮询渲染\n     */\n    const headerItems = assets.headerItems\n    return (\n      <div className=\"flow-header\">\n        <Header className=\"header\">\n          <Row className=\"main-row\" type=\"flex\" justify=\"start\">\n            <Col span={2}>\n              <span className=\"label\" onClick={this.viewHomepage}>\n                {assets.mainTitle}\n                <sup>✦</sup>\n              </span>\n            </Col>\n            <Col className=\"list\" span={13} offset={1}>\n              {headerItems.map((item, index) => {\n                if (item.type === 'item') {\n                  return (\n                    <div\n                      className={`${item.type} ${\n                        item.id === this.state.current ? 'active' : ''\n                      }`}\n                      key={index}\n                      onClick={this.handleRouter.bind(this, item.id)}\n                    >\n                      {item.label}\n                    </div>\n                  )\n                } else if (item.type === 'seperator') {\n                  return <div key={index} className=\"seperator\"></div>\n                } else if (item.type === 'link') {\n                  return (\n                    <div\n                      className={`${item.type} ${\n                        item.id === this.state.current ? 'active' : ''\n                      }`}\n                      key={index}\n                      title={item.label}\n                      onClick={this.handleRouter.bind(this, item.id)}\n                    >\n                      <SuperIcon\n                        type={`icon-${item.icon}`}\n                        style={{ fontSize: '14px', paddingLeft: '2px' }}\n                      />\n                    </div>\n                  )\n                }\n              })}\n            </Col>\n            <Col span={8}>\n              <div className=\"func-box\">\n                <Treasure />\n                <Button\n                  className=\"locale\"\n                  size=\"small\"\n                  type=\"link\"\n                  onClick={this.toggleLocale}\n                >\n                  <SuperIcon\n                    className=\"icon\"\n                    type={`icon-${locale === 'zh_cn' ? 'en_us' : 'zh_cn'}`}\n                  />\n                </Button>\n                <Clock />\n              </div>\n            </Col>\n          </Row>\n        </Header>\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    // 根据当前 url 渲染 active item\n    const pathname = window.location.pathname\n    const assets = this.context.assets\n    const headerItems = assets.headerItems\n    let label = -1\n    headerItems.forEach((item) => {\n      if (item.target === pathname) {\n        label = item.id\n        return\n      }\n    })\n    this.setState({\n      current: label,\n    })\n  }\n\n  // 控制路由跳转\n  handleRouter = (id) => {\n    const assets = this.context.assets\n    const headerItems = assets.headerItems\n\n    if (id === this.state.current) {\n      return\n    } else {\n      headerItems.forEach((item) => {\n        if (item.id === id) {\n          this.setState({\n            current: id,\n          })\n          if (item.type === 'link') {\n            window.open(item.target, '_blank')\n          } else if (item.type === 'item') {\n            this.props.history.push(item.target)\n          }\n        }\n      })\n    }\n  }\n\n  // 进入首页\n  viewHomepage = () => {\n    this.setState(\n      {\n        current: -1,\n      },\n      () => {\n        this.props.history.push('/')\n      }\n    )\n  }\n\n  toggleLocale = () => {\n    const toggle = this.context.toggleLocale\n    const locale = this.context.locale\n    let type = 'zh_cn'\n    if (locale === 'zh_cn') {\n      type = 'en_us'\n    }\n    toggle(type)\n  }\n}\n\nexport default withRouter(FlowHeader)\n","import React from \"react\"\nimport { Layout, Col, Row, Switch, Icon, Divider, Button, Modal } from \"antd\"\nimport { LocaleContext } from \"@/cluster/context\"\nimport { config, setUseMock } from \"@/config/sysConfig\"\nimport \"./index.scss\"\n\ninterface FlowFooterState {\n  mockMode: boolean\n  visible: boolean\n}\n\nconst { Footer } = Layout\n\nclass FlowFooter extends React.PureComponent<{}, FlowFooterState> {\n  static contextType = LocaleContext\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      mockMode: config.useMock === \"true\" ? true : false,\n      visible: false\n    }\n  }\n\n  render() {\n    const assets = this.context.assets.footerModule\n    return (\n      <Footer className=\"flow-footer\">\n        <Divider className=\"footer-seprator\">\n          Respect everything that happens\n        </Divider>\n        <Row className=\"main-footer\" type=\"flex\" justify=\"start\">\n          <Col className=\"cm\" span={8}></Col>\n          <Col className=\"cm mid\" span={8}>\n            <h2 className=\"title\">关于</h2>\n            <Button type=\"link\" size=\"small\" onClick={this.showAboutPanel}>\n              About\n            </Button>\n            <Modal\n              title=\"Basic Modal\"\n              visible={this.state.visible}\n              onCancel={() => {\n                this.setState({ visible: false })\n              }}\n            >\n              <p>Some contents...</p>\n              <p>Some contents...</p>\n              <p>Some contents...</p>\n            </Modal>\n          </Col>\n          <Col className=\"cm\" span={8}>\n            <h2 className=\"title\">更多</h2>\n            <div className=\"ft-item\">\n              <Button type=\"link\" size=\"small\" onClick={this.checkMockMode}>\n                Mock\n              </Button>\n              <span className=\"ft-seperator\">-</span>\n              <span className=\"ft-label\">\n                {this.state.mockMode ? assets.mockMode : assets.realMode}\n              </span>\n            </div>\n          </Col>\n        </Row>\n      </Footer>\n    )\n  }\n\n  componentDidMount() {}\n\n  checkMockMode = () => {\n    const mode = !this.state.mockMode\n    this.setState(\n      {\n        mockMode: mode\n      },\n      () => {\n        setUseMock(mode)\n      }\n    )\n  }\n\n  showAboutPanel = () => {\n    this.setState({\n      visible: true\n    })\n  }\n}\n\nexport default FlowFooter\n","import { post } from '@/cluster/request'\nimport { config } from '@/config/sysConfig'\nimport { ErrorParams } from '@/index.d.ts'\n\n/**\n * 添加错误日志，用于捕获生产环境的错误\n * @param params 错误参数\n * @param label 标记，用来控制是否继续发送请求，用于处理该请求本身错误，false 代表继续发送\n */\nasync function addErrorRecord(params: ErrorParams, stop = false) {\n  if (stop || config.isdevelop) {\n    return\n  }\n\n  await post('system/catchErrors', params)\n}\n\nexport { addErrorRecord }\n","import moment from 'moment'\n\n/**\n * errorParams\n */\nexport interface ErrorParams {\n  readonly project: string\n  id?: number\n  username?: string\n  path?: string\n  referrer?: string\n  event?: string\n  type?: string\n  level?: number\n  stack?: string\n  message?: string\n  origin?: string\n  useragent?: string\n  network?: string\n  appversion?: string\n}\n\n/**\n * redux\n */\nexport interface StoreState {\n  dailyList?: any[]\n  sumMap?: {}\n}\n\n/**\n * header config\n */\nexport interface HeaderData {\n  icon: {\n    type: string\n    style?: {}\n  }\n  title: string\n  showAddBtn?: boolean\n  addEvent?: () => void\n}\n\n/**\n * chart\n */\nexport interface PolylineData {\n  type: string\n  date: string\n  number: string\n}\n\nexport interface PieData {\n  leg?: string | number\n  belly?: string | number\n  chest?: string | number\n}\n\n/**\n * Exercise module declare\n */\n\nexport interface ExerciseData {\n  sumMap?: PieData\n  dailyList?: {\n    id: number\n    date: string\n    leg: string\n    belly: string\n    chest: string\n  }[]\n}\n\nexport interface ExerciseChartAction extends ExerciseData {\n  type: string\n}\n\nexport type ExerciseProps = {\n  head: HeaderData\n  exerciseData: ExerciseData\n  changeChart: (...ExerciseData) => ExerciseChartAction\n  changeGoalList: (goalList: GoalListItem[]) => GoalListAction\n}\n\nexport interface ExerciseState {\n  showChart: boolean\n  normalize: boolean\n  chart: PolylineData[]\n  table: ExerciseTableData[]\n  avgData: PieData\n  defaultDateRange: [moment.Moment, moment.Moment]\n}\n\nexport interface ExerciseTableData {\n  key: string\n  date: string\n  leg: number\n  belly: number\n  chest: number\n}\n\n/**\n * GoalList Module Declare\n */\n\nexport interface GoalListItem {\n  id: number\n  start_date: string\n  end_date: string | null\n  reward: string\n  type: string\n  total_price: string\n  goal: string\n  summary: string\n  remark: string | null\n}\n\nexport interface GoalListAction {\n  goalList: GoalListItem[]\n  type: string\n}\n\nexport interface GoalListProps {\n  goalListData: GoalListItem[]\n  changeGoalList: (goalList: GoalListItem[]) => GoalListAction\n  updateDate: (\n    params: { start: string; end: string },\n    changeDateLabel?: boolean\n  ) => void\n}\n\n/**\n * program module\n */\nexport interface ProgramItem {\n  id: number\n  date: string\n  name: string\n  value: number\n}\n\nexport interface ProgramOverviewTemplate {\n  lang: {\n    list: ProgramItem[]\n    name: { name: string; value?: string }[]\n  }\n  project: {\n    list: ProgramItem[]\n    name: { name: string; value?: string }[]\n  }\n}\n\nexport interface ProgramOverviewAction {\n  lang: {\n    list: ProgramItem[]\n    name: { name: string; value?: string }[]\n  }\n  project: {\n    list: ProgramItem[]\n    name: { name: string; value?: string }[]\n  }\n  type: string\n}\n\nexport interface ProgramOverviewProps {\n  head: HeaderData\n  programOverviewData: ProgramOverviewTemplate\n  changeProgramOverview: (\n    params: ProgramOverviewTemplate\n  ) => ProgramOverviewAction\n}\n\n// focus module\nexport interface FocusItem {\n  id?: number\n  title?: string\n  details?: string\n  start_date?: string\n  end_date?: string\n  pictures?: string\n  status?: number\n  priority?: number\n}\n\nexport interface FocusAction {\n  list?: FocusItem[]\n  currentType?: string\n  type: string\n}\n\n// 这里设置 head 为可选是因为 drawerView 模块需要继承该 interface\nexport interface FocusProps {\n  head?: HeaderData\n  focusData: {\n    list: FocusItem[]\n    currentType: string\n  }\n  changeFocusList: (list: FocusItem[]) => FocusAction\n  // 改变表单类型\n  changeFocusType: (type: string) => FocusAction\n}\n\n// trivia module\nexport interface TriviaData {\n  id: number\n  details: string\n  link: string\n  user: string\n  group: number\n  name: string\n  last_update?: string\n}\n\nexport interface TriviaGroupData {\n  id?: number\n  name?: string\n  status?: number\n}\n\nexport interface TriviaState {\n  triviaList: TriviaData[] | []\n  groupList: TriviaGroupData[]\n  group: number\n  groupMap: {}\n  panelType: string\n  current: number\n  visible: boolean\n}\n\n// 用于各个模块的action.type类型检查\n\nexport enum ExerciseTypes {\n  DAILYCHARTS = 'dailycharts',\n  GOALLIST = 'goalList',\n  PROGRAMOVERVIEW = 'program-overview',\n  FOCUSLIST = 'focusList',\n  FOCUSTYPE = 'focusType',\n}\n","import React from 'react';\nimport { ErrorParams } from '@/index.d.ts';\nimport { addErrorRecord } from '@/service/system/service';\n\ninterface ErrorBoundaryState {\n    hasError: boolean;\n}\n\nclass ErrorBoundary extends React.Component<{}, ErrorBoundaryState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        };\n    }\n\n    static getDerivedStateFromError(error) {\n        return {\n            hasError: true\n        };\n    }\n\n    /**\n     * 捕获渲react的错误\n     * @param error 记录错误聚合信息和stack\n     * @param info 记录 componentStack\n     */\n    componentDidCatch(error, info) {\n        this.handleError('componentDidCatch', {\n            message: error.message,\n            stack: error.stack,\n            origin: info.componentStack\n        });\n    }\n\n    componentDidMount() {\n        window.addEventListener('error', (errorEvent) => {\n            this.handleError('error', errorEvent);\n        }, true);\n        // 捕获 promise 错误\n        window.addEventListener('unhandledrejection', (errorEvent) => {\n            this.handleError('unhandledrejection', errorEvent);\n        }, true);\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>Something went wrong.</h1>;;\n        }\n        return this.props.children;\n    }\n\n    setErrorType = (message: string) => {\n        let type = 'unkonwn error';\n        if (message.includes('SyntaxError')) {\n            type = 'SyntaxError';\n        } else if (message.includes('ReferenceError')) {\n            type = 'ReferenceError';\n        } else if (message.includes('404')) {\n            type = 'Request404';\n        } else if (message.includes('500')) {\n            type = 'Request500';\n        }\n        return type;\n    }\n\n    handleError = (type: string, data: any) => {\n        let errorParams: ErrorParams = {\n            project: 'YLONELY-GROWUP-React'\n        };\n        switch (type) {\n            case 'error':\n                errorParams['username'] = 'yh';\n                errorParams['path'] = data.target.origin;\n                errorParams['referrer'] = document.referrer;\n                errorParams['event'] = 'error';\n                errorParams['level'] = 1;\n                errorParams['stack'] = data.error.stack;\n                errorParams['message'] = data.message;\n                errorParams['useragent'] = data.target.navigator.userAgent;\n                errorParams['network'] = JSON.stringify(data.target.navigator.connection.effectiveType);\n                errorParams['appversion'] = data.target.navigator.appVersion;\n                errorParams['type'] = this.setErrorType(data.message);\n                break;\n            case 'unhandledrejection':\n                errorParams['username'] = 'yh';\n                errorParams['path'] = data.target.origin;\n                errorParams['referrer'] = document.referrer;\n                errorParams['event'] = 'unhandledrejection';\n                errorParams['level'] = 1;\n                errorParams['stack'] = data.reason.stack;\n                errorParams['message'] = data.reason.message;\n                errorParams['useragent'] = data.target.navigator.userAgent;\n                errorParams['network'] = JSON.stringify(data.target.navigator.connection.effectiveType);\n                errorParams['appversion'] = data.target.navigator.appVersion;\n                errorParams['type'] = this.setErrorType(data.reason.stack);\n                errorParams['origin'] = data.reason.config ? JSON.stringify(data.reason.config) : '';\n                break;\n            case 'componentDidCatch':\n                errorParams['username'] = 'yh';\n                errorParams['path'] = document.location.origin;\n                errorParams['referrer'] = document.referrer;\n                errorParams['event'] = 'componentDidCatch';\n                errorParams['level'] = 1;\n                errorParams['stack'] = data.stack;\n                errorParams['message'] = data.message;\n                errorParams['useragent'] = window.navigator.userAgent;\n                // @ts-ignore\n                errorParams['network'] = JSON.stringify(window.navigator.connection.effectiveType);\n                errorParams['appversion'] = window.navigator.appVersion;\n                errorParams['type'] = this.setErrorType(data.stack);\n                errorParams['origin'] = data.origin;\n                break;\n            default:\n                break;\n        }\n\n        // 用于控制添加错误本身请求错误\n        const stopLabel = errorParams.origin && String(errorParams.origin).includes('catchErrors');\n        addErrorRecord(errorParams, stopLabel);\n    }\n}\n\nexport default ErrorBoundary;","import React from 'react'\nimport { Layout } from 'antd'\n// 路由\nimport { BrowserRouter } from 'react-router-dom'\nimport Router from '@/router'\nimport { config as systemConfig } from '@/config/sysConfig'\nimport FlowHeader from '@/view/Header'\nimport FlowFooter from '@/view/Footer'\nimport ErrorBoundary from '@/components/ErrorBoundary'\n// 国际化\nimport { LocaleContext } from '@/cluster/context'\nimport { locale as customizeLocale } from '@/assets/locale'\nimport { ConfigProvider } from 'antd'\nimport zh_CN from 'antd/es/locale-provider/zh_CN'\nimport en_US from 'antd/es/locale-provider/en_US'\nimport moment from 'moment'\nimport 'moment/locale/zh-cn'\nimport '@/app.scss'\n\nconst { Content } = Layout\n\ninterface AppState {\n  locale: string\n  assets: {}\n  toggleLocale: (lang: string) => void\n}\n\nclass App extends React.Component<{}, AppState> {\n  constructor(props) {\n    super(props)\n    this.state = {\n      locale: 'en_us',\n      assets: customizeLocale.en_us,\n      toggleLocale: this.toggleLocal,\n    }\n  }\n\n  toggleLocal = (lang) => {\n    this.setState({\n      locale: lang,\n      assets: customizeLocale[lang],\n    })\n  }\n\n  render() {\n    return (\n      <ErrorBoundary>\n        <BrowserRouter>\n          <LocaleContext.Provider value={this.state}>\n            <ConfigProvider\n              locale={this.state.locale === 'zh_cn' ? zh_CN : en_US}\n            >\n              <div\n                className={`main ${systemConfig.hugeScreen ? 'max' : 'mac'}`}\n              >\n                <Layout className=\"layout\">\n                  <FlowHeader></FlowHeader>\n                  <Content className=\"content\">\n                    {/* 路由主体 */}\n                    <Router />\n                    {/* 路由主体 */}\n                  </Content>\n                  <FlowFooter></FlowFooter>\n                </Layout>\n              </div>\n            </ConfigProvider>\n          </LocaleContext.Provider>\n        </BrowserRouter>\n      </ErrorBoundary>\n    )\n  }\n\n  componentDidMount() {\n    // moment 设置全局 local\n    moment.locale(this.state.locale)\n  }\n}\n\nexport default App\n","import * as TS from '@/index.d.ts';\n\n/**\n * exercise daily module\n */\nlet defaultExerciseState: TS.ExerciseData = {\n    dailyList: [],\n    sumMap: {},\n};\n\nexport const exerciseData: (state: TS.ExerciseData, action: TS.ExerciseChartAction) => TS.ExerciseData = (state = defaultExerciseState, action) => {\n    switch(action.type) {\n        case TS.ExerciseTypes.DAILYCHARTS:\n            return {...state, ...{\n                dailyList: action.dailyList,\n                sumMap: action.sumMap\n            }};\n        default:\n            return state;\n    };\n}\n\n/**\n * goal list module\n */\nlet defaultGoalListState: TS.GoalListItem[] = [];\n\nexport const goalListData: (state: TS.GoalListItem[], action: TS.GoalListAction) => TS.GoalListItem[] = (state = defaultGoalListState, action) => {\n    switch(action.type) {\n        case TS.ExerciseTypes.GOALLIST:\n            return [...action.goalList];\n        default:\n            return state;\n    };\n}\n\n/**\n * program module\n */\nlet defaultProgramState: TS.ProgramOverviewTemplate = {\n    lang: {\n        list: [],\n        name: []\n    },\n    project: {\n        list: [],\n        name: []\n    },\n};\n\nexport const programOverviewData = (state = defaultProgramState, action) => {\n    if (action.type === TS.ExerciseTypes.PROGRAMOVERVIEW) {\n        return {...state, \n            lang: action.lang,\n            project: action.project\n        };\n    } else {\n        return state;\n    }\n}\n\nexport const focusData = (state = { list: [], currentType: '' }, action) => {\n    if (action.type === TS.ExerciseTypes.FOCUSLIST) {\n        return {\n            ...state,\n            list: action.list\n        };\n    } else if (action.type === TS.ExerciseTypes.FOCUSTYPE) {\n        return {\n            ...state,\n            currentType: action.currentType\n        }\n    } else {\n        return state;\n    }\n}\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport * as goalListData from '@/store/Exercise/reducer';\n\nlet store = createStore(\n    combineReducers({...goalListData}),\n    applyMiddleware(thunk)\n);\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from '@/app'\nimport { Provider } from 'react-redux'\nimport { hot } from 'react-hot-loader/root'\nimport store from '@/store/store'\nimport { Theme } from '@/config/colors'\nimport * as serviceWorker from '@/serviceWorker'\nimport '@/index.css'\n// @ts-ignore\nimport { setTheme } from 'bizcharts'\n\n// bizchart 设置主题，保持图的颜色一致，在 typescript 下引入出现问题，因此在引入该模块时，需要忽略 typescript 检查\nsetTheme(Theme)\n\n// set hot load module\n// hot(App)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n","import React from 'react'\nimport { Empty, Icon, Button, Col, Row } from 'antd'\nimport { LocaleContext } from '@/cluster/context'\nimport './index.scss'\n\nconst IconFont = Icon.createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_1509932_mtwffsv2db.js',\n})\n\n/**\n * 自定义Empty\n */\nfunction SuperEmptyMemo({ mTop }: { mTop?: string }) {\n  const styleObject = {\n    marginTop: mTop ? mTop : '32px',\n  }\n\n  return (\n    <Empty\n      style={styleObject}\n      image={Empty.PRESENTED_IMAGE_SIMPLE}\n      description=\"暂无数据\"\n    ></Empty>\n  )\n}\n\nexport const SuperEmpty = React.memo(SuperEmptyMemo)\n\n/**\n * header\n * 对于 function 组件通过 LocaleContext.Consumer 来获取 context\n */\nfunction HeaderMemo(props) {\n  return (\n    <LocaleContext.Consumer>\n      {/* value 在这里代表 this.context */}\n      {({ assets }) => (\n        <Row className=\"module-header\" type=\"flex\" justify=\"space-between\">\n          <Col className=\"text-box\">\n            <IconFont\n              className=\"icon\"\n              type={props.icon.type}\n              style={props.icon.style}\n            />\n            <span className=\"title\">{props.title}</span>\n          </Col>\n          <Col className=\"func-box\">\n            {props.showAddBtn && (\n              <Button\n                onClick={props.addEvent.bind(this, 'add')}\n                size=\"small\"\n                type=\"link\"\n              >\n                {assets.add}\n              </Button>\n            )}\n          </Col>\n        </Row>\n      )}\n    </LocaleContext.Consumer>\n  )\n}\n\nexport const Header = React.memo(HeaderMemo)\n\n/**\n * 自定义icon\n */\nfunction SuperIconMemo(props) {\n  return (\n    <IconFont\n      className={props.className}\n      type={props.type}\n      style={props.style}\n    />\n  )\n}\n\nexport const SuperIcon = React.memo(SuperIconMemo)\n","export const colors: string[] = [ '#1890FF', '#2FC25B', '#FACC14', '#223273', '#8543E0', '#13C2C2', '#3436C7', '#F04864' ];\n\nexport const colorsPlus: string[] = [ '#1890FF', '#41D9C7', '#2FC25B', '#FACC14', '#E6965C', '#223273', '#7564CC', '#8543E0',\n'#5C8EE6', '#13C2C2', '#5CA3E6', '#3436C7', '#B381E6', '#F04864', '#D598D9' ];\n\nexport const Theme = {\n  colors: colors,\n  colors_16: colorsPlus,\n  colors_pie: colors,\n  colors_pie_16: colorsPlus,\n};\n\n/**\n * 自定义色值，蓝色渐变\n */\nexport const rankBlueColor: string[] = [\n  '#0D47A1', '#01579B', '#1565C0', '#0277BD', '#1976D2', '#0288D1',\n  '#1E88E5', '#0091EA', '#039BE5', '#03A9F4', '#29B6F6'];\n\nexport const languageColors = {\n  'uncategorized': '#bdc1c6',\n  'react': '#61dafb',\n  'react hook': '#61dafb',\n}\n\nexport const priorityColors: string[] = [\n  '#f5222d', '#ef613e', '#1890ff', '#52c41a'\n];\n","import {\n  ExerciseChartAction,\n  ExerciseData,\n  GoalListAction,\n  GoalListItem,\n  ProgramOverviewAction,\n  ProgramOverviewTemplate,\n  FocusItem,\n  FocusAction,\n} from '@/index.d.ts'\n\nexport const changeChart: (...ExerciseData) => ExerciseChartAction = (\n  dailyList,\n  sumMap\n) => {\n  return {\n    type: 'dailycharts',\n    dailyList,\n    sumMap,\n  }\n}\n\nexport const changeGoalList: (goalList: GoalListItem[]) => GoalListAction = (\n  goalList\n) => {\n  return {\n    type: 'goalList',\n    goalList,\n  }\n}\n\nexport const changeProgramOverview: (\n  params: ProgramOverviewTemplate\n) => ProgramOverviewAction = (data) => {\n  return {\n    type: 'program-overview',\n    ...data,\n  }\n}\n\nexport const changeFocusList: (list: FocusItem[]) => FocusAction = (data) => {\n  return {\n    list: data,\n    type: 'focusList',\n  }\n}\n\nexport const changeFocusType: (type: string) => FocusAction = (data) => {\n  return {\n    currentType: data,\n    type: 'focusType',\n  }\n}\n"],"sourceRoot":""}